=== tests/cases/conformance/es6/restParameters/emitRestParametersFunctionExpressionES6.ts ===
var funcExp = (...rest) => { }
>funcExp : Symbol(funcExp, Decl(emitRestParametersFunctionExpressionES6.ts, 0, 3))
>(...rest) => { } : Symbol((Anonymous function), Decl(emitRestParametersFunctionExpressionES6.ts, 0, 13))
>rest : Symbol(rest, Decl(emitRestParametersFunctionExpressionES6.ts, 0, 15))

var funcExp1 = (X: number, ...rest) => { }
>funcExp1 : Symbol(funcExp1, Decl(emitRestParametersFunctionExpressionES6.ts, 1, 3))
>(X: number, ...rest) => { } : Symbol((Anonymous function), Decl(emitRestParametersFunctionExpressionES6.ts, 1, 14))
>X : Symbol(X, Decl(emitRestParametersFunctionExpressionES6.ts, 1, 16))
>rest : Symbol(rest, Decl(emitRestParametersFunctionExpressionES6.ts, 1, 26))

var funcExp2 = function (...rest) { }
>funcExp2 : Symbol(funcExp2, Decl(emitRestParametersFunctionExpressionES6.ts, 2, 3))
>function (...rest) { } : Symbol((Anonymous function), Decl(emitRestParametersFunctionExpressionES6.ts, 2, 14))
>rest : Symbol(rest, Decl(emitRestParametersFunctionExpressionES6.ts, 2, 25))

var funcExp3 = (function (...rest) { })()
>funcExp3 : Symbol(funcExp3, Decl(emitRestParametersFunctionExpressionES6.ts, 3, 3))
>function (...rest) { } : Symbol((Anonymous function), Decl(emitRestParametersFunctionExpressionES6.ts, 3, 16))
>rest : Symbol(rest, Decl(emitRestParametersFunctionExpressionES6.ts, 3, 26))

