=== tests/cases/compiler/restIntersectionOrIntersection.ts ===
var intersection: { x: number, y: number } & { w: string, z: string };
>intersection : Symbol(intersection, Decl(restIntersectionOrIntersection.ts, 0, 3))
>x : Symbol(x, Decl(restIntersectionOrIntersection.ts, 0, 19))
>y : Symbol(y, Decl(restIntersectionOrIntersection.ts, 0, 30))
>w : Symbol(w, Decl(restIntersectionOrIntersection.ts, 0, 46))
>z : Symbol(z, Decl(restIntersectionOrIntersection.ts, 0, 57))

var union: { a: number, c: boolean } | { a: string, b: string };
>union : Symbol(union, Decl(restIntersectionOrIntersection.ts, 1, 3))
>a : Symbol(a, Decl(restIntersectionOrIntersection.ts, 1, 12))
>c : Symbol(c, Decl(restIntersectionOrIntersection.ts, 1, 23))
>a : Symbol(a, Decl(restIntersectionOrIntersection.ts, 1, 40))
>b : Symbol(b, Decl(restIntersectionOrIntersection.ts, 1, 51))


var rest1: { y: number, w: string, z: string };
>rest1 : Symbol(rest1, Decl(restIntersectionOrIntersection.ts, 4, 3), Decl(restIntersectionOrIntersection.ts, 5, 7))
>y : Symbol(y, Decl(restIntersectionOrIntersection.ts, 4, 12))
>w : Symbol(w, Decl(restIntersectionOrIntersection.ts, 4, 23))
>z : Symbol(z, Decl(restIntersectionOrIntersection.ts, 4, 34))

var {x, ...rest1 } = intersection;
>x : Symbol(x, Decl(restIntersectionOrIntersection.ts, 5, 5))
>rest1 : Symbol(rest1, Decl(restIntersectionOrIntersection.ts, 4, 3), Decl(restIntersectionOrIntersection.ts, 5, 7))
>intersection : Symbol(intersection, Decl(restIntersectionOrIntersection.ts, 0, 3))

var rest2: { c: boolean } | { b: string };
>rest2 : Symbol(rest2, Decl(restIntersectionOrIntersection.ts, 7, 3), Decl(restIntersectionOrIntersection.ts, 8, 7))
>c : Symbol(c, Decl(restIntersectionOrIntersection.ts, 7, 12))
>b : Symbol(b, Decl(restIntersectionOrIntersection.ts, 7, 29))

var {a, ...rest2 } = union;
>a : Symbol(a, Decl(restIntersectionOrIntersection.ts, 8, 5))
>rest2 : Symbol(rest2, Decl(restIntersectionOrIntersection.ts, 7, 3), Decl(restIntersectionOrIntersection.ts, 8, 7))
>union : Symbol(union, Decl(restIntersectionOrIntersection.ts, 1, 3))


