=== tests/cases/compiler/declFileTypeAnnotationParenType.ts ===

class c {
>c : Symbol(c, Decl(declFileTypeAnnotationParenType.ts, 0, 0))

    private p: string;
>p : Symbol(p, Decl(declFileTypeAnnotationParenType.ts, 1, 9))
}

var x: (() => c)[] = [() => new c()];
>x : Symbol(x, Decl(declFileTypeAnnotationParenType.ts, 5, 3))
>c : Symbol(c, Decl(declFileTypeAnnotationParenType.ts, 0, 0))
>() => new c() : Symbol((Anonymous function), Decl(declFileTypeAnnotationParenType.ts, 5, 22))
>c : Symbol(c, Decl(declFileTypeAnnotationParenType.ts, 0, 0))

var y = [() => new c()];
>y : Symbol(y, Decl(declFileTypeAnnotationParenType.ts, 6, 3))
>() => new c() : Symbol((Anonymous function), Decl(declFileTypeAnnotationParenType.ts, 6, 9))
>c : Symbol(c, Decl(declFileTypeAnnotationParenType.ts, 0, 0))

var k: (() => c) | string = (() => new c()) || "";
>k : Symbol(k, Decl(declFileTypeAnnotationParenType.ts, 8, 3))
>c : Symbol(c, Decl(declFileTypeAnnotationParenType.ts, 0, 0))
>() => new c() : Symbol((Anonymous function), Decl(declFileTypeAnnotationParenType.ts, 8, 29))
>c : Symbol(c, Decl(declFileTypeAnnotationParenType.ts, 0, 0))

var l = (() => new c()) || "";
>l : Symbol(l, Decl(declFileTypeAnnotationParenType.ts, 9, 3))
>() => new c() : Symbol((Anonymous function), Decl(declFileTypeAnnotationParenType.ts, 9, 9))
>c : Symbol(c, Decl(declFileTypeAnnotationParenType.ts, 0, 0))

