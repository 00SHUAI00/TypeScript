=== tests/cases/conformance/classes/classDeclarations/mergedInheritedClassInterface.ts ===
interface BaseInterface {
>BaseInterface : BaseInterface

    required: number;
>required : number

    optional?: number;
>optional : number
}

declare class BaseClass {
>BaseClass : BaseClass

    baseMethod();
>baseMethod : () => any

    baseNumber: number;
>baseNumber : number
}

interface Child extends BaseInterface {
>Child : Child
>BaseInterface : BaseInterface

    additional: number;
>additional : number
}

declare class Child extends BaseClass {
>Child : Child
>BaseClass : BaseClass

    classNumber: number;
>classNumber : number

    method();
>method : () => any
}

// checks if properties actually were merged
var child : Child;
>child : Child
>Child : Child

child.required;
>child.required : number
>child : Child
>required : number

child.optional;
>child.optional : number
>child : Child
>optional : number

child.additional;
>child.additional : number
>child : Child
>additional : number

child.baseNumber;
>child.baseNumber : number
>child : Child
>baseNumber : number

child.classNumber;
>child.classNumber : number
>child : Child
>classNumber : number

child.baseMethod();
>child.baseMethod() : any
>child.baseMethod : () => any
>child : Child
>baseMethod : () => any

child.method();
>child.method() : any
>child.method : () => any
>child : Child
>method : () => any

