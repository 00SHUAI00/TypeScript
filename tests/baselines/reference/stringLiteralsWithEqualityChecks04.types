=== tests/cases/conformance/types/stringLiteral/stringLiteralsWithEqualityChecks04.ts ===
interface Runnable {
>Runnable : Runnable

    isRunning: boolean;
>isRunning : boolean
}

interface Refrigerator {
>Refrigerator : Refrigerator

    makesFoodGoBrrr: boolean;
>makesFoodGoBrrr : boolean
}

let x: string;
>x : string

let y: "foo" | Refrigerator;
>y : "foo" | Refrigerator
>Refrigerator : Refrigerator

let b: boolean;
>b : boolean

b = x == y;
>b = x == y : boolean
>b : boolean
>x == y : boolean
>x : string
>y : "foo" | Refrigerator

b = "foo" == y
>b = "foo" == y : boolean
>b : boolean
>"foo" == y : boolean
>"foo" : string
>y : "foo" | Refrigerator

b = y == "foo";
>b = y == "foo" : boolean
>b : boolean
>y == "foo" : boolean
>y : "foo" | Refrigerator
>"foo" : string

b = "foo" == "bar";
>b = "foo" == "bar" : boolean
>b : boolean
>"foo" == "bar" : boolean
>"foo" : string
>"bar" : string

b = x != y;
>b = x != y : boolean
>b : boolean
>x != y : boolean
>x : string
>y : "foo" | Refrigerator

b = "foo" != y
>b = "foo" != y : boolean
>b : boolean
>"foo" != y : boolean
>"foo" : string
>y : "foo" | Refrigerator

b = y != "foo";
>b = y != "foo" : boolean
>b : boolean
>y != "foo" : boolean
>y : "foo" | Refrigerator
>"foo" : string

b = "foo" != "bar";
>b = "foo" != "bar" : boolean
>b : boolean
>"foo" != "bar" : boolean
>"foo" : string
>"bar" : string


