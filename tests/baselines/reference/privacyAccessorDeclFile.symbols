=== tests/cases/compiler/privacyAccessorDeclFile_externalModule.ts ===

class privateClass {
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
}

export class publicClass {
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
}

export class publicClassWithWithPrivateGetAccessorTypes {
>publicClassWithWithPrivateGetAccessorTypes : Symbol(publicClassWithWithPrivateGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 5, 1))

    static get myPublicStaticMethod(): privateClass { // Error
>myPublicStaticMethod : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 7, 57))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))

        return null;
    }
    private static get myPrivateStaticMethod(): privateClass {
>myPrivateStaticMethod : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 10, 5))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))

        return null;
    }
    get myPublicMethod(): privateClass { // Error
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 13, 5))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))

        return null;
    }
    private get myPrivateMethod(): privateClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 16, 5))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))

        return null;
    }
    static get myPublicStaticMethod1() { // Error
>myPublicStaticMethod1 : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 19, 5))

        return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
    private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 22, 5))

        return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
    get myPublicMethod1() { // Error
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 25, 5))

        return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
    private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 28, 5))

        return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
}

export class publicClassWithWithPublicGetAccessorTypes {
>publicClassWithWithPublicGetAccessorTypes : Symbol(publicClassWithWithPublicGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 32, 1))

    static get myPublicStaticMethod(): publicClass {
>myPublicStaticMethod : Symbol(publicClassWithWithPublicGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 34, 56))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))

        return null;
    }
    private static get myPrivateStaticMethod(): publicClass {
>myPrivateStaticMethod : Symbol(publicClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 37, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))

        return null;
    }
    get myPublicMethod(): publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 40, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))

        return null;
    }
    private get myPrivateMethod(): publicClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 43, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))

        return null;
    }
    static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(publicClassWithWithPublicGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 46, 5))

        return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
    private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(publicClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 49, 5))

        return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
    get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 52, 5))

        return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
    private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 55, 5))

        return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
}

class privateClassWithWithPrivateGetAccessorTypes {
>privateClassWithWithPrivateGetAccessorTypes : Symbol(privateClassWithWithPrivateGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 59, 1))

    static get myPublicStaticMethod(): privateClass {
>myPublicStaticMethod : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 61, 51))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))

        return null;
    }
    private static get myPrivateStaticMethod(): privateClass {
>myPrivateStaticMethod : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 64, 5))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))

        return null;
    }
    get myPublicMethod(): privateClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 67, 5))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))

        return null;
    }
    private get myPrivateMethod(): privateClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 70, 5))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))

        return null;
    }
    static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 73, 5))

        return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
    private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 76, 5))

        return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
    get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 79, 5))

        return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
    private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 82, 5))

        return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
}

class privateClassWithWithPublicGetAccessorTypes {
>privateClassWithWithPublicGetAccessorTypes : Symbol(privateClassWithWithPublicGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 86, 1))

    static get myPublicStaticMethod(): publicClass {
>myPublicStaticMethod : Symbol(privateClassWithWithPublicGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 88, 50))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))

        return null;
    }
    private static get myPrivateStaticMethod(): publicClass {
>myPrivateStaticMethod : Symbol(privateClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 91, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))

        return null;
    }
    get myPublicMethod(): publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 94, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))

        return null;
    }
    private get myPrivateMethod(): publicClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 97, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))

        return null;
    }
    static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(privateClassWithWithPublicGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 100, 5))

        return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
    private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(privateClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 103, 5))

        return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
    get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 106, 5))

        return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
    private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 109, 5))

        return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
}

export class publicClassWithWithPrivateSetAccessorTypes {
>publicClassWithWithPrivateSetAccessorTypes : Symbol(publicClassWithWithPrivateSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 113, 1))

    static set myPublicStaticMethod(param: privateClass) { // Error
>myPublicStaticMethod : Symbol(publicClassWithWithPrivateSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 115, 57))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 116, 36))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
    private static set myPrivateStaticMethod(param: privateClass) {
>myPrivateStaticMethod : Symbol(publicClassWithWithPrivateSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 117, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 118, 45))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
    set myPublicMethod(param: privateClass) { // Error
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 119, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 120, 23))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
    private set myPrivateMethod(param: privateClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 121, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 122, 32))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
}

export class publicClassWithWithPublicSetAccessorTypes {
>publicClassWithWithPublicSetAccessorTypes : Symbol(publicClassWithWithPublicSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 124, 1))

    static set myPublicStaticMethod(param: publicClass) {
>myPublicStaticMethod : Symbol(publicClassWithWithPublicSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 126, 56))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 127, 36))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
    private static set myPrivateStaticMethod(param: publicClass) {
>myPrivateStaticMethod : Symbol(publicClassWithWithPublicSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 128, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 129, 45))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
    set myPublicMethod(param: publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 130, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 131, 23))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
    private set myPrivateMethod(param: publicClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 132, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 133, 32))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
}

class privateClassWithWithPrivateSetAccessorTypes {
>privateClassWithWithPrivateSetAccessorTypes : Symbol(privateClassWithWithPrivateSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 135, 1))

    static set myPublicStaticMethod(param: privateClass) {
>myPublicStaticMethod : Symbol(privateClassWithWithPrivateSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 137, 51))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 138, 36))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
    private static set myPrivateStaticMethod(param: privateClass) {
>myPrivateStaticMethod : Symbol(privateClassWithWithPrivateSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 139, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 140, 45))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
    set myPublicMethod(param: privateClass) { 
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 141, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 142, 23))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
    private set myPrivateMethod(param: privateClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 143, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 144, 32))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 0, 0))
    }
}

class privateClassWithWithPublicSetAccessorTypes {
>privateClassWithWithPublicSetAccessorTypes : Symbol(privateClassWithWithPublicSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 146, 1))

    static set myPublicStaticMethod(param: publicClass) {
>myPublicStaticMethod : Symbol(privateClassWithWithPublicSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 148, 50))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 149, 36))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
    private static set myPrivateStaticMethod(param: publicClass) {
>myPrivateStaticMethod : Symbol(privateClassWithWithPublicSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 150, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 151, 45))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
    set myPublicMethod(param: publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 152, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 153, 23))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
    private set myPrivateMethod(param: publicClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 154, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 155, 32))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 2, 1))
    }
}

export class publicClassWithPrivateModuleGetAccessorTypes {
>publicClassWithPrivateModuleGetAccessorTypes : Symbol(publicClassWithPrivateModuleGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 157, 1))

    static get myPublicStaticMethod(): privateModule.publicClass { // Error
>myPublicStaticMethod : Symbol(publicClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 159, 59))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

        return null;
    }
    get myPublicMethod(): privateModule.publicClass { // Error
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 162, 5))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

        return null;
    }
    static get myPublicStaticMethod1() { // Error
>myPublicStaticMethod1 : Symbol(publicClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 165, 5))

        return new privateModule.publicClass();
>privateModule.publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
    }
    get myPublicMethod1() { // Error
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 168, 5))

        return new privateModule.publicClass();
>privateModule.publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
    }
}

export class publicClassWithPrivateModuleSetAccessorTypes {
>publicClassWithPrivateModuleSetAccessorTypes : Symbol(publicClassWithPrivateModuleSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 172, 1))

    static set myPublicStaticMethod(param: privateModule.publicClass) { // Error
>myPublicStaticMethod : Symbol(publicClassWithPrivateModuleSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 174, 59))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 175, 36))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
    }
    set myPublicMethod(param: privateModule.publicClass) { // Error
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 176, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 177, 23))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
    }
}

class privateClassWithPrivateModuleGetAccessorTypes {
>privateClassWithPrivateModuleGetAccessorTypes : Symbol(privateClassWithPrivateModuleGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 179, 1))

    static get myPublicStaticMethod(): privateModule.publicClass {
>myPublicStaticMethod : Symbol(privateClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 181, 53))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

        return null;
    }
    get myPublicMethod(): privateModule.publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 184, 5))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

        return null;
    }
    static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(privateClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 187, 5))

        return new privateModule.publicClass();
>privateModule.publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
    }
    get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 190, 5))

        return new privateModule.publicClass();
>privateModule.publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
    }
}

class privateClassWithPrivateModuleSetAccessorTypes {
>privateClassWithPrivateModuleSetAccessorTypes : Symbol(privateClassWithPrivateModuleSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 194, 1))

    static set myPublicStaticMethod(param: privateModule.publicClass) {
>myPublicStaticMethod : Symbol(privateClassWithPrivateModuleSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 196, 53))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 197, 36))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
    }
    set myPublicMethod(param: privateModule.publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 198, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 199, 23))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
    }
}

export module publicModule {
>publicModule : Symbol(publicModule, Decl(privacyAccessorDeclFile_externalModule.ts, 201, 1))

    class privateClass {
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
    }

    export class publicClass {
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
    }
    export class publicClassWithWithPrivateGetAccessorTypes {
>publicClassWithWithPrivateGetAccessorTypes : Symbol(publicClassWithWithPrivateGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 208, 5))

        static get myPublicStaticMethod(): privateClass { // Error
>myPublicStaticMethod : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 209, 61))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))

            return null;
        }
        private static get myPrivateStaticMethod(): privateClass {
>myPrivateStaticMethod : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 212, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))

            return null;
        }
        get myPublicMethod(): privateClass { // Error
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 215, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))

            return null;
        }
        private get myPrivateMethod(): privateClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 218, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))

            return null;
        }
        static get myPublicStaticMethod1() { // Error
>myPublicStaticMethod1 : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 221, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
        private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 224, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
        get myPublicMethod1() { // Error
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 227, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
        private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 230, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
    }

    export class publicClassWithWithPublicGetAccessorTypes {
>publicClassWithWithPublicGetAccessorTypes : Symbol(publicClassWithWithPublicGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 234, 5))

        static get myPublicStaticMethod(): publicClass {
>myPublicStaticMethod : Symbol(publicClassWithWithPublicGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 236, 60))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))

            return null;
        }
        private static get myPrivateStaticMethod(): publicClass {
>myPrivateStaticMethod : Symbol(publicClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 239, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))

            return null;
        }
        get myPublicMethod(): publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 242, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))

            return null;
        }
        private get myPrivateMethod(): publicClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 245, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))

            return null;
        }
        static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(publicClassWithWithPublicGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 248, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
        private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(publicClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 251, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
        get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 254, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
        private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 257, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
    }

    class privateClassWithWithPrivateGetAccessorTypes {
>privateClassWithWithPrivateGetAccessorTypes : Symbol(privateClassWithWithPrivateGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 261, 5))

        static get myPublicStaticMethod(): privateClass {
>myPublicStaticMethod : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 263, 55))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))

            return null;
        }
        private static get myPrivateStaticMethod(): privateClass {
>myPrivateStaticMethod : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 266, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))

            return null;
        }
        get myPublicMethod(): privateClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 269, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))

            return null;
        }
        private get myPrivateMethod(): privateClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 272, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))

            return null;
        }
        static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 275, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
        private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 278, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
        get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 281, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
        private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 284, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
    }

    class privateClassWithWithPublicGetAccessorTypes {
>privateClassWithWithPublicGetAccessorTypes : Symbol(privateClassWithWithPublicGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 288, 5))

        static get myPublicStaticMethod(): publicClass {
>myPublicStaticMethod : Symbol(privateClassWithWithPublicGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 290, 54))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))

            return null;
        }
        private static get myPrivateStaticMethod(): publicClass {
>myPrivateStaticMethod : Symbol(privateClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 293, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))

            return null;
        }
        get myPublicMethod(): publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 296, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))

            return null;
        }
        private get myPrivateMethod(): publicClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 299, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))

            return null;
        }
        static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(privateClassWithWithPublicGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 302, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
        private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(privateClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 305, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
        get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 308, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
        private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 311, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
    }

    export class publicClassWithWithPrivateSetAccessorTypes {
>publicClassWithWithPrivateSetAccessorTypes : Symbol(publicClassWithWithPrivateSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 315, 5))

        static set myPublicStaticMethod(param: privateClass) { // Error
>myPublicStaticMethod : Symbol(publicClassWithWithPrivateSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 317, 61))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 318, 40))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
        private static set myPrivateStaticMethod(param: privateClass) {
>myPrivateStaticMethod : Symbol(publicClassWithWithPrivateSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 319, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 320, 49))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
        set myPublicMethod(param: privateClass) { // Error
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 321, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 322, 27))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
        private set myPrivateMethod(param: privateClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 323, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 324, 36))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
    }

    export class publicClassWithWithPublicSetAccessorTypes {
>publicClassWithWithPublicSetAccessorTypes : Symbol(publicClassWithWithPublicSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 326, 5))

        static set myPublicStaticMethod(param: publicClass) {
>myPublicStaticMethod : Symbol(publicClassWithWithPublicSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 328, 60))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 329, 40))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
        private static set myPrivateStaticMethod(param: publicClass) {
>myPrivateStaticMethod : Symbol(publicClassWithWithPublicSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 330, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 331, 49))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
        set myPublicMethod(param: publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 332, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 333, 27))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
        private set myPrivateMethod(param: publicClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 334, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 335, 36))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
    }

    class privateClassWithWithPrivateSetAccessorTypes {
>privateClassWithWithPrivateSetAccessorTypes : Symbol(privateClassWithWithPrivateSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 337, 5))

        static set myPublicStaticMethod(param: privateClass) {
>myPublicStaticMethod : Symbol(privateClassWithWithPrivateSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 339, 55))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 340, 40))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
        private static set myPrivateStaticMethod(param: privateClass) {
>myPrivateStaticMethod : Symbol(privateClassWithWithPrivateSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 341, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 342, 49))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
        set myPublicMethod(param: privateClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 343, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 344, 27))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
        private set myPrivateMethod(param: privateClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 345, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 346, 36))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 203, 28))
        }
    }

    class privateClassWithWithPublicSetAccessorTypes {
>privateClassWithWithPublicSetAccessorTypes : Symbol(privateClassWithWithPublicSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 348, 5))

        static set myPublicStaticMethod(param: publicClass) {
>myPublicStaticMethod : Symbol(privateClassWithWithPublicSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 350, 54))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 351, 40))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
        private static set myPrivateStaticMethod(param: publicClass) {
>myPrivateStaticMethod : Symbol(privateClassWithWithPublicSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 352, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 353, 49))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
        set myPublicMethod(param: publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 354, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 355, 27))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
        private set myPrivateMethod(param: publicClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 356, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 357, 36))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 205, 5))
        }
    }

    export class publicClassWithPrivateModuleGetAccessorTypes {
>publicClassWithPrivateModuleGetAccessorTypes : Symbol(publicClassWithPrivateModuleGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 359, 5))

        static get myPublicStaticMethod(): privateModule.publicClass { // Error
>myPublicStaticMethod : Symbol(publicClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 361, 63))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        get myPublicMethod(): privateModule.publicClass { // Error
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 364, 9))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        static get myPublicStaticMethod1() { // Error
>myPublicStaticMethod1 : Symbol(publicClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 367, 9))

            return new privateModule.publicClass();
>privateModule.publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        get myPublicMethod1() { // Error
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 370, 9))

            return new privateModule.publicClass();
>privateModule.publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
    }

    export class publicClassWithPrivateModuleSetAccessorTypes {
>publicClassWithPrivateModuleSetAccessorTypes : Symbol(publicClassWithPrivateModuleSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 374, 5))

        static set myPublicStaticMethod(param: privateModule.publicClass) { // Error
>myPublicStaticMethod : Symbol(publicClassWithPrivateModuleSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 376, 63))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 377, 40))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        set myPublicMethod(param: privateModule.publicClass) { // Error
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 378, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 379, 27))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
    }

    class privateClassWithPrivateModuleGetAccessorTypes {
>privateClassWithPrivateModuleGetAccessorTypes : Symbol(privateClassWithPrivateModuleGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 381, 5))

        static get myPublicStaticMethod(): privateModule.publicClass {
>myPublicStaticMethod : Symbol(privateClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 383, 57))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        get myPublicMethod(): privateModule.publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 386, 9))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(privateClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 389, 9))

            return new privateModule.publicClass();
>privateModule.publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 392, 9))

            return new privateModule.publicClass();
>privateModule.publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
    }

    class privateClassWithPrivateModuleSetAccessorTypes {
>privateClassWithPrivateModuleSetAccessorTypes : Symbol(privateClassWithPrivateModuleSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 396, 5))

        static set myPublicStaticMethod(param: privateModule.publicClass) {
>myPublicStaticMethod : Symbol(privateClassWithPrivateModuleSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 398, 57))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 399, 40))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        set myPublicMethod(param: privateModule.publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 400, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 401, 27))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
    }
}

module privateModule {
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))

    class privateClass {
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
    }

    export class publicClass {
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
    }
    export class publicClassWithWithPrivateGetAccessorTypes {
>publicClassWithWithPrivateGetAccessorTypes : Symbol(publicClassWithWithPrivateGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 411, 5))

        static get myPublicStaticMethod(): privateClass { 
>myPublicStaticMethod : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 412, 61))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))

            return null;
        }
        private static get myPrivateStaticMethod(): privateClass {
>myPrivateStaticMethod : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 415, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))

            return null;
        }
        get myPublicMethod(): privateClass { 
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 418, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))

            return null;
        }
        private get myPrivateMethod(): privateClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 421, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))

            return null;
        }
        static get myPublicStaticMethod1() { 
>myPublicStaticMethod1 : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 424, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
        private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 427, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
        get myPublicMethod1() { 
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 430, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
        private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 433, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
    }

    export class publicClassWithWithPublicGetAccessorTypes {
>publicClassWithWithPublicGetAccessorTypes : Symbol(publicClassWithWithPublicGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 437, 5))

        static get myPublicStaticMethod(): publicClass {
>myPublicStaticMethod : Symbol(publicClassWithWithPublicGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 439, 60))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        private static get myPrivateStaticMethod(): publicClass {
>myPrivateStaticMethod : Symbol(publicClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 442, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        get myPublicMethod(): publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 445, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        private get myPrivateMethod(): publicClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 448, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(publicClassWithWithPublicGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 451, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(publicClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 454, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 457, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 460, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
    }

    class privateClassWithWithPrivateGetAccessorTypes {
>privateClassWithWithPrivateGetAccessorTypes : Symbol(privateClassWithWithPrivateGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 464, 5))

        static get myPublicStaticMethod(): privateClass {
>myPublicStaticMethod : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 466, 55))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))

            return null;
        }
        private static get myPrivateStaticMethod(): privateClass {
>myPrivateStaticMethod : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 469, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))

            return null;
        }
        get myPublicMethod(): privateClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 472, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))

            return null;
        }
        private get myPrivateMethod(): privateClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 475, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))

            return null;
        }
        static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 478, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
        private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 481, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
        get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 484, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
        private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 487, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
    }

    class privateClassWithWithPublicGetAccessorTypes {
>privateClassWithWithPublicGetAccessorTypes : Symbol(privateClassWithWithPublicGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 491, 5))

        static get myPublicStaticMethod(): publicClass {
>myPublicStaticMethod : Symbol(privateClassWithWithPublicGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 493, 54))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        private static get myPrivateStaticMethod(): publicClass {
>myPrivateStaticMethod : Symbol(privateClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 496, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        get myPublicMethod(): publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 499, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        private get myPrivateMethod(): publicClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 502, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(privateClassWithWithPublicGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 505, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(privateClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 508, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 511, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 514, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
    }

    export class publicClassWithWithPrivateSetAccessorTypes {
>publicClassWithWithPrivateSetAccessorTypes : Symbol(publicClassWithWithPrivateSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 518, 5))

        static set myPublicStaticMethod(param: privateClass) { 
>myPublicStaticMethod : Symbol(publicClassWithWithPrivateSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 520, 61))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 521, 40))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
        private static set myPrivateStaticMethod(param: privateClass) {
>myPrivateStaticMethod : Symbol(publicClassWithWithPrivateSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 522, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 523, 49))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
        set myPublicMethod(param: privateClass) { 
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 524, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 525, 27))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
        private set myPrivateMethod(param: privateClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 526, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 527, 36))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
    }

    export class publicClassWithWithPublicSetAccessorTypes {
>publicClassWithWithPublicSetAccessorTypes : Symbol(publicClassWithWithPublicSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 529, 5))

        static set myPublicStaticMethod(param: publicClass) {
>myPublicStaticMethod : Symbol(publicClassWithWithPublicSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 531, 60))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 532, 40))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        private static set myPrivateStaticMethod(param: publicClass) {
>myPrivateStaticMethod : Symbol(publicClassWithWithPublicSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 533, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 534, 49))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        set myPublicMethod(param: publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 535, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 536, 27))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        private set myPrivateMethod(param: publicClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 537, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 538, 36))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
    }

    class privateClassWithWithPrivateSetAccessorTypes {
>privateClassWithWithPrivateSetAccessorTypes : Symbol(privateClassWithWithPrivateSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 540, 5))

        static set myPublicStaticMethod(param: privateClass) {
>myPublicStaticMethod : Symbol(privateClassWithWithPrivateSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 542, 55))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 543, 40))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
        private static set myPrivateStaticMethod(param: privateClass) {
>myPrivateStaticMethod : Symbol(privateClassWithWithPrivateSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 544, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 545, 49))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
        set myPublicMethod(param: privateClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 546, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 547, 27))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
        private set myPrivateMethod(param: privateClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 548, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 549, 36))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_externalModule.ts, 406, 22))
        }
    }

    class privateClassWithWithPublicSetAccessorTypes {
>privateClassWithWithPublicSetAccessorTypes : Symbol(privateClassWithWithPublicSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 551, 5))

        static set myPublicStaticMethod(param: publicClass) {
>myPublicStaticMethod : Symbol(privateClassWithWithPublicSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 553, 54))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 554, 40))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        private static set myPrivateStaticMethod(param: publicClass) {
>myPrivateStaticMethod : Symbol(privateClassWithWithPublicSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 555, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 556, 49))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        set myPublicMethod(param: publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 557, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 558, 27))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        private set myPrivateMethod(param: publicClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 559, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 560, 36))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
    }

    export class publicClassWithPrivateModuleGetAccessorTypes {
>publicClassWithPrivateModuleGetAccessorTypes : Symbol(publicClassWithPrivateModuleGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 562, 5))

        static get myPublicStaticMethod(): privateModule.publicClass { 
>myPublicStaticMethod : Symbol(publicClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 564, 63))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        get myPublicMethod(): privateModule.publicClass { 
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 567, 9))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        static get myPublicStaticMethod1() { 
>myPublicStaticMethod1 : Symbol(publicClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 570, 9))

            return new privateModule.publicClass();
>privateModule.publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        get myPublicMethod1() { 
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 573, 9))

            return new privateModule.publicClass();
>privateModule.publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
    }

    export class publicClassWithPrivateModuleSetAccessorTypes {
>publicClassWithPrivateModuleSetAccessorTypes : Symbol(publicClassWithPrivateModuleSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 577, 5))

        static set myPublicStaticMethod(param: privateModule.publicClass) { 
>myPublicStaticMethod : Symbol(publicClassWithPrivateModuleSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 579, 63))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 580, 40))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        set myPublicMethod(param: privateModule.publicClass) { 
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 581, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 582, 27))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
    }

    class privateClassWithPrivateModuleGetAccessorTypes {
>privateClassWithPrivateModuleGetAccessorTypes : Symbol(privateClassWithPrivateModuleGetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 584, 5))

        static get myPublicStaticMethod(): privateModule.publicClass {
>myPublicStaticMethod : Symbol(privateClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 586, 57))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        get myPublicMethod(): privateModule.publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 589, 9))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))

            return null;
        }
        static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(privateClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 592, 9))

            return new privateModule.publicClass();
>privateModule.publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_externalModule.ts, 595, 9))

            return new privateModule.publicClass();
>privateModule.publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
    }

    class privateClassWithPrivateModuleSetAccessorTypes {
>privateClassWithPrivateModuleSetAccessorTypes : Symbol(privateClassWithPrivateModuleSetAccessorTypes, Decl(privacyAccessorDeclFile_externalModule.ts, 599, 5))

        static set myPublicStaticMethod(param: privateModule.publicClass) {
>myPublicStaticMethod : Symbol(privateClassWithPrivateModuleSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 601, 57))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 602, 40))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
        set myPublicMethod(param: privateModule.publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_externalModule.ts, 603, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_externalModule.ts, 604, 27))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_externalModule.ts, 404, 1))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_externalModule.ts, 408, 5))
        }
    }
}

=== tests/cases/compiler/privacyAccessorDeclFile_GlobalFile.ts ===
class publicClassInGlobal {
>publicClassInGlobal : Symbol(publicClassInGlobal, Decl(privacyAccessorDeclFile_GlobalFile.ts, 0, 0))
}

class publicClassInGlobalWithPublicGetAccessorTypes {
>publicClassInGlobalWithPublicGetAccessorTypes : Symbol(publicClassInGlobalWithPublicGetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 1, 1))

    static get myPublicStaticMethod(): publicClassInGlobal {
>myPublicStaticMethod : Symbol(publicClassInGlobalWithPublicGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 3, 53))
>publicClassInGlobal : Symbol(publicClassInGlobal, Decl(privacyAccessorDeclFile_GlobalFile.ts, 0, 0))

        return null;
    }
    private static get myPrivateStaticMethod(): publicClassInGlobal {
>myPrivateStaticMethod : Symbol(publicClassInGlobalWithPublicGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 6, 5))
>publicClassInGlobal : Symbol(publicClassInGlobal, Decl(privacyAccessorDeclFile_GlobalFile.ts, 0, 0))

        return null;
    }
    get myPublicMethod(): publicClassInGlobal {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 9, 5))
>publicClassInGlobal : Symbol(publicClassInGlobal, Decl(privacyAccessorDeclFile_GlobalFile.ts, 0, 0))

        return null;
    }
    private get myPrivateMethod(): publicClassInGlobal {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 12, 5))
>publicClassInGlobal : Symbol(publicClassInGlobal, Decl(privacyAccessorDeclFile_GlobalFile.ts, 0, 0))

        return null;
    }
    static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(publicClassInGlobalWithPublicGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 15, 5))

        return new publicClassInGlobal();
>publicClassInGlobal : Symbol(publicClassInGlobal, Decl(privacyAccessorDeclFile_GlobalFile.ts, 0, 0))
    }
    private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(publicClassInGlobalWithPublicGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 18, 5))

        return new publicClassInGlobal();
>publicClassInGlobal : Symbol(publicClassInGlobal, Decl(privacyAccessorDeclFile_GlobalFile.ts, 0, 0))
    }
    get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 21, 5))

        return new publicClassInGlobal();
>publicClassInGlobal : Symbol(publicClassInGlobal, Decl(privacyAccessorDeclFile_GlobalFile.ts, 0, 0))
    }
    private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 24, 5))

        return new publicClassInGlobal();
>publicClassInGlobal : Symbol(publicClassInGlobal, Decl(privacyAccessorDeclFile_GlobalFile.ts, 0, 0))
    }
}

class publicClassInGlobalWithWithPublicSetAccessorTypes {
>publicClassInGlobalWithWithPublicSetAccessorTypes : Symbol(publicClassInGlobalWithWithPublicSetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 28, 1))

    static set myPublicStaticMethod(param: publicClassInGlobal) {
>myPublicStaticMethod : Symbol(publicClassInGlobalWithWithPublicSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 30, 57))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 31, 36))
>publicClassInGlobal : Symbol(publicClassInGlobal, Decl(privacyAccessorDeclFile_GlobalFile.ts, 0, 0))
    }
    private static set myPrivateStaticMethod(param: publicClassInGlobal) {
>myPrivateStaticMethod : Symbol(publicClassInGlobalWithWithPublicSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 32, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 33, 45))
>publicClassInGlobal : Symbol(publicClassInGlobal, Decl(privacyAccessorDeclFile_GlobalFile.ts, 0, 0))
    }
    set myPublicMethod(param: publicClassInGlobal) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 34, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 35, 23))
>publicClassInGlobal : Symbol(publicClassInGlobal, Decl(privacyAccessorDeclFile_GlobalFile.ts, 0, 0))
    }
    private set myPrivateMethod(param: publicClassInGlobal) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 36, 5))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 37, 32))
>publicClassInGlobal : Symbol(publicClassInGlobal, Decl(privacyAccessorDeclFile_GlobalFile.ts, 0, 0))
    }
}

module publicModuleInGlobal {
>publicModuleInGlobal : Symbol(publicModuleInGlobal, Decl(privacyAccessorDeclFile_GlobalFile.ts, 39, 1))

    class privateClass {
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
    }

    export class publicClass {
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
    }

    module privateModule {
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))

        class privateClass {
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
        }

        export class publicClass {
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
        }
        export class publicClassWithWithPrivateGetAccessorTypes {
>publicClassWithWithPrivateGetAccessorTypes : Symbol(publicClassWithWithPrivateGetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 53, 9))

            static get myPublicStaticMethod(): privateClass {
>myPublicStaticMethod : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 54, 65))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))

                return null;
            }
            private static get myPrivateStaticMethod(): privateClass {
>myPrivateStaticMethod : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 57, 13))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))

                return null;
            }
            get myPublicMethod(): privateClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 60, 13))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))

                return null;
            }
            private get myPrivateMethod(): privateClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 63, 13))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))

                return null;
            }
            static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 66, 13))

                return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
            private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 69, 13))

                return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
            get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 72, 13))

                return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
            private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 75, 13))

                return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
        }

        export class publicClassWithWithPublicGetAccessorTypes {
>publicClassWithWithPublicGetAccessorTypes : Symbol(publicClassWithWithPublicGetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 79, 9))

            static get myPublicStaticMethod(): publicClass {
>myPublicStaticMethod : Symbol(publicClassWithWithPublicGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 81, 64))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

                return null;
            }
            private static get myPrivateStaticMethod(): publicClass {
>myPrivateStaticMethod : Symbol(publicClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 84, 13))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

                return null;
            }
            get myPublicMethod(): publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 87, 13))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

                return null;
            }
            private get myPrivateMethod(): publicClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 90, 13))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

                return null;
            }
            static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(publicClassWithWithPublicGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 93, 13))

                return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(publicClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 96, 13))

                return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 99, 13))

                return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 102, 13))

                return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
        }

        class privateClassWithWithPrivateGetAccessorTypes {
>privateClassWithWithPrivateGetAccessorTypes : Symbol(privateClassWithWithPrivateGetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 106, 9))

            static get myPublicStaticMethod(): privateClass {
>myPublicStaticMethod : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 108, 59))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))

                return null;
            }
            private static get myPrivateStaticMethod(): privateClass {
>myPrivateStaticMethod : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 111, 13))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))

                return null;
            }
            get myPublicMethod(): privateClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 114, 13))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))

                return null;
            }
            private get myPrivateMethod(): privateClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 117, 13))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))

                return null;
            }
            static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 120, 13))

                return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
            private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 123, 13))

                return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
            get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 126, 13))

                return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
            private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 129, 13))

                return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
        }

        class privateClassWithWithPublicGetAccessorTypes {
>privateClassWithWithPublicGetAccessorTypes : Symbol(privateClassWithWithPublicGetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 133, 9))

            static get myPublicStaticMethod(): publicClass {
>myPublicStaticMethod : Symbol(privateClassWithWithPublicGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 135, 58))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

                return null;
            }
            private static get myPrivateStaticMethod(): publicClass {
>myPrivateStaticMethod : Symbol(privateClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 138, 13))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

                return null;
            }
            get myPublicMethod(): publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 141, 13))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

                return null;
            }
            private get myPrivateMethod(): publicClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 144, 13))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

                return null;
            }
            static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(privateClassWithWithPublicGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 147, 13))

                return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(privateClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 150, 13))

                return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 153, 13))

                return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 156, 13))

                return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
        }

        export class publicClassWithWithPrivateSetAccessorTypes {
>publicClassWithWithPrivateSetAccessorTypes : Symbol(publicClassWithWithPrivateSetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 160, 9))

            static set myPublicStaticMethod(param: privateClass) {
>myPublicStaticMethod : Symbol(publicClassWithWithPrivateSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 162, 65))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 163, 44))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
            private static set myPrivateStaticMethod(param: privateClass) {
>myPrivateStaticMethod : Symbol(publicClassWithWithPrivateSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 164, 13))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 165, 53))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
            set myPublicMethod(param: privateClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 166, 13))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 167, 31))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
            private set myPrivateMethod(param: privateClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 168, 13))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 169, 40))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
        }

        export class publicClassWithWithPublicSetAccessorTypes {
>publicClassWithWithPublicSetAccessorTypes : Symbol(publicClassWithWithPublicSetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 171, 9))

            static set myPublicStaticMethod(param: publicClass) {
>myPublicStaticMethod : Symbol(publicClassWithWithPublicSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 173, 64))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 174, 44))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            private static set myPrivateStaticMethod(param: publicClass) {
>myPrivateStaticMethod : Symbol(publicClassWithWithPublicSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 175, 13))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 176, 53))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            set myPublicMethod(param: publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 177, 13))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 178, 31))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            private set myPrivateMethod(param: publicClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 179, 13))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 180, 40))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
        }

        class privateClassWithWithPrivateSetAccessorTypes {
>privateClassWithWithPrivateSetAccessorTypes : Symbol(privateClassWithWithPrivateSetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 182, 9))

            static set myPublicStaticMethod(param: privateClass) {
>myPublicStaticMethod : Symbol(privateClassWithWithPrivateSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 184, 59))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 185, 44))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
            private static set myPrivateStaticMethod(param: privateClass) {
>myPrivateStaticMethod : Symbol(privateClassWithWithPrivateSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 186, 13))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 187, 53))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
            set myPublicMethod(param: privateClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 188, 13))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 189, 31))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
            private set myPrivateMethod(param: privateClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 190, 13))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 191, 40))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 48, 26))
            }
        }

        class privateClassWithWithPublicSetAccessorTypes {
>privateClassWithWithPublicSetAccessorTypes : Symbol(privateClassWithWithPublicSetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 193, 9))

            static set myPublicStaticMethod(param: publicClass) {
>myPublicStaticMethod : Symbol(privateClassWithWithPublicSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 195, 58))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 196, 44))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            private static set myPrivateStaticMethod(param: publicClass) {
>myPrivateStaticMethod : Symbol(privateClassWithWithPublicSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 197, 13))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 198, 53))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            set myPublicMethod(param: publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 199, 13))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 200, 31))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            private set myPrivateMethod(param: publicClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 201, 13))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 202, 40))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
        }

        export class publicClassWithPrivateModuleGetAccessorTypes {
>publicClassWithPrivateModuleGetAccessorTypes : Symbol(publicClassWithPrivateModuleGetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 204, 9))

            static get myPublicStaticMethod(): privateModule.publicClass {
>myPublicStaticMethod : Symbol(publicClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 206, 67))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

                return null;
            }
            get myPublicMethod(): privateModule.publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 209, 13))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

                return null;
            }
            static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(publicClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 212, 13))

                return new privateModule.publicClass();
>privateModule.publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 215, 13))

                return new privateModule.publicClass();
>privateModule.publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
        }

        export class publicClassWithPrivateModuleSetAccessorTypes {
>publicClassWithPrivateModuleSetAccessorTypes : Symbol(publicClassWithPrivateModuleSetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 219, 9))

            static set myPublicStaticMethod(param: privateModule.publicClass) {
>myPublicStaticMethod : Symbol(publicClassWithPrivateModuleSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 221, 67))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 222, 44))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            set myPublicMethod(param: privateModule.publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 223, 13))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 224, 31))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
        }

        class privateClassWithPrivateModuleGetAccessorTypes {
>privateClassWithPrivateModuleGetAccessorTypes : Symbol(privateClassWithPrivateModuleGetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 226, 9))

            static get myPublicStaticMethod(): privateModule.publicClass {
>myPublicStaticMethod : Symbol(privateClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 228, 61))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

                return null;
            }
            get myPublicMethod(): privateModule.publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 231, 13))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

                return null;
            }
            static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(privateClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 234, 13))

                return new privateModule.publicClass();
>privateModule.publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 237, 13))

                return new privateModule.publicClass();
>privateModule.publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
        }

        class privateClassWithPrivateModuleSetAccessorTypes {
>privateClassWithPrivateModuleSetAccessorTypes : Symbol(privateClassWithPrivateModuleSetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 241, 9))

            static set myPublicStaticMethod(param: privateModule.publicClass) {
>myPublicStaticMethod : Symbol(privateClassWithPrivateModuleSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 243, 61))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 244, 44))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
            set myPublicMethod(param: privateModule.publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 245, 13))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 246, 31))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
            }
        }
    }

    export class publicClassWithWithPrivateGetAccessorTypes {
>publicClassWithWithPrivateGetAccessorTypes : Symbol(publicClassWithWithPrivateGetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 249, 5))

        static get myPublicStaticMethod(): privateClass { // Error
>myPublicStaticMethod : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 251, 61))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))

            return null;
        }
        private static get myPrivateStaticMethod(): privateClass {
>myPrivateStaticMethod : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 254, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))

            return null;
        }
        get myPublicMethod(): privateClass { // Error
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 257, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))

            return null;
        }
        private get myPrivateMethod(): privateClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 260, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))

            return null;
        }
        static get myPublicStaticMethod1() { // Error
>myPublicStaticMethod1 : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 263, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
        private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(publicClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 266, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
        get myPublicMethod1() { // Error
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 269, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
        private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 272, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
    }

    export class publicClassWithWithPublicGetAccessorTypes {
>publicClassWithWithPublicGetAccessorTypes : Symbol(publicClassWithWithPublicGetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 276, 5))

        static get myPublicStaticMethod(): publicClass {
>myPublicStaticMethod : Symbol(publicClassWithWithPublicGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 278, 60))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))

            return null;
        }
        private static get myPrivateStaticMethod(): publicClass {
>myPrivateStaticMethod : Symbol(publicClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 281, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))

            return null;
        }
        get myPublicMethod(): publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 284, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))

            return null;
        }
        private get myPrivateMethod(): publicClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 287, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))

            return null;
        }
        static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(publicClassWithWithPublicGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 290, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
        private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(publicClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 293, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
        get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 296, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
        private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 299, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
    }

    class privateClassWithWithPrivateGetAccessorTypes {
>privateClassWithWithPrivateGetAccessorTypes : Symbol(privateClassWithWithPrivateGetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 303, 5))

        static get myPublicStaticMethod(): privateClass {
>myPublicStaticMethod : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 305, 55))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))

            return null;
        }
        private static get myPrivateStaticMethod(): privateClass {
>myPrivateStaticMethod : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 308, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))

            return null;
        }
        get myPublicMethod(): privateClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 311, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))

            return null;
        }
        private get myPrivateMethod(): privateClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 314, 9))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))

            return null;
        }
        static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 317, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
        private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(privateClassWithWithPrivateGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 320, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
        get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 323, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
        private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 326, 9))

            return new privateClass();
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
    }

    class privateClassWithWithPublicGetAccessorTypes {
>privateClassWithWithPublicGetAccessorTypes : Symbol(privateClassWithWithPublicGetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 330, 5))

        static get myPublicStaticMethod(): publicClass {
>myPublicStaticMethod : Symbol(privateClassWithWithPublicGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 332, 54))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))

            return null;
        }
        private static get myPrivateStaticMethod(): publicClass {
>myPrivateStaticMethod : Symbol(privateClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 335, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))

            return null;
        }
        get myPublicMethod(): publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 338, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))

            return null;
        }
        private get myPrivateMethod(): publicClass {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 341, 9))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))

            return null;
        }
        static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(privateClassWithWithPublicGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 344, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
        private static get myPrivateStaticMethod1() {
>myPrivateStaticMethod1 : Symbol(privateClassWithWithPublicGetAccessorTypes.myPrivateStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 347, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
        get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 350, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
        private get myPrivateMethod1() {
>myPrivateMethod1 : Symbol(myPrivateMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 353, 9))

            return new publicClass();
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
    }

    export class publicClassWithWithPrivateSetAccessorTypes {
>publicClassWithWithPrivateSetAccessorTypes : Symbol(publicClassWithWithPrivateSetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 357, 5))

        static set myPublicStaticMethod(param: privateClass) { // Error
>myPublicStaticMethod : Symbol(publicClassWithWithPrivateSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 359, 61))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 360, 40))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
        private static set myPrivateStaticMethod(param: privateClass) {
>myPrivateStaticMethod : Symbol(publicClassWithWithPrivateSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 361, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 362, 49))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
        set myPublicMethod(param: privateClass) { // Error
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 363, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 364, 27))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
        private set myPrivateMethod(param: privateClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 365, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 366, 36))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
    }

    export class publicClassWithWithPublicSetAccessorTypes {
>publicClassWithWithPublicSetAccessorTypes : Symbol(publicClassWithWithPublicSetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 368, 5))

        static set myPublicStaticMethod(param: publicClass) {
>myPublicStaticMethod : Symbol(publicClassWithWithPublicSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 370, 60))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 371, 40))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
        private static set myPrivateStaticMethod(param: publicClass) {
>myPrivateStaticMethod : Symbol(publicClassWithWithPublicSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 372, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 373, 49))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
        set myPublicMethod(param: publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 374, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 375, 27))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
        private set myPrivateMethod(param: publicClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 376, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 377, 36))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
    }

    class privateClassWithWithPrivateSetAccessorTypes {
>privateClassWithWithPrivateSetAccessorTypes : Symbol(privateClassWithWithPrivateSetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 379, 5))

        static set myPublicStaticMethod(param: privateClass) {
>myPublicStaticMethod : Symbol(privateClassWithWithPrivateSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 381, 55))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 382, 40))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
        private static set myPrivateStaticMethod(param: privateClass) {
>myPrivateStaticMethod : Symbol(privateClassWithWithPrivateSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 383, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 384, 49))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
        set myPublicMethod(param: privateClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 385, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 386, 27))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
        private set myPrivateMethod(param: privateClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 387, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 388, 36))
>privateClass : Symbol(privateClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 41, 29))
        }
    }

    class privateClassWithWithPublicSetAccessorTypes {
>privateClassWithWithPublicSetAccessorTypes : Symbol(privateClassWithWithPublicSetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 390, 5))

        static set myPublicStaticMethod(param: publicClass) {
>myPublicStaticMethod : Symbol(privateClassWithWithPublicSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 392, 54))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 393, 40))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
        private static set myPrivateStaticMethod(param: publicClass) {
>myPrivateStaticMethod : Symbol(privateClassWithWithPublicSetAccessorTypes.myPrivateStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 394, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 395, 49))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
        set myPublicMethod(param: publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 396, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 397, 27))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
        private set myPrivateMethod(param: publicClass) {
>myPrivateMethod : Symbol(myPrivateMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 398, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 399, 36))
>publicClass : Symbol(publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 43, 5))
        }
    }

    export class publicClassWithPrivateModuleGetAccessorTypes {
>publicClassWithPrivateModuleGetAccessorTypes : Symbol(publicClassWithPrivateModuleGetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 401, 5))

        static get myPublicStaticMethod(): privateModule.publicClass { // Error
>myPublicStaticMethod : Symbol(publicClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 403, 63))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

            return null;
        }
        get myPublicMethod(): privateModule.publicClass { // Error
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 406, 9))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

            return null;
        }
        static get myPublicStaticMethod1() { // Error
>myPublicStaticMethod1 : Symbol(publicClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 409, 9))

            return new privateModule.publicClass();
>privateModule.publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
        }
        get myPublicMethod1() { // Error
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 412, 9))

            return new privateModule.publicClass();
>privateModule.publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
        }
    }

    export class publicClassWithPrivateModuleSetAccessorTypes {
>publicClassWithPrivateModuleSetAccessorTypes : Symbol(publicClassWithPrivateModuleSetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 416, 5))

        static set myPublicStaticMethod(param: privateModule.publicClass) { // Error
>myPublicStaticMethod : Symbol(publicClassWithPrivateModuleSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 418, 63))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 419, 40))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
        }
        set myPublicMethod(param: privateModule.publicClass) { // Error
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 420, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 421, 27))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
        }
    }

    class privateClassWithPrivateModuleGetAccessorTypes {
>privateClassWithPrivateModuleGetAccessorTypes : Symbol(privateClassWithPrivateModuleGetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 423, 5))

        static get myPublicStaticMethod(): privateModule.publicClass {
>myPublicStaticMethod : Symbol(privateClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 425, 57))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

            return null;
        }
        get myPublicMethod(): privateModule.publicClass {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 428, 9))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))

            return null;
        }
        static get myPublicStaticMethod1() {
>myPublicStaticMethod1 : Symbol(privateClassWithPrivateModuleGetAccessorTypes.myPublicStaticMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 431, 9))

            return new privateModule.publicClass();
>privateModule.publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
        }
        get myPublicMethod1() {
>myPublicMethod1 : Symbol(myPublicMethod1, Decl(privacyAccessorDeclFile_GlobalFile.ts, 434, 9))

            return new privateModule.publicClass();
>privateModule.publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
        }
    }

    class privateClassWithPrivateModuleSetAccessorTypes {
>privateClassWithPrivateModuleSetAccessorTypes : Symbol(privateClassWithPrivateModuleSetAccessorTypes, Decl(privacyAccessorDeclFile_GlobalFile.ts, 438, 5))

        static set myPublicStaticMethod(param: privateModule.publicClass) {
>myPublicStaticMethod : Symbol(privateClassWithPrivateModuleSetAccessorTypes.myPublicStaticMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 440, 57))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 441, 40))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
        }
        set myPublicMethod(param: privateModule.publicClass) {
>myPublicMethod : Symbol(myPublicMethod, Decl(privacyAccessorDeclFile_GlobalFile.ts, 442, 9))
>param : Symbol(param, Decl(privacyAccessorDeclFile_GlobalFile.ts, 443, 27))
>privateModule : Symbol(privateModule, Decl(privacyAccessorDeclFile_GlobalFile.ts, 46, 5))
>publicClass : Symbol(privateModule.publicClass, Decl(privacyAccessorDeclFile_GlobalFile.ts, 50, 9))
        }
    }
}
