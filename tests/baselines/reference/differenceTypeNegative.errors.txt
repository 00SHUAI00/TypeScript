tests/cases/conformance/types/rest/differenceTypeNegative.ts(3,21): error TS2705: The right side of a rest type must be a string or string literal union.
tests/cases/conformance/types/rest/differenceTypeNegative.ts(4,21): error TS2705: The right side of a rest type must be a string or string literal union.
tests/cases/conformance/types/rest/differenceTypeNegative.ts(5,21): error TS2705: The right side of a rest type must be a string or string literal union.
tests/cases/conformance/types/rest/differenceTypeNegative.ts(6,21): error TS2705: The right side of a rest type must be a string or string literal union.
tests/cases/conformance/types/rest/differenceTypeNegative.ts(8,25): error TS2705: The right side of a rest type must be a string or string literal union.
tests/cases/conformance/types/rest/differenceTypeNegative.ts(9,25): error TS2705: The right side of a rest type must be a string or string literal union.
tests/cases/conformance/types/rest/differenceTypeNegative.ts(10,25): error TS2705: The right side of a rest type must be a string or string literal union.
tests/cases/conformance/types/rest/differenceTypeNegative.ts(11,25): error TS2705: The right side of a rest type must be a string or string literal union.
tests/cases/conformance/types/rest/differenceTypeNegative.ts(12,25): error TS2705: The right side of a rest type must be a string or string literal union.


==== tests/cases/conformance/types/rest/differenceTypeNegative.ts (9 errors) ====
    type Abc = { a; b; c }
    type Surprise = 'a' | 'b' | 12;
    let bad1: rest(Abc, 12);
                        ~~
!!! error TS2705: The right side of a rest type must be a string or string literal union.
    let bad2: rest(Abc, Surprise);
                        ~~~~~~~~
!!! error TS2705: The right side of a rest type must be a string or string literal union.
    let bad3: rest(Abc, 'a' & 'b');
                        ~~~~~~~~~
!!! error TS2705: The right side of a rest type must be a string or string literal union.
    let bad4: rest(Abc, number);
                        ~~~~~~
!!! error TS2705: The right side of a rest type must be a string or string literal union.
    function f<T, U extends 12, V extends Surprise, W extends 'a' & 'b', X extends number>(t: T) {
        let bad1: rest(Abc, T);
                            ~
!!! error TS2705: The right side of a rest type must be a string or string literal union.
        let bad2: rest(Abc, 12);
                            ~~
!!! error TS2705: The right side of a rest type must be a string or string literal union.
        let bad3: rest(Abc, Surprise);
                            ~~~~~~~~
!!! error TS2705: The right side of a rest type must be a string or string literal union.
        let bad4: rest(Abc, 'a' & 'b');
                            ~~~~~~~~~
!!! error TS2705: The right side of a rest type must be a string or string literal union.
        let bad5: rest(Abc, number);
                            ~~~~~~
!!! error TS2705: The right side of a rest type must be a string or string literal union.
        return bad1;
    }
    
    