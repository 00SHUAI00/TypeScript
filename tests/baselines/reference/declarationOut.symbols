=== tests/cases/compiler/declarationOut/fileA.ts ===

export default class A {
>A : Symbol(A, Decl(fileA.ts, 0, 0))
}

=== tests/cases/compiler/declarationOut/fileB.ts ===
import A from "fileA";
>A : Symbol(A, Decl(fileB.ts, 0, 6))

export default class B {
>B : Symbol(B, Decl(fileB.ts, 0, 22))

    getA() {
>getA : Symbol(getA, Decl(fileB.ts, 1, 24))

        return new A();
>A : Symbol(A, Decl(fileB.ts, 0, 6))
    }
}

=== tests/cases/compiler/declarationOut/fileC.ts ===
import B from "./fileB";
>B : Symbol(B, Decl(fileC.ts, 0, 6))

export default class C {
>C : Symbol(C, Decl(fileC.ts, 0, 24))

    getB() {
>getB : Symbol(getB, Decl(fileC.ts, 1, 24))

        return new B();
>B : Symbol(B, Decl(fileC.ts, 0, 6))
    }
}

=== tests/cases/compiler/declarationOut/global.ts ===
var global = {};
>global : Symbol(global, Decl(global.ts, 0, 3))

