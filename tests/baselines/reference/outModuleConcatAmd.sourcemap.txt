===================================================================
JsFile: a.js
mapUrl: a.js.map
sourceRoot: 
sources: a.ts
===================================================================
-------------------------------------------------------------------
emittedFile:tests/cases/compiler/ref/a.js
sourceFile:a.ts
-------------------------------------------------------------------
>>>define(["require", "exports"], function (require, exports) {
>>>    var A = (function () {
1 >^^^^
2 >    ^^^^^^^^^^^^^^^^^^^->
1 >
  >
1 >Emitted(2, 5) Source(2, 1) + SourceIndex(0)
---
>>>        function A() {
1->^^^^^^^^
2 >        ^^->
1->
1->Emitted(3, 9) Source(2, 1) + SourceIndex(0) name (A)
---
>>>        }
1->^^^^^^^^
2 >        ^
3 >         ^^^^^^^^^->
1->export class A { 
2 >        }
1->Emitted(4, 9) Source(2, 18) + SourceIndex(0) name (A.constructor)
2 >Emitted(4, 10) Source(2, 19) + SourceIndex(0) name (A.constructor)
---
>>>        return A;
1->^^^^^^^^
2 >        ^^^^^^^^
1->
2 >        }
1->Emitted(5, 9) Source(2, 18) + SourceIndex(0) name (A)
2 >Emitted(5, 17) Source(2, 19) + SourceIndex(0) name (A)
---
>>>    })();
1 >^^^^
2 >    ^
3 >     
4 >     ^^^^
5 >         ^^^^^^^^^^->
1 >
2 >    }
3 >     
4 >     export class A { }
1 >Emitted(6, 5) Source(2, 18) + SourceIndex(0) name (A)
2 >Emitted(6, 6) Source(2, 19) + SourceIndex(0) name (A)
3 >Emitted(6, 6) Source(2, 1) + SourceIndex(0)
4 >Emitted(6, 10) Source(2, 19) + SourceIndex(0)
---
>>>    exports.A = A;
1->^^^^
2 >    ^^^^^^^^^
3 >             ^^^^
4 >                 ^
1->
2 >    A
3 >              { }
4 >                 
1->Emitted(7, 5) Source(2, 14) + SourceIndex(0)
2 >Emitted(7, 14) Source(2, 15) + SourceIndex(0)
3 >Emitted(7, 18) Source(2, 19) + SourceIndex(0)
4 >Emitted(7, 19) Source(2, 19) + SourceIndex(0)
---
>>>});
>>>//# sourceMappingURL=a.js.map===================================================================
JsFile: b.js
mapUrl: b.js.map
sourceRoot: 
sources: b.ts
===================================================================
-------------------------------------------------------------------
emittedFile:tests/cases/compiler/b.js
sourceFile:b.ts
-------------------------------------------------------------------
>>>var __extends = (this && this.__extends) || function (d, b) {
>>>    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
>>>    function __() { this.constructor = d; }
>>>    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
>>>};
>>>define(["require", "exports", "./ref/a"], function (require, exports, a_1) {
>>>    var B = (function (_super) {
1 >^^^^
2 >    ^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >import {A} from "./ref/a";
  >
1 >Emitted(7, 5) Source(2, 1) + SourceIndex(0)
---
>>>        __extends(B, _super);
1->^^^^^^^^
2 >        ^^^^^^^^^^^^^^^^^^^^^
1->export class B extends 
2 >        A
1->Emitted(8, 9) Source(2, 24) + SourceIndex(0) name (B)
2 >Emitted(8, 30) Source(2, 25) + SourceIndex(0) name (B)
---
>>>        function B() {
1 >^^^^^^^^
2 >        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
1 >Emitted(9, 9) Source(2, 1) + SourceIndex(0) name (B)
---
>>>            _super.apply(this, arguments);
1->^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->export class B extends 
2 >            A
1->Emitted(10, 13) Source(2, 24) + SourceIndex(0) name (B.constructor)
2 >Emitted(10, 43) Source(2, 25) + SourceIndex(0) name (B.constructor)
---
>>>        }
1 >^^^^^^^^
2 >        ^
3 >         ^^^^^^^^^->
1 > { 
2 >        }
1 >Emitted(11, 9) Source(2, 28) + SourceIndex(0) name (B.constructor)
2 >Emitted(11, 10) Source(2, 29) + SourceIndex(0) name (B.constructor)
---
>>>        return B;
1->^^^^^^^^
2 >        ^^^^^^^^
1->
2 >        }
1->Emitted(12, 9) Source(2, 28) + SourceIndex(0) name (B)
2 >Emitted(12, 17) Source(2, 29) + SourceIndex(0) name (B)
---
>>>    })(a_1.A);
1 >^^^^
2 >    ^
3 >     
4 >     ^^
5 >       ^^^^^
6 >            ^^
7 >              ^^^^^->
1 >
2 >    }
3 >     
4 >     export class B extends 
5 >       A
6 >             { }
1 >Emitted(13, 5) Source(2, 28) + SourceIndex(0) name (B)
2 >Emitted(13, 6) Source(2, 29) + SourceIndex(0) name (B)
3 >Emitted(13, 6) Source(2, 1) + SourceIndex(0)
4 >Emitted(13, 8) Source(2, 24) + SourceIndex(0)
5 >Emitted(13, 13) Source(2, 25) + SourceIndex(0)
6 >Emitted(13, 15) Source(2, 29) + SourceIndex(0)
---
>>>    exports.B = B;
1->^^^^
2 >    ^^^^^^^^^
3 >             ^^^^
4 >                 ^
1->
2 >    B
3 >              extends A { }
4 >                 
1->Emitted(14, 5) Source(2, 14) + SourceIndex(0)
2 >Emitted(14, 14) Source(2, 15) + SourceIndex(0)
3 >Emitted(14, 18) Source(2, 29) + SourceIndex(0)
4 >Emitted(14, 19) Source(2, 29) + SourceIndex(0)
---
>>>});
>>>//# sourceMappingURL=b.js.map===================================================================
JsFile: all.js
mapUrl: all.js.map
sourceRoot: 
sources: tests/cases/compiler/ref/a.ts,tests/cases/compiler/b.ts
===================================================================
-------------------------------------------------------------------
emittedFile:all.js
sourceFile:tests/cases/compiler/ref/a.ts
-------------------------------------------------------------------
>>>var __extends = (this && this.__extends) || function (d, b) {
>>>    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
>>>    function __() { this.constructor = d; }
>>>    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
>>>};
>>>define("tests/cases/compiler/ref/a", ["require", "exports"], function (require, exports) {
>>>    var A = (function () {
1 >^^^^
2 >    ^^^^^^^^^^^^^^^^^^^->
1 >
  >
1 >Emitted(7, 5) Source(2, 1) + SourceIndex(0)
---
>>>        function A() {
1->^^^^^^^^
2 >        ^^->
1->
1->Emitted(8, 9) Source(2, 1) + SourceIndex(0) name (A)
---
>>>        }
1->^^^^^^^^
2 >        ^
3 >         ^^^^^^^^^->
1->export class A { 
2 >        }
1->Emitted(9, 9) Source(2, 18) + SourceIndex(0) name (A.constructor)
2 >Emitted(9, 10) Source(2, 19) + SourceIndex(0) name (A.constructor)
---
>>>        return A;
1->^^^^^^^^
2 >        ^^^^^^^^
1->
2 >        }
1->Emitted(10, 9) Source(2, 18) + SourceIndex(0) name (A)
2 >Emitted(10, 17) Source(2, 19) + SourceIndex(0) name (A)
---
>>>    })();
1 >^^^^
2 >    ^
3 >     
4 >     ^^^^
5 >         ^^^^^^^^^^->
1 >
2 >    }
3 >     
4 >     export class A { }
1 >Emitted(11, 5) Source(2, 18) + SourceIndex(0) name (A)
2 >Emitted(11, 6) Source(2, 19) + SourceIndex(0) name (A)
3 >Emitted(11, 6) Source(2, 1) + SourceIndex(0)
4 >Emitted(11, 10) Source(2, 19) + SourceIndex(0)
---
>>>    exports.A = A;
1->^^^^
2 >    ^^^^^^^^^
3 >             ^^^^
4 >                 ^
1->
2 >    A
3 >              { }
4 >                 
1->Emitted(12, 5) Source(2, 14) + SourceIndex(0)
2 >Emitted(12, 14) Source(2, 15) + SourceIndex(0)
3 >Emitted(12, 18) Source(2, 19) + SourceIndex(0)
4 >Emitted(12, 19) Source(2, 19) + SourceIndex(0)
---
-------------------------------------------------------------------
emittedFile:all.js
sourceFile:tests/cases/compiler/b.ts
-------------------------------------------------------------------
>>>});
>>>define("tests/cases/compiler/b", ["require", "exports", "tests/cases/compiler/ref/a"], function (require, exports, a_1) {
>>>    var B = (function (_super) {
1 >^^^^
2 >    ^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >import {A} from "./ref/a";
  >
1 >Emitted(15, 5) Source(2, 1) + SourceIndex(1)
---
>>>        __extends(B, _super);
1->^^^^^^^^
2 >        ^^^^^^^^^^^^^^^^^^^^^
1->export class B extends 
2 >        A
1->Emitted(16, 9) Source(2, 24) + SourceIndex(1) name (B)
2 >Emitted(16, 30) Source(2, 25) + SourceIndex(1) name (B)
---
>>>        function B() {
1 >^^^^^^^^
2 >        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
1 >Emitted(17, 9) Source(2, 1) + SourceIndex(1) name (B)
---
>>>            _super.apply(this, arguments);
1->^^^^^^^^^^^^
2 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->export class B extends 
2 >            A
1->Emitted(18, 13) Source(2, 24) + SourceIndex(1) name (B.constructor)
2 >Emitted(18, 43) Source(2, 25) + SourceIndex(1) name (B.constructor)
---
>>>        }
1 >^^^^^^^^
2 >        ^
3 >         ^^^^^^^^^->
1 > { 
2 >        }
1 >Emitted(19, 9) Source(2, 28) + SourceIndex(1) name (B.constructor)
2 >Emitted(19, 10) Source(2, 29) + SourceIndex(1) name (B.constructor)
---
>>>        return B;
1->^^^^^^^^
2 >        ^^^^^^^^
1->
2 >        }
1->Emitted(20, 9) Source(2, 28) + SourceIndex(1) name (B)
2 >Emitted(20, 17) Source(2, 29) + SourceIndex(1) name (B)
---
>>>    })(a_1.A);
1 >^^^^
2 >    ^
3 >     
4 >     ^^
5 >       ^^^^^
6 >            ^^
7 >              ^^^^^->
1 >
2 >    }
3 >     
4 >     export class B extends 
5 >       A
6 >             { }
1 >Emitted(21, 5) Source(2, 28) + SourceIndex(1) name (B)
2 >Emitted(21, 6) Source(2, 29) + SourceIndex(1) name (B)
3 >Emitted(21, 6) Source(2, 1) + SourceIndex(1)
4 >Emitted(21, 8) Source(2, 24) + SourceIndex(1)
5 >Emitted(21, 13) Source(2, 25) + SourceIndex(1)
6 >Emitted(21, 15) Source(2, 29) + SourceIndex(1)
---
>>>    exports.B = B;
1->^^^^
2 >    ^^^^^^^^^
3 >             ^^^^
4 >                 ^
1->
2 >    B
3 >              extends A { }
4 >                 
1->Emitted(22, 5) Source(2, 14) + SourceIndex(1)
2 >Emitted(22, 14) Source(2, 15) + SourceIndex(1)
3 >Emitted(22, 18) Source(2, 29) + SourceIndex(1)
4 >Emitted(22, 19) Source(2, 29) + SourceIndex(1)
---
>>>});
>>>//# sourceMappingURL=all.js.map