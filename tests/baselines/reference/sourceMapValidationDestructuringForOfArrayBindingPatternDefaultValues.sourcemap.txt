===================================================================
JsFile: sourceMapValidationDestructuringForOfArrayBindingPatternDefaultValues.js
mapUrl: sourceMapValidationDestructuringForOfArrayBindingPatternDefaultValues.js.map
sourceRoot: 
sources: sourceMapValidationDestructuringForOfArrayBindingPatternDefaultValues.ts
===================================================================
-------------------------------------------------------------------
emittedFile:tests/cases/compiler/sourceMapValidationDestructuringForOfArrayBindingPatternDefaultValues.js
sourceFile:sourceMapValidationDestructuringForOfArrayBindingPatternDefaultValues.ts
-------------------------------------------------------------------
>>>var __read = (this && this.__read) || function (o, n) {
>>>    if (!(m = typeof Symbol === "function" && o[Symbol.iterator])) return o;
>>>    var m, i = m.call(o), ar = [], r, e;
>>>    try { while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value); }
>>>    catch (error) { e = { error: error }; }
>>>    finally { try { if (m = !(r && r.done) && i["return"]) m.call(i); } finally { if (e) throw e.error; } }
>>>    return ar;
>>>};
>>>var __values = (this && this.__values) || function (o) { return (i = typeof Symbol === "function" && o[Symbol.iterator] || 0) ? i.call(o) : { next: function () { return { done: d = d || i >= o.length, value: d ? void 0 : o[i++] }; } }; var i, d; };
>>>var __step = (this && this.__step) || function (r) { return !(r.done || (r.done = (r.result = r.iterator.next()).done)); };
>>>var __close = (this && this.__close) || function (r) { return (m = !(r && r.done) && r.iterator["return"]) && m.call(r.iterator); var m; };
>>>var robotA = [1, "mower", "mowing"];
1 >
2 >^^^^
3 >    ^^^^^^
4 >          ^^^
5 >             ^
6 >              ^
7 >               ^^
8 >                 ^^^^^^^
9 >                        ^^
10>                          ^^^^^^^^
11>                                  ^
12>                                   ^
13>                                    ^^^^^->
1 >declare var console: {
  >    log(msg: any): void;
  >}
  >type Robot = [number, string, string];
  >type MultiSkilledRobot = [string, [string, string]];
  >
  >
2 >let 
3 >    robotA
4 >          : Robot = 
5 >             [
6 >              1
7 >               , 
8 >                 "mower"
9 >                        , 
10>                          "mowing"
11>                                  ]
12>                                   ;
1 >Emitted(12, 1) Source(7, 1) + SourceIndex(0)
2 >Emitted(12, 5) Source(7, 5) + SourceIndex(0)
3 >Emitted(12, 11) Source(7, 11) + SourceIndex(0)
4 >Emitted(12, 14) Source(7, 21) + SourceIndex(0)
5 >Emitted(12, 15) Source(7, 22) + SourceIndex(0)
6 >Emitted(12, 16) Source(7, 23) + SourceIndex(0)
7 >Emitted(12, 18) Source(7, 25) + SourceIndex(0)
8 >Emitted(12, 25) Source(7, 32) + SourceIndex(0)
9 >Emitted(12, 27) Source(7, 34) + SourceIndex(0)
10>Emitted(12, 35) Source(7, 42) + SourceIndex(0)
11>Emitted(12, 36) Source(7, 43) + SourceIndex(0)
12>Emitted(12, 37) Source(7, 44) + SourceIndex(0)
---
>>>var robotB = [2, "trimmer", "trimming"];
1->
2 >^^^^
3 >    ^^^^^^
4 >          ^^^
5 >             ^
6 >              ^
7 >               ^^
8 >                 ^^^^^^^^^
9 >                          ^^
10>                            ^^^^^^^^^^
11>                                      ^
12>                                       ^
1->
  >
2 >let 
3 >    robotB
4 >          : Robot = 
5 >             [
6 >              2
7 >               , 
8 >                 "trimmer"
9 >                          , 
10>                            "trimming"
11>                                      ]
12>                                       ;
1->Emitted(13, 1) Source(8, 1) + SourceIndex(0)
2 >Emitted(13, 5) Source(8, 5) + SourceIndex(0)
3 >Emitted(13, 11) Source(8, 11) + SourceIndex(0)
4 >Emitted(13, 14) Source(8, 21) + SourceIndex(0)
5 >Emitted(13, 15) Source(8, 22) + SourceIndex(0)
6 >Emitted(13, 16) Source(8, 23) + SourceIndex(0)
7 >Emitted(13, 18) Source(8, 25) + SourceIndex(0)
8 >Emitted(13, 27) Source(8, 34) + SourceIndex(0)
9 >Emitted(13, 29) Source(8, 36) + SourceIndex(0)
10>Emitted(13, 39) Source(8, 46) + SourceIndex(0)
11>Emitted(13, 40) Source(8, 47) + SourceIndex(0)
12>Emitted(13, 41) Source(8, 48) + SourceIndex(0)
---
>>>var robots = [robotA, robotB];
1 >
2 >^^^^
3 >    ^^^^^^
4 >          ^^^
5 >             ^
6 >              ^^^^^^
7 >                    ^^
8 >                      ^^^^^^
9 >                            ^
10>                             ^
1 >
  >
2 >let 
3 >    robots
4 >           = 
5 >             [
6 >              robotA
7 >                    , 
8 >                      robotB
9 >                            ]
10>                             ;
1 >Emitted(14, 1) Source(9, 1) + SourceIndex(0)
2 >Emitted(14, 5) Source(9, 5) + SourceIndex(0)
3 >Emitted(14, 11) Source(9, 11) + SourceIndex(0)
4 >Emitted(14, 14) Source(9, 14) + SourceIndex(0)
5 >Emitted(14, 15) Source(9, 15) + SourceIndex(0)
6 >Emitted(14, 21) Source(9, 21) + SourceIndex(0)
7 >Emitted(14, 23) Source(9, 23) + SourceIndex(0)
8 >Emitted(14, 29) Source(9, 29) + SourceIndex(0)
9 >Emitted(14, 30) Source(9, 30) + SourceIndex(0)
10>Emitted(14, 31) Source(9, 31) + SourceIndex(0)
---
>>>function getRobots() {
1 >
2 >^^^^^^^^^^^^^^^^^^^->
1 >
  >
1 >Emitted(15, 1) Source(10, 1) + SourceIndex(0)
---
>>>    return robots;
1->^^^^
2 >    ^^^^^^
3 >          ^
4 >           ^^^^^^
5 >                 ^
1->function getRobots() {
  >    
2 >    return
3 >           
4 >           robots
5 >                 ;
1->Emitted(16, 5) Source(11, 5) + SourceIndex(0)
2 >Emitted(16, 11) Source(11, 11) + SourceIndex(0)
3 >Emitted(16, 12) Source(11, 12) + SourceIndex(0)
4 >Emitted(16, 18) Source(11, 18) + SourceIndex(0)
5 >Emitted(16, 19) Source(11, 19) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(17, 1) Source(12, 1) + SourceIndex(0)
2 >Emitted(17, 2) Source(12, 2) + SourceIndex(0)
---
>>>var multiRobotA = ["mower", ["mowing", ""]];
1->
2 >^^^^
3 >    ^^^^^^^^^^^
4 >               ^^^
5 >                  ^
6 >                   ^^^^^^^
7 >                          ^^
8 >                            ^
9 >                             ^^^^^^^^
10>                                     ^^
11>                                       ^^
12>                                         ^
13>                                          ^
14>                                           ^
15>                                            ^^^^^^^^^^^->
1->
  >
  >
2 >let 
3 >    multiRobotA
4 >               : MultiSkilledRobot = 
5 >                  [
6 >                   "mower"
7 >                          , 
8 >                            [
9 >                             "mowing"
10>                                     , 
11>                                       ""
12>                                         ]
13>                                          ]
14>                                           ;
1->Emitted(18, 1) Source(14, 1) + SourceIndex(0)
2 >Emitted(18, 5) Source(14, 5) + SourceIndex(0)
3 >Emitted(18, 16) Source(14, 16) + SourceIndex(0)
4 >Emitted(18, 19) Source(14, 38) + SourceIndex(0)
5 >Emitted(18, 20) Source(14, 39) + SourceIndex(0)
6 >Emitted(18, 27) Source(14, 46) + SourceIndex(0)
7 >Emitted(18, 29) Source(14, 48) + SourceIndex(0)
8 >Emitted(18, 30) Source(14, 49) + SourceIndex(0)
9 >Emitted(18, 38) Source(14, 57) + SourceIndex(0)
10>Emitted(18, 40) Source(14, 59) + SourceIndex(0)
11>Emitted(18, 42) Source(14, 61) + SourceIndex(0)
12>Emitted(18, 43) Source(14, 62) + SourceIndex(0)
13>Emitted(18, 44) Source(14, 63) + SourceIndex(0)
14>Emitted(18, 45) Source(14, 64) + SourceIndex(0)
---
>>>var multiRobotB = ["trimmer", ["trimming", "edging"]];
1->
2 >^^^^
3 >    ^^^^^^^^^^^
4 >               ^^^
5 >                  ^
6 >                   ^^^^^^^^^
7 >                            ^^
8 >                              ^
9 >                               ^^^^^^^^^^
10>                                         ^^
11>                                           ^^^^^^^^
12>                                                   ^
13>                                                    ^
14>                                                     ^
1->
  >
2 >let 
3 >    multiRobotB
4 >               : MultiSkilledRobot = 
5 >                  [
6 >                   "trimmer"
7 >                            , 
8 >                              [
9 >                               "trimming"
10>                                         , 
11>                                           "edging"
12>                                                   ]
13>                                                    ]
14>                                                     ;
1->Emitted(19, 1) Source(15, 1) + SourceIndex(0)
2 >Emitted(19, 5) Source(15, 5) + SourceIndex(0)
3 >Emitted(19, 16) Source(15, 16) + SourceIndex(0)
4 >Emitted(19, 19) Source(15, 38) + SourceIndex(0)
5 >Emitted(19, 20) Source(15, 39) + SourceIndex(0)
6 >Emitted(19, 29) Source(15, 48) + SourceIndex(0)
7 >Emitted(19, 31) Source(15, 50) + SourceIndex(0)
8 >Emitted(19, 32) Source(15, 51) + SourceIndex(0)
9 >Emitted(19, 42) Source(15, 61) + SourceIndex(0)
10>Emitted(19, 44) Source(15, 63) + SourceIndex(0)
11>Emitted(19, 52) Source(15, 71) + SourceIndex(0)
12>Emitted(19, 53) Source(15, 72) + SourceIndex(0)
13>Emitted(19, 54) Source(15, 73) + SourceIndex(0)
14>Emitted(19, 55) Source(15, 74) + SourceIndex(0)
---
>>>var multiRobots = [multiRobotA, multiRobotB];
1 >
2 >^^^^
3 >    ^^^^^^^^^^^
4 >               ^^^
5 >                  ^
6 >                   ^^^^^^^^^^^
7 >                              ^^
8 >                                ^^^^^^^^^^^
9 >                                           ^
10>                                            ^
1 >
  >
2 >let 
3 >    multiRobots
4 >                = 
5 >                  [
6 >                   multiRobotA
7 >                              , 
8 >                                multiRobotB
9 >                                           ]
10>                                            ;
1 >Emitted(20, 1) Source(16, 1) + SourceIndex(0)
2 >Emitted(20, 5) Source(16, 5) + SourceIndex(0)
3 >Emitted(20, 16) Source(16, 16) + SourceIndex(0)
4 >Emitted(20, 19) Source(16, 19) + SourceIndex(0)
5 >Emitted(20, 20) Source(16, 20) + SourceIndex(0)
6 >Emitted(20, 31) Source(16, 31) + SourceIndex(0)
7 >Emitted(20, 33) Source(16, 33) + SourceIndex(0)
8 >Emitted(20, 44) Source(16, 44) + SourceIndex(0)
9 >Emitted(20, 45) Source(16, 45) + SourceIndex(0)
10>Emitted(20, 46) Source(16, 46) + SourceIndex(0)
---
>>>function getMultiRobots() {
1 >
2 >^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
1 >Emitted(21, 1) Source(17, 1) + SourceIndex(0)
---
>>>    return multiRobots;
1->^^^^
2 >    ^^^^^^
3 >          ^
4 >           ^^^^^^^^^^^
5 >                      ^
1->function getMultiRobots() {
  >    
2 >    return
3 >           
4 >           multiRobots
5 >                      ;
1->Emitted(22, 5) Source(18, 5) + SourceIndex(0)
2 >Emitted(22, 11) Source(18, 11) + SourceIndex(0)
3 >Emitted(22, 12) Source(18, 12) + SourceIndex(0)
4 >Emitted(22, 23) Source(18, 23) + SourceIndex(0)
5 >Emitted(22, 24) Source(18, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^->
1 >
  >
2 >}
1 >Emitted(23, 1) Source(19, 1) + SourceIndex(0)
2 >Emitted(23, 2) Source(19, 2) + SourceIndex(0)
---
>>>try {
>>>    for (var robots_1 = { iterator: __values(robots) }; __step(robots_1);) {
1->^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^
7 >                        ^^
8 >                          ^^^^^^^^^^
9 >                                    ^^^^^^^^^
10>                                             ^^^^^^
11>                                                   ^
12>                                                    ^^
13>                                                      ^^
14>                                                        ^^^^^^^^^^^^^^^^
15>                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
  >
2 >    for
3 >        
4 >        (let [, nameA = "noName"] of 
5 >         
6 >             
7 >                        
8 >                          
9 >                                    
10>                                             robots
11>                                                   
12>                                                    
13>                                                      
14>                                                        let [, nameA = "noName"]
1->Emitted(25, 5) Source(21, 1) + SourceIndex(0)
2 >Emitted(25, 8) Source(21, 4) + SourceIndex(0)
3 >Emitted(25, 9) Source(21, 5) + SourceIndex(0)
4 >Emitted(25, 10) Source(21, 34) + SourceIndex(0)
5 >Emitted(25, 14) Source(21, 34) + SourceIndex(0)
6 >Emitted(25, 25) Source(21, 34) + SourceIndex(0)
7 >Emitted(25, 27) Source(21, 34) + SourceIndex(0)
8 >Emitted(25, 37) Source(21, 34) + SourceIndex(0)
9 >Emitted(25, 46) Source(21, 34) + SourceIndex(0)
10>Emitted(25, 52) Source(21, 40) + SourceIndex(0)
11>Emitted(25, 53) Source(21, 40) + SourceIndex(0)
12>Emitted(25, 55) Source(21, 40) + SourceIndex(0)
13>Emitted(25, 57) Source(21, 6) + SourceIndex(0)
14>Emitted(25, 73) Source(21, 30) + SourceIndex(0)
---
>>>        var _a = __read(robots_1.result.value, 2), _b = _a[1], nameA = _b === void 0 ? "noName" : _b;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                 ^^
5 >                                                   ^^^^^^^^^^
6 >                                                             ^^
7 >                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            [, nameA = "noName"]
4 >                                                 
5 >                                                   nameA = "noName"
6 >                                                             
7 >                                                               nameA = "noName"
1->Emitted(26, 9) Source(21, 10) + SourceIndex(0)
2 >Emitted(26, 13) Source(21, 10) + SourceIndex(0)
3 >Emitted(26, 50) Source(21, 30) + SourceIndex(0)
4 >Emitted(26, 52) Source(21, 13) + SourceIndex(0)
5 >Emitted(26, 62) Source(21, 29) + SourceIndex(0)
6 >Emitted(26, 64) Source(21, 13) + SourceIndex(0)
7 >Emitted(26, 101) Source(21, 29) + SourceIndex(0)
---
>>>        console.log(nameA);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^
7 >                         ^
8 >                          ^
1 >] of robots) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    nameA
7 >                         )
8 >                          ;
1 >Emitted(27, 9) Source(22, 5) + SourceIndex(0)
2 >Emitted(27, 16) Source(22, 12) + SourceIndex(0)
3 >Emitted(27, 17) Source(22, 13) + SourceIndex(0)
4 >Emitted(27, 20) Source(22, 16) + SourceIndex(0)
5 >Emitted(27, 21) Source(22, 17) + SourceIndex(0)
6 >Emitted(27, 26) Source(22, 22) + SourceIndex(0)
7 >Emitted(27, 27) Source(22, 23) + SourceIndex(0)
8 >Emitted(27, 28) Source(22, 24) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(28, 6) Source(23, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_1_1) { e_1 = { error: e_1_1 }; }
>>>finally {
>>>    try { __close(robots_1); } finally { if (e_1) throw e_1.error; }
>>>}
>>>try {
>>>    for (var iterator_1 = { iterator: __values(getRobots()) }; __step(iterator_1);) {
1 >^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^
7 >                          ^^
8 >                            ^^^^^^^^^^
9 >                                      ^^^^^^^^^
10>                                               ^^^^^^^^^
11>                                                        ^^
12>                                                          ^
13>                                                           ^^
14>                                                             ^^
15>                                                               ^^^^^^^^^^^^^^^^^^
16>                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >    for
3 >        
4 >        (let [, nameA = "noName"] of 
5 >         
6 >             
7 >                          
8 >                            
9 >                                      
10>                                               getRobots
11>                                                        ()
12>                                                          
13>                                                           
14>                                                             
15>                                                               let [, nameA = "noName"]
1 >Emitted(35, 5) Source(24, 1) + SourceIndex(0)
2 >Emitted(35, 8) Source(24, 4) + SourceIndex(0)
3 >Emitted(35, 9) Source(24, 5) + SourceIndex(0)
4 >Emitted(35, 10) Source(24, 34) + SourceIndex(0)
5 >Emitted(35, 14) Source(24, 34) + SourceIndex(0)
6 >Emitted(35, 27) Source(24, 34) + SourceIndex(0)
7 >Emitted(35, 29) Source(24, 34) + SourceIndex(0)
8 >Emitted(35, 39) Source(24, 34) + SourceIndex(0)
9 >Emitted(35, 48) Source(24, 34) + SourceIndex(0)
10>Emitted(35, 57) Source(24, 43) + SourceIndex(0)
11>Emitted(35, 59) Source(24, 45) + SourceIndex(0)
12>Emitted(35, 60) Source(24, 45) + SourceIndex(0)
13>Emitted(35, 62) Source(24, 45) + SourceIndex(0)
14>Emitted(35, 64) Source(24, 6) + SourceIndex(0)
15>Emitted(35, 82) Source(24, 30) + SourceIndex(0)
---
>>>        var _c = __read(iterator_1.result.value, 2), _d = _c[1], nameA = _d === void 0 ? "noName" : _d;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                   ^^
5 >                                                     ^^^^^^^^^^
6 >                                                               ^^
7 >                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            [, nameA = "noName"]
4 >                                                   
5 >                                                     nameA = "noName"
6 >                                                               
7 >                                                                 nameA = "noName"
1->Emitted(36, 9) Source(24, 10) + SourceIndex(0)
2 >Emitted(36, 13) Source(24, 10) + SourceIndex(0)
3 >Emitted(36, 52) Source(24, 30) + SourceIndex(0)
4 >Emitted(36, 54) Source(24, 13) + SourceIndex(0)
5 >Emitted(36, 64) Source(24, 29) + SourceIndex(0)
6 >Emitted(36, 66) Source(24, 13) + SourceIndex(0)
7 >Emitted(36, 103) Source(24, 29) + SourceIndex(0)
---
>>>        console.log(nameA);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^
7 >                         ^
8 >                          ^
1 >] of getRobots()) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    nameA
7 >                         )
8 >                          ;
1 >Emitted(37, 9) Source(25, 5) + SourceIndex(0)
2 >Emitted(37, 16) Source(25, 12) + SourceIndex(0)
3 >Emitted(37, 17) Source(25, 13) + SourceIndex(0)
4 >Emitted(37, 20) Source(25, 16) + SourceIndex(0)
5 >Emitted(37, 21) Source(25, 17) + SourceIndex(0)
6 >Emitted(37, 26) Source(25, 22) + SourceIndex(0)
7 >Emitted(37, 27) Source(25, 23) + SourceIndex(0)
8 >Emitted(37, 28) Source(25, 24) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(38, 6) Source(26, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_2_1) { e_2 = { error: e_2_1 }; }
>>>finally {
>>>    try { __close(iterator_1); } finally { if (e_2) throw e_2.error; }
>>>}
>>>for (var _i = 0, _e = [robotA, robotB]; _i < _e.length; _i++) {
1 >
2 >^^^
3 >   ^
4 >    ^
5 >     ^^^^^^^^^^
6 >               ^^
7 >                 ^^^^^^
8 >                       ^^^^^^
9 >                             ^^
10>                               ^^^^^^
11>                                     ^
12>                                      ^^
13>                                        ^^^^^^^^^^^^^^
14>                                                      ^^
15>                                                        ^^^^
16>                                                            ^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >for
3 >    
4 >    (let [, nameA = "noName"] of 
5 >     [robotA, robotB]
6 >               
7 >                 [
8 >                       robotA
9 >                             , 
10>                               robotB
11>                                     ]
12>                                      
13>                                        [robotA, robotB]
14>                                                      
15>                                                        [robotA, robotB]
1 >Emitted(44, 1) Source(27, 1) + SourceIndex(0)
2 >Emitted(44, 4) Source(27, 4) + SourceIndex(0)
3 >Emitted(44, 5) Source(27, 5) + SourceIndex(0)
4 >Emitted(44, 6) Source(27, 34) + SourceIndex(0)
5 >Emitted(44, 16) Source(27, 50) + SourceIndex(0)
6 >Emitted(44, 18) Source(27, 34) + SourceIndex(0)
7 >Emitted(44, 24) Source(27, 35) + SourceIndex(0)
8 >Emitted(44, 30) Source(27, 41) + SourceIndex(0)
9 >Emitted(44, 32) Source(27, 43) + SourceIndex(0)
10>Emitted(44, 38) Source(27, 49) + SourceIndex(0)
11>Emitted(44, 39) Source(27, 50) + SourceIndex(0)
12>Emitted(44, 41) Source(27, 34) + SourceIndex(0)
13>Emitted(44, 55) Source(27, 50) + SourceIndex(0)
14>Emitted(44, 57) Source(27, 34) + SourceIndex(0)
15>Emitted(44, 61) Source(27, 50) + SourceIndex(0)
---
>>>    var _f = __read(_e[_i], 2), _g = _f[1], nameA = _g === void 0 ? "noName" : _g;
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^^^^^^^^
4 >                              ^^
5 >                                ^^^^^^^^^^
6 >                                          ^^
7 >                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >    
3 >        [, nameA = "noName"]
4 >                              
5 >                                nameA = "noName"
6 >                                          
7 >                                            nameA = "noName"
1->Emitted(45, 5) Source(27, 10) + SourceIndex(0)
2 >Emitted(45, 9) Source(27, 10) + SourceIndex(0)
3 >Emitted(45, 31) Source(27, 30) + SourceIndex(0)
4 >Emitted(45, 33) Source(27, 13) + SourceIndex(0)
5 >Emitted(45, 43) Source(27, 29) + SourceIndex(0)
6 >Emitted(45, 45) Source(27, 13) + SourceIndex(0)
7 >Emitted(45, 82) Source(27, 29) + SourceIndex(0)
---
>>>    console.log(nameA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 >] of [robotA, robotB]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA
7 >                     )
8 >                      ;
1 >Emitted(46, 5) Source(28, 5) + SourceIndex(0)
2 >Emitted(46, 12) Source(28, 12) + SourceIndex(0)
3 >Emitted(46, 13) Source(28, 13) + SourceIndex(0)
4 >Emitted(46, 16) Source(28, 16) + SourceIndex(0)
5 >Emitted(46, 17) Source(28, 17) + SourceIndex(0)
6 >Emitted(46, 22) Source(28, 22) + SourceIndex(0)
7 >Emitted(46, 23) Source(28, 23) + SourceIndex(0)
8 >Emitted(46, 24) Source(28, 24) + SourceIndex(0)
---
>>>}
1 >^
2 > ^^^^^->
1 >
  >}
1 >Emitted(47, 2) Source(29, 2) + SourceIndex(0)
---
>>>try {
>>>    for (var multiRobots_1 = { iterator: __values(multiRobots) }; __step(multiRobots_1);) {
1->^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^^^^
7 >                             ^^
8 >                               ^^^^^^^^^^
9 >                                         ^^^^^^^^^
10>                                                  ^^^^^^^^^^^
11>                                                             ^
12>                                                              ^^
13>                                                                ^^
14>                                                                  ^^^^^^^^^^^^^^^^^^^^^
15>                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
2 >    for
3 >        
4 >        (let [, [
  >            primarySkillA = "primary",
  >            secondarySkillA = "secondary"
  >        ] = ["skill1", "skill2"]] of 
5 >         
6 >             
7 >                             
8 >                               
9 >                                         
10>                                                  multiRobots
11>                                                             
12>                                                              
13>                                                                
14>                                                                  let [, [
  >                                                                      primarySkillA = "primary",
  >                                                                      secondarySkillA = "secondary"
  >                                                                  ] = ["skill1", "skill2"]]
1->Emitted(49, 5) Source(30, 1) + SourceIndex(0)
2 >Emitted(49, 8) Source(30, 4) + SourceIndex(0)
3 >Emitted(49, 9) Source(30, 5) + SourceIndex(0)
4 >Emitted(49, 10) Source(33, 30) + SourceIndex(0)
5 >Emitted(49, 14) Source(33, 30) + SourceIndex(0)
6 >Emitted(49, 30) Source(33, 30) + SourceIndex(0)
7 >Emitted(49, 32) Source(33, 30) + SourceIndex(0)
8 >Emitted(49, 42) Source(33, 30) + SourceIndex(0)
9 >Emitted(49, 51) Source(33, 30) + SourceIndex(0)
10>Emitted(49, 62) Source(33, 41) + SourceIndex(0)
11>Emitted(49, 63) Source(33, 41) + SourceIndex(0)
12>Emitted(49, 65) Source(33, 41) + SourceIndex(0)
13>Emitted(49, 67) Source(30, 6) + SourceIndex(0)
14>Emitted(49, 88) Source(33, 26) + SourceIndex(0)
---
>>>        var _h = __read(multiRobots_1.result.value, 2), _j = _h[1], _k = __read(_j === void 0 ? ["skill1", "skill2"] : _j, 2), _l = _k[0], primarySkillA = _l === void 0 ? "primary" : _l, _m = _k[1], secondarySkillA = _m === void 0 ? "secondary" : _m;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                      ^^
5 >                                                        ^^^^^^^^^^
6 >                                                                  ^^
7 >                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                                                                             ^^
9 >                                                                                                                               ^^^^^^^^^^
10>                                                                                                                                         ^^
11>                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12>                                                                                                                                                                                         ^^
13>                                                                                                                                                                                           ^^^^^^^^^^
14>                                                                                                                                                                                                     ^^
15>                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            [, [
  >                primarySkillA = "primary",
  >                secondarySkillA = "secondary"
  >            ] = ["skill1", "skill2"]]
4 >                                                      
5 >                                                        [
  >                                                            primarySkillA = "primary",
  >                                                            secondarySkillA = "secondary"
  >                                                        ] = ["skill1", "skill2"]
6 >                                                                  
7 >                                                                    [
  >                                                                        primarySkillA = "primary",
  >                                                                        secondarySkillA = "secondary"
  >                                                                    ] = ["skill1", "skill2"]
8 >                                                                                                                             
9 >                                                                                                                               primarySkillA = "primary"
10>                                                                                                                                         
11>                                                                                                                                           primarySkillA = "primary"
12>                                                                                                                                                                                         ,
  >                                                                                                                                                                                             
13>                                                                                                                                                                                           secondarySkillA = "secondary"
14>                                                                                                                                                                                                     
15>                                                                                                                                                                                                       secondarySkillA = "secondary"
1->Emitted(50, 9) Source(30, 10) + SourceIndex(0)
2 >Emitted(50, 13) Source(30, 10) + SourceIndex(0)
3 >Emitted(50, 55) Source(33, 26) + SourceIndex(0)
4 >Emitted(50, 57) Source(30, 13) + SourceIndex(0)
5 >Emitted(50, 67) Source(33, 25) + SourceIndex(0)
6 >Emitted(50, 69) Source(30, 13) + SourceIndex(0)
7 >Emitted(50, 126) Source(33, 25) + SourceIndex(0)
8 >Emitted(50, 128) Source(31, 5) + SourceIndex(0)
9 >Emitted(50, 138) Source(31, 30) + SourceIndex(0)
10>Emitted(50, 140) Source(31, 5) + SourceIndex(0)
11>Emitted(50, 186) Source(31, 30) + SourceIndex(0)
12>Emitted(50, 188) Source(32, 5) + SourceIndex(0)
13>Emitted(50, 198) Source(32, 34) + SourceIndex(0)
14>Emitted(50, 200) Source(32, 5) + SourceIndex(0)
15>Emitted(50, 250) Source(32, 34) + SourceIndex(0)
---
>>>        console.log(primarySkillA);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^^^^^^^^^
7 >                                 ^
8 >                                  ^
1 >
  >] = ["skill1", "skill2"]] of multiRobots) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    primarySkillA
7 >                                 )
8 >                                  ;
1 >Emitted(51, 9) Source(34, 5) + SourceIndex(0)
2 >Emitted(51, 16) Source(34, 12) + SourceIndex(0)
3 >Emitted(51, 17) Source(34, 13) + SourceIndex(0)
4 >Emitted(51, 20) Source(34, 16) + SourceIndex(0)
5 >Emitted(51, 21) Source(34, 17) + SourceIndex(0)
6 >Emitted(51, 34) Source(34, 30) + SourceIndex(0)
7 >Emitted(51, 35) Source(34, 31) + SourceIndex(0)
8 >Emitted(51, 36) Source(34, 32) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(52, 6) Source(35, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_3_1) { e_3 = { error: e_3_1 }; }
>>>finally {
>>>    try { __close(multiRobots_1); } finally { if (e_3) throw e_3.error; }
>>>}
>>>try {
>>>    for (var iterator_2 = { iterator: __values(getMultiRobots()) }; __step(iterator_2);) {
1 >^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^
7 >                          ^^
8 >                            ^^^^^^^^^^
9 >                                      ^^^^^^^^^
10>                                               ^^^^^^^^^^^^^^
11>                                                             ^^
12>                                                               ^
13>                                                                ^^
14>                                                                  ^^
15>                                                                    ^^^^^^^^^^^^^^^^^^
16>                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >    for
3 >        
4 >        (let [, [
  >            primarySkillA = "primary",
  >            secondarySkillA = "secondary"
  >        ] = ["skill1", "skill2"]] of 
5 >         
6 >             
7 >                          
8 >                            
9 >                                      
10>                                               getMultiRobots
11>                                                             ()
12>                                                               
13>                                                                
14>                                                                  
15>                                                                    let [, [
  >                                                                        primarySkillA = "primary",
  >                                                                        secondarySkillA = "secondary"
  >                                                                    ] = ["skill1", "skill2"]]
1 >Emitted(59, 5) Source(36, 1) + SourceIndex(0)
2 >Emitted(59, 8) Source(36, 4) + SourceIndex(0)
3 >Emitted(59, 9) Source(36, 5) + SourceIndex(0)
4 >Emitted(59, 10) Source(39, 30) + SourceIndex(0)
5 >Emitted(59, 14) Source(39, 30) + SourceIndex(0)
6 >Emitted(59, 27) Source(39, 30) + SourceIndex(0)
7 >Emitted(59, 29) Source(39, 30) + SourceIndex(0)
8 >Emitted(59, 39) Source(39, 30) + SourceIndex(0)
9 >Emitted(59, 48) Source(39, 30) + SourceIndex(0)
10>Emitted(59, 62) Source(39, 44) + SourceIndex(0)
11>Emitted(59, 64) Source(39, 46) + SourceIndex(0)
12>Emitted(59, 65) Source(39, 46) + SourceIndex(0)
13>Emitted(59, 67) Source(39, 46) + SourceIndex(0)
14>Emitted(59, 69) Source(36, 6) + SourceIndex(0)
15>Emitted(59, 87) Source(39, 26) + SourceIndex(0)
---
>>>        var _o = __read(iterator_2.result.value, 2), _p = _o[1], _q = __read(_p === void 0 ? ["skill1", "skill2"] : _p, 2), _r = _q[0], primarySkillA = _r === void 0 ? "primary" : _r, _s = _q[1], secondarySkillA = _s === void 0 ? "secondary" : _s;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                   ^^
5 >                                                     ^^^^^^^^^^
6 >                                                               ^^
7 >                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                                                                          ^^
9 >                                                                                                                            ^^^^^^^^^^
10>                                                                                                                                      ^^
11>                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12>                                                                                                                                                                                      ^^
13>                                                                                                                                                                                        ^^^^^^^^^^
14>                                                                                                                                                                                                  ^^
15>                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            [, [
  >                primarySkillA = "primary",
  >                secondarySkillA = "secondary"
  >            ] = ["skill1", "skill2"]]
4 >                                                   
5 >                                                     [
  >                                                         primarySkillA = "primary",
  >                                                         secondarySkillA = "secondary"
  >                                                     ] = ["skill1", "skill2"]
6 >                                                               
7 >                                                                 [
  >                                                                     primarySkillA = "primary",
  >                                                                     secondarySkillA = "secondary"
  >                                                                 ] = ["skill1", "skill2"]
8 >                                                                                                                          
9 >                                                                                                                            primarySkillA = "primary"
10>                                                                                                                                      
11>                                                                                                                                        primarySkillA = "primary"
12>                                                                                                                                                                                      ,
  >                                                                                                                                                                                          
13>                                                                                                                                                                                        secondarySkillA = "secondary"
14>                                                                                                                                                                                                  
15>                                                                                                                                                                                                    secondarySkillA = "secondary"
1->Emitted(60, 9) Source(36, 10) + SourceIndex(0)
2 >Emitted(60, 13) Source(36, 10) + SourceIndex(0)
3 >Emitted(60, 52) Source(39, 26) + SourceIndex(0)
4 >Emitted(60, 54) Source(36, 13) + SourceIndex(0)
5 >Emitted(60, 64) Source(39, 25) + SourceIndex(0)
6 >Emitted(60, 66) Source(36, 13) + SourceIndex(0)
7 >Emitted(60, 123) Source(39, 25) + SourceIndex(0)
8 >Emitted(60, 125) Source(37, 5) + SourceIndex(0)
9 >Emitted(60, 135) Source(37, 30) + SourceIndex(0)
10>Emitted(60, 137) Source(37, 5) + SourceIndex(0)
11>Emitted(60, 183) Source(37, 30) + SourceIndex(0)
12>Emitted(60, 185) Source(38, 5) + SourceIndex(0)
13>Emitted(60, 195) Source(38, 34) + SourceIndex(0)
14>Emitted(60, 197) Source(38, 5) + SourceIndex(0)
15>Emitted(60, 247) Source(38, 34) + SourceIndex(0)
---
>>>        console.log(primarySkillA);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^^^^^^^^^
7 >                                 ^
8 >                                  ^
1 >
  >] = ["skill1", "skill2"]] of getMultiRobots()) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    primarySkillA
7 >                                 )
8 >                                  ;
1 >Emitted(61, 9) Source(40, 5) + SourceIndex(0)
2 >Emitted(61, 16) Source(40, 12) + SourceIndex(0)
3 >Emitted(61, 17) Source(40, 13) + SourceIndex(0)
4 >Emitted(61, 20) Source(40, 16) + SourceIndex(0)
5 >Emitted(61, 21) Source(40, 17) + SourceIndex(0)
6 >Emitted(61, 34) Source(40, 30) + SourceIndex(0)
7 >Emitted(61, 35) Source(40, 31) + SourceIndex(0)
8 >Emitted(61, 36) Source(40, 32) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(62, 6) Source(41, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_4_1) { e_4 = { error: e_4_1 }; }
>>>finally {
>>>    try { __close(iterator_2); } finally { if (e_4) throw e_4.error; }
>>>}
>>>for (var _t = 0, _u = [multiRobotA, multiRobotB]; _t < _u.length; _t++) {
1 >
2 >^^^
3 >   ^
4 >    ^
5 >     ^^^^^^^^^^
6 >               ^^
7 >                 ^^^^^^
8 >                       ^^^^^^^^^^^
9 >                                  ^^
10>                                    ^^^^^^^^^^^
11>                                               ^
12>                                                ^^
13>                                                  ^^^^^^^^^^^^^^
14>                                                                ^^
15>                                                                  ^^^^
16>                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >for
3 >    
4 >    (let [, [
  >        primarySkillA = "primary",
  >        secondarySkillA = "secondary"
  >    ] = ["skill1", "skill2"]] of 
5 >     [multiRobotA, multiRobotB]
6 >               
7 >                 [
8 >                       multiRobotA
9 >                                  , 
10>                                    multiRobotB
11>                                               ]
12>                                                
13>                                                  [multiRobotA, multiRobotB]
14>                                                                
15>                                                                  [multiRobotA, multiRobotB]
1 >Emitted(68, 1) Source(42, 1) + SourceIndex(0)
2 >Emitted(68, 4) Source(42, 4) + SourceIndex(0)
3 >Emitted(68, 5) Source(42, 5) + SourceIndex(0)
4 >Emitted(68, 6) Source(45, 30) + SourceIndex(0)
5 >Emitted(68, 16) Source(45, 56) + SourceIndex(0)
6 >Emitted(68, 18) Source(45, 30) + SourceIndex(0)
7 >Emitted(68, 24) Source(45, 31) + SourceIndex(0)
8 >Emitted(68, 35) Source(45, 42) + SourceIndex(0)
9 >Emitted(68, 37) Source(45, 44) + SourceIndex(0)
10>Emitted(68, 48) Source(45, 55) + SourceIndex(0)
11>Emitted(68, 49) Source(45, 56) + SourceIndex(0)
12>Emitted(68, 51) Source(45, 30) + SourceIndex(0)
13>Emitted(68, 65) Source(45, 56) + SourceIndex(0)
14>Emitted(68, 67) Source(45, 30) + SourceIndex(0)
15>Emitted(68, 71) Source(45, 56) + SourceIndex(0)
---
>>>    var _v = __read(_u[_t], 2), _w = _v[1], _x = __read(_w === void 0 ? ["skill1", "skill2"] : _w, 2), _y = _x[0], primarySkillA = _y === void 0 ? "primary" : _y, _z = _x[1], secondarySkillA = _z === void 0 ? "secondary" : _z;
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^^^^^^^^
4 >                              ^^
5 >                                ^^^^^^^^^^
6 >                                          ^^
7 >                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                                                     ^^
9 >                                                                                                       ^^^^^^^^^^
10>                                                                                                                 ^^
11>                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12>                                                                                                                                                                 ^^
13>                                                                                                                                                                   ^^^^^^^^^^
14>                                                                                                                                                                             ^^
15>                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >    
3 >        [, [
  >            primarySkillA = "primary",
  >            secondarySkillA = "secondary"
  >        ] = ["skill1", "skill2"]]
4 >                              
5 >                                [
  >                                    primarySkillA = "primary",
  >                                    secondarySkillA = "secondary"
  >                                ] = ["skill1", "skill2"]
6 >                                          
7 >                                            [
  >                                                primarySkillA = "primary",
  >                                                secondarySkillA = "secondary"
  >                                            ] = ["skill1", "skill2"]
8 >                                                                                                     
9 >                                                                                                       primarySkillA = "primary"
10>                                                                                                                 
11>                                                                                                                   primarySkillA = "primary"
12>                                                                                                                                                                 ,
  >                                                                                                                                                                     
13>                                                                                                                                                                   secondarySkillA = "secondary"
14>                                                                                                                                                                             
15>                                                                                                                                                                               secondarySkillA = "secondary"
1->Emitted(69, 5) Source(42, 10) + SourceIndex(0)
2 >Emitted(69, 9) Source(42, 10) + SourceIndex(0)
3 >Emitted(69, 31) Source(45, 26) + SourceIndex(0)
4 >Emitted(69, 33) Source(42, 13) + SourceIndex(0)
5 >Emitted(69, 43) Source(45, 25) + SourceIndex(0)
6 >Emitted(69, 45) Source(42, 13) + SourceIndex(0)
7 >Emitted(69, 102) Source(45, 25) + SourceIndex(0)
8 >Emitted(69, 104) Source(43, 5) + SourceIndex(0)
9 >Emitted(69, 114) Source(43, 30) + SourceIndex(0)
10>Emitted(69, 116) Source(43, 5) + SourceIndex(0)
11>Emitted(69, 162) Source(43, 30) + SourceIndex(0)
12>Emitted(69, 164) Source(44, 5) + SourceIndex(0)
13>Emitted(69, 174) Source(44, 34) + SourceIndex(0)
14>Emitted(69, 176) Source(44, 5) + SourceIndex(0)
15>Emitted(69, 226) Source(44, 34) + SourceIndex(0)
---
>>>    console.log(primarySkillA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^^^^^^
7 >                             ^
8 >                              ^
1 >
  >] = ["skill1", "skill2"]] of [multiRobotA, multiRobotB]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                primarySkillA
7 >                             )
8 >                              ;
1 >Emitted(70, 5) Source(46, 5) + SourceIndex(0)
2 >Emitted(70, 12) Source(46, 12) + SourceIndex(0)
3 >Emitted(70, 13) Source(46, 13) + SourceIndex(0)
4 >Emitted(70, 16) Source(46, 16) + SourceIndex(0)
5 >Emitted(70, 17) Source(46, 17) + SourceIndex(0)
6 >Emitted(70, 30) Source(46, 30) + SourceIndex(0)
7 >Emitted(70, 31) Source(46, 31) + SourceIndex(0)
8 >Emitted(70, 32) Source(46, 32) + SourceIndex(0)
---
>>>}
1 >^
2 > ^^^^^->
1 >
  >}
1 >Emitted(71, 2) Source(47, 2) + SourceIndex(0)
---
>>>try {
>>>    for (var robots_2 = { iterator: __values(robots) }; __step(robots_2);) {
1->^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^
7 >                        ^^
8 >                          ^^^^^^^^^^
9 >                                    ^^^^^^^^^
10>                                             ^^^^^^
11>                                                   ^
12>                                                    ^^
13>                                                      ^^
14>                                                        ^^^^^^^^^^^^^^^^
15>                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
  >
2 >    for
3 >        
4 >        (let [numberB = -1] of 
5 >         
6 >             
7 >                        
8 >                          
9 >                                    
10>                                             robots
11>                                                   
12>                                                    
13>                                                      
14>                                                        let [numberB = -1]
1->Emitted(73, 5) Source(49, 1) + SourceIndex(0)
2 >Emitted(73, 8) Source(49, 4) + SourceIndex(0)
3 >Emitted(73, 9) Source(49, 5) + SourceIndex(0)
4 >Emitted(73, 10) Source(49, 28) + SourceIndex(0)
5 >Emitted(73, 14) Source(49, 28) + SourceIndex(0)
6 >Emitted(73, 25) Source(49, 28) + SourceIndex(0)
7 >Emitted(73, 27) Source(49, 28) + SourceIndex(0)
8 >Emitted(73, 37) Source(49, 28) + SourceIndex(0)
9 >Emitted(73, 46) Source(49, 28) + SourceIndex(0)
10>Emitted(73, 52) Source(49, 34) + SourceIndex(0)
11>Emitted(73, 53) Source(49, 34) + SourceIndex(0)
12>Emitted(73, 55) Source(49, 34) + SourceIndex(0)
13>Emitted(73, 57) Source(49, 6) + SourceIndex(0)
14>Emitted(73, 73) Source(49, 24) + SourceIndex(0)
---
>>>        var _0 = __read(robots_2.result.value, 1), _1 = _0[0], numberB = _1 === void 0 ? -1 : _1;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                 ^^
5 >                                                   ^^^^^^^^^^
6 >                                                             ^^
7 >                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            [numberB = -1]
4 >                                                 
5 >                                                   numberB = -1
6 >                                                             
7 >                                                               numberB = -1
1->Emitted(74, 9) Source(49, 10) + SourceIndex(0)
2 >Emitted(74, 13) Source(49, 10) + SourceIndex(0)
3 >Emitted(74, 50) Source(49, 24) + SourceIndex(0)
4 >Emitted(74, 52) Source(49, 11) + SourceIndex(0)
5 >Emitted(74, 62) Source(49, 23) + SourceIndex(0)
6 >Emitted(74, 64) Source(49, 11) + SourceIndex(0)
7 >Emitted(74, 97) Source(49, 23) + SourceIndex(0)
---
>>>        console.log(numberB);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^^^
7 >                           ^
8 >                            ^
1 >] of robots) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    numberB
7 >                           )
8 >                            ;
1 >Emitted(75, 9) Source(50, 5) + SourceIndex(0)
2 >Emitted(75, 16) Source(50, 12) + SourceIndex(0)
3 >Emitted(75, 17) Source(50, 13) + SourceIndex(0)
4 >Emitted(75, 20) Source(50, 16) + SourceIndex(0)
5 >Emitted(75, 21) Source(50, 17) + SourceIndex(0)
6 >Emitted(75, 28) Source(50, 24) + SourceIndex(0)
7 >Emitted(75, 29) Source(50, 25) + SourceIndex(0)
8 >Emitted(75, 30) Source(50, 26) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(76, 6) Source(51, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_5_1) { e_5 = { error: e_5_1 }; }
>>>finally {
>>>    try { __close(robots_2); } finally { if (e_5) throw e_5.error; }
>>>}
>>>try {
>>>    for (var iterator_3 = { iterator: __values(getRobots()) }; __step(iterator_3);) {
1 >^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^
7 >                          ^^
8 >                            ^^^^^^^^^^
9 >                                      ^^^^^^^^^
10>                                               ^^^^^^^^^
11>                                                        ^^
12>                                                          ^
13>                                                           ^^
14>                                                             ^^
15>                                                               ^^^^^^^^^^^^^^^^^^
16>                                                                                 ^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >    for
3 >        
4 >        (let [numberB = -1] of 
5 >         
6 >             
7 >                          
8 >                            
9 >                                      
10>                                               getRobots
11>                                                        ()
12>                                                          
13>                                                           
14>                                                             
15>                                                               let [numberB = -1]
1 >Emitted(83, 5) Source(52, 1) + SourceIndex(0)
2 >Emitted(83, 8) Source(52, 4) + SourceIndex(0)
3 >Emitted(83, 9) Source(52, 5) + SourceIndex(0)
4 >Emitted(83, 10) Source(52, 28) + SourceIndex(0)
5 >Emitted(83, 14) Source(52, 28) + SourceIndex(0)
6 >Emitted(83, 27) Source(52, 28) + SourceIndex(0)
7 >Emitted(83, 29) Source(52, 28) + SourceIndex(0)
8 >Emitted(83, 39) Source(52, 28) + SourceIndex(0)
9 >Emitted(83, 48) Source(52, 28) + SourceIndex(0)
10>Emitted(83, 57) Source(52, 37) + SourceIndex(0)
11>Emitted(83, 59) Source(52, 39) + SourceIndex(0)
12>Emitted(83, 60) Source(52, 39) + SourceIndex(0)
13>Emitted(83, 62) Source(52, 39) + SourceIndex(0)
14>Emitted(83, 64) Source(52, 6) + SourceIndex(0)
15>Emitted(83, 82) Source(52, 24) + SourceIndex(0)
---
>>>        var _2 = __read(iterator_3.result.value, 1), _3 = _2[0], numberB = _3 === void 0 ? -1 : _3;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                   ^^
5 >                                                     ^^^^^^^^^^
6 >                                                               ^^
7 >                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            [numberB = -1]
4 >                                                   
5 >                                                     numberB = -1
6 >                                                               
7 >                                                                 numberB = -1
1->Emitted(84, 9) Source(52, 10) + SourceIndex(0)
2 >Emitted(84, 13) Source(52, 10) + SourceIndex(0)
3 >Emitted(84, 52) Source(52, 24) + SourceIndex(0)
4 >Emitted(84, 54) Source(52, 11) + SourceIndex(0)
5 >Emitted(84, 64) Source(52, 23) + SourceIndex(0)
6 >Emitted(84, 66) Source(52, 11) + SourceIndex(0)
7 >Emitted(84, 99) Source(52, 23) + SourceIndex(0)
---
>>>        console.log(numberB);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^^^
7 >                           ^
8 >                            ^
1 >] of getRobots()) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    numberB
7 >                           )
8 >                            ;
1 >Emitted(85, 9) Source(53, 5) + SourceIndex(0)
2 >Emitted(85, 16) Source(53, 12) + SourceIndex(0)
3 >Emitted(85, 17) Source(53, 13) + SourceIndex(0)
4 >Emitted(85, 20) Source(53, 16) + SourceIndex(0)
5 >Emitted(85, 21) Source(53, 17) + SourceIndex(0)
6 >Emitted(85, 28) Source(53, 24) + SourceIndex(0)
7 >Emitted(85, 29) Source(53, 25) + SourceIndex(0)
8 >Emitted(85, 30) Source(53, 26) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(86, 6) Source(54, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_6_1) { e_6 = { error: e_6_1 }; }
>>>finally {
>>>    try { __close(iterator_3); } finally { if (e_6) throw e_6.error; }
>>>}
>>>for (var _4 = 0, _5 = [robotA, robotB]; _4 < _5.length; _4++) {
1 >
2 >^^^
3 >   ^
4 >    ^
5 >     ^^^^^^^^^^
6 >               ^^
7 >                 ^^^^^^
8 >                       ^^^^^^
9 >                             ^^
10>                               ^^^^^^
11>                                     ^
12>                                      ^^
13>                                        ^^^^^^^^^^^^^^
14>                                                      ^^
15>                                                        ^^^^
16>                                                            ^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >for
3 >    
4 >    (let [numberB = -1] of 
5 >     [robotA, robotB]
6 >               
7 >                 [
8 >                       robotA
9 >                             , 
10>                               robotB
11>                                     ]
12>                                      
13>                                        [robotA, robotB]
14>                                                      
15>                                                        [robotA, robotB]
1 >Emitted(92, 1) Source(55, 1) + SourceIndex(0)
2 >Emitted(92, 4) Source(55, 4) + SourceIndex(0)
3 >Emitted(92, 5) Source(55, 5) + SourceIndex(0)
4 >Emitted(92, 6) Source(55, 28) + SourceIndex(0)
5 >Emitted(92, 16) Source(55, 44) + SourceIndex(0)
6 >Emitted(92, 18) Source(55, 28) + SourceIndex(0)
7 >Emitted(92, 24) Source(55, 29) + SourceIndex(0)
8 >Emitted(92, 30) Source(55, 35) + SourceIndex(0)
9 >Emitted(92, 32) Source(55, 37) + SourceIndex(0)
10>Emitted(92, 38) Source(55, 43) + SourceIndex(0)
11>Emitted(92, 39) Source(55, 44) + SourceIndex(0)
12>Emitted(92, 41) Source(55, 28) + SourceIndex(0)
13>Emitted(92, 55) Source(55, 44) + SourceIndex(0)
14>Emitted(92, 57) Source(55, 28) + SourceIndex(0)
15>Emitted(92, 61) Source(55, 44) + SourceIndex(0)
---
>>>    var _6 = __read(_5[_4], 1), _7 = _6[0], numberB = _7 === void 0 ? -1 : _7;
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^^^^^^^^
4 >                              ^^
5 >                                ^^^^^^^^^^
6 >                                          ^^
7 >                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >    
3 >        [numberB = -1]
4 >                              
5 >                                numberB = -1
6 >                                          
7 >                                            numberB = -1
1->Emitted(93, 5) Source(55, 10) + SourceIndex(0)
2 >Emitted(93, 9) Source(55, 10) + SourceIndex(0)
3 >Emitted(93, 31) Source(55, 24) + SourceIndex(0)
4 >Emitted(93, 33) Source(55, 11) + SourceIndex(0)
5 >Emitted(93, 43) Source(55, 23) + SourceIndex(0)
6 >Emitted(93, 45) Source(55, 11) + SourceIndex(0)
7 >Emitted(93, 78) Source(55, 23) + SourceIndex(0)
---
>>>    console.log(numberB);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^
7 >                       ^
8 >                        ^
1 >] of [robotA, robotB]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                numberB
7 >                       )
8 >                        ;
1 >Emitted(94, 5) Source(56, 5) + SourceIndex(0)
2 >Emitted(94, 12) Source(56, 12) + SourceIndex(0)
3 >Emitted(94, 13) Source(56, 13) + SourceIndex(0)
4 >Emitted(94, 16) Source(56, 16) + SourceIndex(0)
5 >Emitted(94, 17) Source(56, 17) + SourceIndex(0)
6 >Emitted(94, 24) Source(56, 24) + SourceIndex(0)
7 >Emitted(94, 25) Source(56, 25) + SourceIndex(0)
8 >Emitted(94, 26) Source(56, 26) + SourceIndex(0)
---
>>>}
1 >^
2 > ^^^^^->
1 >
  >}
1 >Emitted(95, 2) Source(57, 2) + SourceIndex(0)
---
>>>try {
>>>    for (var multiRobots_2 = { iterator: __values(multiRobots) }; __step(multiRobots_2);) {
1->^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^^^^
7 >                             ^^
8 >                               ^^^^^^^^^^
9 >                                         ^^^^^^^^^
10>                                                  ^^^^^^^^^^^
11>                                                             ^
12>                                                              ^^
13>                                                                ^^
14>                                                                  ^^^^^^^^^^^^^^^^^^^^^
15>                                                                                       ^^^^^^^^^^^^^^^^^^^^->
1->
  >
2 >    for
3 >        
4 >        (let [nameB = "noName"] of 
5 >         
6 >             
7 >                             
8 >                               
9 >                                         
10>                                                  multiRobots
11>                                                             
12>                                                              
13>                                                                
14>                                                                  let [nameB = "noName"]
1->Emitted(97, 5) Source(58, 1) + SourceIndex(0)
2 >Emitted(97, 8) Source(58, 4) + SourceIndex(0)
3 >Emitted(97, 9) Source(58, 5) + SourceIndex(0)
4 >Emitted(97, 10) Source(58, 32) + SourceIndex(0)
5 >Emitted(97, 14) Source(58, 32) + SourceIndex(0)
6 >Emitted(97, 30) Source(58, 32) + SourceIndex(0)
7 >Emitted(97, 32) Source(58, 32) + SourceIndex(0)
8 >Emitted(97, 42) Source(58, 32) + SourceIndex(0)
9 >Emitted(97, 51) Source(58, 32) + SourceIndex(0)
10>Emitted(97, 62) Source(58, 43) + SourceIndex(0)
11>Emitted(97, 63) Source(58, 43) + SourceIndex(0)
12>Emitted(97, 65) Source(58, 43) + SourceIndex(0)
13>Emitted(97, 67) Source(58, 6) + SourceIndex(0)
14>Emitted(97, 88) Source(58, 28) + SourceIndex(0)
---
>>>        var _8 = __read(multiRobots_2.result.value, 1), _9 = _8[0], nameB = _9 === void 0 ? "noName" : _9;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                      ^^
5 >                                                        ^^^^^^^^^^
6 >                                                                  ^^
7 >                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            [nameB = "noName"]
4 >                                                      
5 >                                                        nameB = "noName"
6 >                                                                  
7 >                                                                    nameB = "noName"
1->Emitted(98, 9) Source(58, 10) + SourceIndex(0)
2 >Emitted(98, 13) Source(58, 10) + SourceIndex(0)
3 >Emitted(98, 55) Source(58, 28) + SourceIndex(0)
4 >Emitted(98, 57) Source(58, 11) + SourceIndex(0)
5 >Emitted(98, 67) Source(58, 27) + SourceIndex(0)
6 >Emitted(98, 69) Source(58, 11) + SourceIndex(0)
7 >Emitted(98, 106) Source(58, 27) + SourceIndex(0)
---
>>>        console.log(nameB);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^
7 >                         ^
8 >                          ^
1 >] of multiRobots) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    nameB
7 >                         )
8 >                          ;
1 >Emitted(99, 9) Source(59, 5) + SourceIndex(0)
2 >Emitted(99, 16) Source(59, 12) + SourceIndex(0)
3 >Emitted(99, 17) Source(59, 13) + SourceIndex(0)
4 >Emitted(99, 20) Source(59, 16) + SourceIndex(0)
5 >Emitted(99, 21) Source(59, 17) + SourceIndex(0)
6 >Emitted(99, 26) Source(59, 22) + SourceIndex(0)
7 >Emitted(99, 27) Source(59, 23) + SourceIndex(0)
8 >Emitted(99, 28) Source(59, 24) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(100, 6) Source(60, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_7_1) { e_7 = { error: e_7_1 }; }
>>>finally {
>>>    try { __close(multiRobots_2); } finally { if (e_7) throw e_7.error; }
>>>}
>>>try {
>>>    for (var iterator_4 = { iterator: __values(getMultiRobots()) }; __step(iterator_4);) {
1 >^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^
7 >                          ^^
8 >                            ^^^^^^^^^^
9 >                                      ^^^^^^^^^
10>                                               ^^^^^^^^^^^^^^
11>                                                             ^^
12>                                                               ^
13>                                                                ^^
14>                                                                  ^^
15>                                                                    ^^^^^^^^^^^^^^^^^^
16>                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >    for
3 >        
4 >        (let [nameB = "noName"] of 
5 >         
6 >             
7 >                          
8 >                            
9 >                                      
10>                                               getMultiRobots
11>                                                             ()
12>                                                               
13>                                                                
14>                                                                  
15>                                                                    let [nameB = "noName"]
1 >Emitted(107, 5) Source(61, 1) + SourceIndex(0)
2 >Emitted(107, 8) Source(61, 4) + SourceIndex(0)
3 >Emitted(107, 9) Source(61, 5) + SourceIndex(0)
4 >Emitted(107, 10) Source(61, 32) + SourceIndex(0)
5 >Emitted(107, 14) Source(61, 32) + SourceIndex(0)
6 >Emitted(107, 27) Source(61, 32) + SourceIndex(0)
7 >Emitted(107, 29) Source(61, 32) + SourceIndex(0)
8 >Emitted(107, 39) Source(61, 32) + SourceIndex(0)
9 >Emitted(107, 48) Source(61, 32) + SourceIndex(0)
10>Emitted(107, 62) Source(61, 46) + SourceIndex(0)
11>Emitted(107, 64) Source(61, 48) + SourceIndex(0)
12>Emitted(107, 65) Source(61, 48) + SourceIndex(0)
13>Emitted(107, 67) Source(61, 48) + SourceIndex(0)
14>Emitted(107, 69) Source(61, 6) + SourceIndex(0)
15>Emitted(107, 87) Source(61, 28) + SourceIndex(0)
---
>>>        var _10 = __read(iterator_4.result.value, 1), _11 = _10[0], nameB = _11 === void 0 ? "noName" : _11;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                    ^^
5 >                                                      ^^^^^^^^^^^^
6 >                                                                  ^^
7 >                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            [nameB = "noName"]
4 >                                                    
5 >                                                      nameB = "noName"
6 >                                                                  
7 >                                                                    nameB = "noName"
1->Emitted(108, 9) Source(61, 10) + SourceIndex(0)
2 >Emitted(108, 13) Source(61, 10) + SourceIndex(0)
3 >Emitted(108, 53) Source(61, 28) + SourceIndex(0)
4 >Emitted(108, 55) Source(61, 11) + SourceIndex(0)
5 >Emitted(108, 67) Source(61, 27) + SourceIndex(0)
6 >Emitted(108, 69) Source(61, 11) + SourceIndex(0)
7 >Emitted(108, 108) Source(61, 27) + SourceIndex(0)
---
>>>        console.log(nameB);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^
7 >                         ^
8 >                          ^
1 >] of getMultiRobots()) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    nameB
7 >                         )
8 >                          ;
1 >Emitted(109, 9) Source(62, 5) + SourceIndex(0)
2 >Emitted(109, 16) Source(62, 12) + SourceIndex(0)
3 >Emitted(109, 17) Source(62, 13) + SourceIndex(0)
4 >Emitted(109, 20) Source(62, 16) + SourceIndex(0)
5 >Emitted(109, 21) Source(62, 17) + SourceIndex(0)
6 >Emitted(109, 26) Source(62, 22) + SourceIndex(0)
7 >Emitted(109, 27) Source(62, 23) + SourceIndex(0)
8 >Emitted(109, 28) Source(62, 24) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(110, 6) Source(63, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_8_1) { e_8 = { error: e_8_1 }; }
>>>finally {
>>>    try { __close(iterator_4); } finally { if (e_8) throw e_8.error; }
>>>}
>>>for (var _12 = 0, _13 = [multiRobotA, multiRobotB]; _12 < _13.length; _12++) {
1 >
2 >^^^
3 >   ^
4 >    ^
5 >     ^^^^^^^^^^^
6 >                ^^
7 >                  ^^^^^^^
8 >                         ^^^^^^^^^^^
9 >                                    ^^
10>                                      ^^^^^^^^^^^
11>                                                 ^
12>                                                  ^^
13>                                                    ^^^^^^^^^^^^^^^^
14>                                                                    ^^
15>                                                                      ^^^^^
16>                                                                           ^^^^^^^^^^^^^^^->
1 >
  >
2 >for
3 >    
4 >    (let [nameB = "noName"] of 
5 >     [multiRobotA, multiRobotB]
6 >                
7 >                  [
8 >                         multiRobotA
9 >                                    , 
10>                                      multiRobotB
11>                                                 ]
12>                                                  
13>                                                    [multiRobotA, multiRobotB]
14>                                                                    
15>                                                                      [multiRobotA, multiRobotB]
1 >Emitted(116, 1) Source(64, 1) + SourceIndex(0)
2 >Emitted(116, 4) Source(64, 4) + SourceIndex(0)
3 >Emitted(116, 5) Source(64, 5) + SourceIndex(0)
4 >Emitted(116, 6) Source(64, 32) + SourceIndex(0)
5 >Emitted(116, 17) Source(64, 58) + SourceIndex(0)
6 >Emitted(116, 19) Source(64, 32) + SourceIndex(0)
7 >Emitted(116, 26) Source(64, 33) + SourceIndex(0)
8 >Emitted(116, 37) Source(64, 44) + SourceIndex(0)
9 >Emitted(116, 39) Source(64, 46) + SourceIndex(0)
10>Emitted(116, 50) Source(64, 57) + SourceIndex(0)
11>Emitted(116, 51) Source(64, 58) + SourceIndex(0)
12>Emitted(116, 53) Source(64, 32) + SourceIndex(0)
13>Emitted(116, 69) Source(64, 58) + SourceIndex(0)
14>Emitted(116, 71) Source(64, 32) + SourceIndex(0)
15>Emitted(116, 76) Source(64, 58) + SourceIndex(0)
---
>>>    var _14 = __read(_13[_12], 1), _15 = _14[0], nameB = _15 === void 0 ? "noName" : _15;
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                 ^^
5 >                                   ^^^^^^^^^^^^
6 >                                               ^^
7 >                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >    
3 >        [nameB = "noName"]
4 >                                 
5 >                                   nameB = "noName"
6 >                                               
7 >                                                 nameB = "noName"
1->Emitted(117, 5) Source(64, 10) + SourceIndex(0)
2 >Emitted(117, 9) Source(64, 10) + SourceIndex(0)
3 >Emitted(117, 34) Source(64, 28) + SourceIndex(0)
4 >Emitted(117, 36) Source(64, 11) + SourceIndex(0)
5 >Emitted(117, 48) Source(64, 27) + SourceIndex(0)
6 >Emitted(117, 50) Source(64, 11) + SourceIndex(0)
7 >Emitted(117, 89) Source(64, 27) + SourceIndex(0)
---
>>>    console.log(nameB);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 >] of [multiRobotA, multiRobotB]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameB
7 >                     )
8 >                      ;
1 >Emitted(118, 5) Source(65, 5) + SourceIndex(0)
2 >Emitted(118, 12) Source(65, 12) + SourceIndex(0)
3 >Emitted(118, 13) Source(65, 13) + SourceIndex(0)
4 >Emitted(118, 16) Source(65, 16) + SourceIndex(0)
5 >Emitted(118, 17) Source(65, 17) + SourceIndex(0)
6 >Emitted(118, 22) Source(65, 22) + SourceIndex(0)
7 >Emitted(118, 23) Source(65, 23) + SourceIndex(0)
8 >Emitted(118, 24) Source(65, 24) + SourceIndex(0)
---
>>>}
1 >^
2 > ^^^^^->
1 >
  >}
1 >Emitted(119, 2) Source(66, 2) + SourceIndex(0)
---
>>>try {
>>>    for (var robots_3 = { iterator: __values(robots) }; __step(robots_3);) {
1->^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^
7 >                        ^^
8 >                          ^^^^^^^^^^
9 >                                    ^^^^^^^^^
10>                                             ^^^^^^
11>                                                   ^
12>                                                    ^^
13>                                                      ^^
14>                                                        ^^^^^^^^^^^^^^^^
15>                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
  >
2 >    for
3 >        
4 >        (let [numberA2 = -1, nameA2 = "noName", skillA2 = "skill"] of 
5 >         
6 >             
7 >                        
8 >                          
9 >                                    
10>                                             robots
11>                                                   
12>                                                    
13>                                                      
14>                                                        let [numberA2 = -1, nameA2 = "noName", skillA2 = "skill"]
1->Emitted(121, 5) Source(68, 1) + SourceIndex(0)
2 >Emitted(121, 8) Source(68, 4) + SourceIndex(0)
3 >Emitted(121, 9) Source(68, 5) + SourceIndex(0)
4 >Emitted(121, 10) Source(68, 67) + SourceIndex(0)
5 >Emitted(121, 14) Source(68, 67) + SourceIndex(0)
6 >Emitted(121, 25) Source(68, 67) + SourceIndex(0)
7 >Emitted(121, 27) Source(68, 67) + SourceIndex(0)
8 >Emitted(121, 37) Source(68, 67) + SourceIndex(0)
9 >Emitted(121, 46) Source(68, 67) + SourceIndex(0)
10>Emitted(121, 52) Source(68, 73) + SourceIndex(0)
11>Emitted(121, 53) Source(68, 73) + SourceIndex(0)
12>Emitted(121, 55) Source(68, 73) + SourceIndex(0)
13>Emitted(121, 57) Source(68, 6) + SourceIndex(0)
14>Emitted(121, 73) Source(68, 63) + SourceIndex(0)
---
>>>        var _16 = __read(robots_3.result.value, 3), _17 = _16[0], numberA2 = _17 === void 0 ? -1 : _17, _18 = _16[1], nameA2 = _18 === void 0 ? "noName" : _18, _19 = _16[2], skillA2 = _19 === void 0 ? "skill" : _19;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                  ^^
5 >                                                    ^^^^^^^^^^^^
6 >                                                                ^^
7 >                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                                                      ^^
9 >                                                                                                        ^^^^^^^^^^^^
10>                                                                                                                    ^^
11>                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12>                                                                                                                                                              ^^
13>                                                                                                                                                                ^^^^^^^^^^^^
14>                                                                                                                                                                            ^^
15>                                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            [numberA2 = -1, nameA2 = "noName", skillA2 = "skill"]
4 >                                                  
5 >                                                    numberA2 = -1
6 >                                                                
7 >                                                                  numberA2 = -1
8 >                                                                                                      , 
9 >                                                                                                        nameA2 = "noName"
10>                                                                                                                    
11>                                                                                                                      nameA2 = "noName"
12>                                                                                                                                                              , 
13>                                                                                                                                                                skillA2 = "skill"
14>                                                                                                                                                                            
15>                                                                                                                                                                              skillA2 = "skill"
1->Emitted(122, 9) Source(68, 10) + SourceIndex(0)
2 >Emitted(122, 13) Source(68, 10) + SourceIndex(0)
3 >Emitted(122, 51) Source(68, 63) + SourceIndex(0)
4 >Emitted(122, 53) Source(68, 11) + SourceIndex(0)
5 >Emitted(122, 65) Source(68, 24) + SourceIndex(0)
6 >Emitted(122, 67) Source(68, 11) + SourceIndex(0)
7 >Emitted(122, 103) Source(68, 24) + SourceIndex(0)
8 >Emitted(122, 105) Source(68, 26) + SourceIndex(0)
9 >Emitted(122, 117) Source(68, 43) + SourceIndex(0)
10>Emitted(122, 119) Source(68, 26) + SourceIndex(0)
11>Emitted(122, 159) Source(68, 43) + SourceIndex(0)
12>Emitted(122, 161) Source(68, 45) + SourceIndex(0)
13>Emitted(122, 173) Source(68, 62) + SourceIndex(0)
14>Emitted(122, 175) Source(68, 45) + SourceIndex(0)
15>Emitted(122, 215) Source(68, 62) + SourceIndex(0)
---
>>>        console.log(nameA2);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^^
7 >                          ^
8 >                           ^
1 >] of robots) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    nameA2
7 >                          )
8 >                           ;
1 >Emitted(123, 9) Source(69, 5) + SourceIndex(0)
2 >Emitted(123, 16) Source(69, 12) + SourceIndex(0)
3 >Emitted(123, 17) Source(69, 13) + SourceIndex(0)
4 >Emitted(123, 20) Source(69, 16) + SourceIndex(0)
5 >Emitted(123, 21) Source(69, 17) + SourceIndex(0)
6 >Emitted(123, 27) Source(69, 23) + SourceIndex(0)
7 >Emitted(123, 28) Source(69, 24) + SourceIndex(0)
8 >Emitted(123, 29) Source(69, 25) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(124, 6) Source(70, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_9_1) { e_9 = { error: e_9_1 }; }
>>>finally {
>>>    try { __close(robots_3); } finally { if (e_9) throw e_9.error; }
>>>}
>>>try {
>>>    for (var iterator_5 = { iterator: __values(getRobots()) }; __step(iterator_5);) {
1 >^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^
7 >                          ^^
8 >                            ^^^^^^^^^^
9 >                                      ^^^^^^^^^
10>                                               ^^^^^^^^^
11>                                                        ^^
12>                                                          ^
13>                                                           ^^
14>                                                             ^^
15>                                                               ^^^^^^^^^^^^^^^^^^
16>                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >    for
3 >        
4 >        (let [numberA2 = -1, nameA2 = "noName", skillA2 = "skill"] of 
5 >         
6 >             
7 >                          
8 >                            
9 >                                      
10>                                               getRobots
11>                                                        ()
12>                                                          
13>                                                           
14>                                                             
15>                                                               let [numberA2 = -1, nameA2 = "noName", skillA2 = "skill"]
1 >Emitted(131, 5) Source(71, 1) + SourceIndex(0)
2 >Emitted(131, 8) Source(71, 4) + SourceIndex(0)
3 >Emitted(131, 9) Source(71, 5) + SourceIndex(0)
4 >Emitted(131, 10) Source(71, 67) + SourceIndex(0)
5 >Emitted(131, 14) Source(71, 67) + SourceIndex(0)
6 >Emitted(131, 27) Source(71, 67) + SourceIndex(0)
7 >Emitted(131, 29) Source(71, 67) + SourceIndex(0)
8 >Emitted(131, 39) Source(71, 67) + SourceIndex(0)
9 >Emitted(131, 48) Source(71, 67) + SourceIndex(0)
10>Emitted(131, 57) Source(71, 76) + SourceIndex(0)
11>Emitted(131, 59) Source(71, 78) + SourceIndex(0)
12>Emitted(131, 60) Source(71, 78) + SourceIndex(0)
13>Emitted(131, 62) Source(71, 78) + SourceIndex(0)
14>Emitted(131, 64) Source(71, 6) + SourceIndex(0)
15>Emitted(131, 82) Source(71, 63) + SourceIndex(0)
---
>>>        var _20 = __read(iterator_5.result.value, 3), _21 = _20[0], numberA2 = _21 === void 0 ? -1 : _21, _22 = _20[1], nameA2 = _22 === void 0 ? "noName" : _22, _23 = _20[2], skillA2 = _23 === void 0 ? "skill" : _23;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                    ^^
5 >                                                      ^^^^^^^^^^^^
6 >                                                                  ^^
7 >                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                                                        ^^
9 >                                                                                                          ^^^^^^^^^^^^
10>                                                                                                                      ^^
11>                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12>                                                                                                                                                                ^^
13>                                                                                                                                                                  ^^^^^^^^^^^^
14>                                                                                                                                                                              ^^
15>                                                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            [numberA2 = -1, nameA2 = "noName", skillA2 = "skill"]
4 >                                                    
5 >                                                      numberA2 = -1
6 >                                                                  
7 >                                                                    numberA2 = -1
8 >                                                                                                        , 
9 >                                                                                                          nameA2 = "noName"
10>                                                                                                                      
11>                                                                                                                        nameA2 = "noName"
12>                                                                                                                                                                , 
13>                                                                                                                                                                  skillA2 = "skill"
14>                                                                                                                                                                              
15>                                                                                                                                                                                skillA2 = "skill"
1->Emitted(132, 9) Source(71, 10) + SourceIndex(0)
2 >Emitted(132, 13) Source(71, 10) + SourceIndex(0)
3 >Emitted(132, 53) Source(71, 63) + SourceIndex(0)
4 >Emitted(132, 55) Source(71, 11) + SourceIndex(0)
5 >Emitted(132, 67) Source(71, 24) + SourceIndex(0)
6 >Emitted(132, 69) Source(71, 11) + SourceIndex(0)
7 >Emitted(132, 105) Source(71, 24) + SourceIndex(0)
8 >Emitted(132, 107) Source(71, 26) + SourceIndex(0)
9 >Emitted(132, 119) Source(71, 43) + SourceIndex(0)
10>Emitted(132, 121) Source(71, 26) + SourceIndex(0)
11>Emitted(132, 161) Source(71, 43) + SourceIndex(0)
12>Emitted(132, 163) Source(71, 45) + SourceIndex(0)
13>Emitted(132, 175) Source(71, 62) + SourceIndex(0)
14>Emitted(132, 177) Source(71, 45) + SourceIndex(0)
15>Emitted(132, 217) Source(71, 62) + SourceIndex(0)
---
>>>        console.log(nameA2);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^^
7 >                          ^
8 >                           ^
1 >] of getRobots()) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    nameA2
7 >                          )
8 >                           ;
1 >Emitted(133, 9) Source(72, 5) + SourceIndex(0)
2 >Emitted(133, 16) Source(72, 12) + SourceIndex(0)
3 >Emitted(133, 17) Source(72, 13) + SourceIndex(0)
4 >Emitted(133, 20) Source(72, 16) + SourceIndex(0)
5 >Emitted(133, 21) Source(72, 17) + SourceIndex(0)
6 >Emitted(133, 27) Source(72, 23) + SourceIndex(0)
7 >Emitted(133, 28) Source(72, 24) + SourceIndex(0)
8 >Emitted(133, 29) Source(72, 25) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(134, 6) Source(73, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_10_1) { e_10 = { error: e_10_1 }; }
>>>finally {
>>>    try { __close(iterator_5); } finally { if (e_10) throw e_10.error; }
>>>}
>>>for (var _24 = 0, _25 = [robotA, robotB]; _24 < _25.length; _24++) {
1 >
2 >^^^
3 >   ^
4 >    ^
5 >     ^^^^^^^^^^^
6 >                ^^
7 >                  ^^^^^^^
8 >                         ^^^^^^
9 >                               ^^
10>                                 ^^^^^^
11>                                       ^
12>                                        ^^
13>                                          ^^^^^^^^^^^^^^^^
14>                                                          ^^
15>                                                            ^^^^^
16>                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >for
3 >    
4 >    (let [numberA2 = -1, nameA2 = "noName", skillA2 = "skill"] of 
5 >     [robotA, robotB]
6 >                
7 >                  [
8 >                         robotA
9 >                               , 
10>                                 robotB
11>                                       ]
12>                                        
13>                                          [robotA, robotB]
14>                                                          
15>                                                            [robotA, robotB]
1 >Emitted(140, 1) Source(74, 1) + SourceIndex(0)
2 >Emitted(140, 4) Source(74, 4) + SourceIndex(0)
3 >Emitted(140, 5) Source(74, 5) + SourceIndex(0)
4 >Emitted(140, 6) Source(74, 67) + SourceIndex(0)
5 >Emitted(140, 17) Source(74, 83) + SourceIndex(0)
6 >Emitted(140, 19) Source(74, 67) + SourceIndex(0)
7 >Emitted(140, 26) Source(74, 68) + SourceIndex(0)
8 >Emitted(140, 32) Source(74, 74) + SourceIndex(0)
9 >Emitted(140, 34) Source(74, 76) + SourceIndex(0)
10>Emitted(140, 40) Source(74, 82) + SourceIndex(0)
11>Emitted(140, 41) Source(74, 83) + SourceIndex(0)
12>Emitted(140, 43) Source(74, 67) + SourceIndex(0)
13>Emitted(140, 59) Source(74, 83) + SourceIndex(0)
14>Emitted(140, 61) Source(74, 67) + SourceIndex(0)
15>Emitted(140, 66) Source(74, 83) + SourceIndex(0)
---
>>>    var _26 = __read(_25[_24], 3), _27 = _26[0], numberA2 = _27 === void 0 ? -1 : _27, _28 = _26[1], nameA2 = _28 === void 0 ? "noName" : _28, _29 = _26[2], skillA2 = _29 === void 0 ? "skill" : _29;
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                 ^^
5 >                                   ^^^^^^^^^^^^
6 >                                               ^^
7 >                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                                     ^^
9 >                                                                                       ^^^^^^^^^^^^
10>                                                                                                   ^^
11>                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12>                                                                                                                                             ^^
13>                                                                                                                                               ^^^^^^^^^^^^
14>                                                                                                                                                           ^^
15>                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >    
3 >        [numberA2 = -1, nameA2 = "noName", skillA2 = "skill"]
4 >                                 
5 >                                   numberA2 = -1
6 >                                               
7 >                                                 numberA2 = -1
8 >                                                                                     , 
9 >                                                                                       nameA2 = "noName"
10>                                                                                                   
11>                                                                                                     nameA2 = "noName"
12>                                                                                                                                             , 
13>                                                                                                                                               skillA2 = "skill"
14>                                                                                                                                                           
15>                                                                                                                                                             skillA2 = "skill"
1->Emitted(141, 5) Source(74, 10) + SourceIndex(0)
2 >Emitted(141, 9) Source(74, 10) + SourceIndex(0)
3 >Emitted(141, 34) Source(74, 63) + SourceIndex(0)
4 >Emitted(141, 36) Source(74, 11) + SourceIndex(0)
5 >Emitted(141, 48) Source(74, 24) + SourceIndex(0)
6 >Emitted(141, 50) Source(74, 11) + SourceIndex(0)
7 >Emitted(141, 86) Source(74, 24) + SourceIndex(0)
8 >Emitted(141, 88) Source(74, 26) + SourceIndex(0)
9 >Emitted(141, 100) Source(74, 43) + SourceIndex(0)
10>Emitted(141, 102) Source(74, 26) + SourceIndex(0)
11>Emitted(141, 142) Source(74, 43) + SourceIndex(0)
12>Emitted(141, 144) Source(74, 45) + SourceIndex(0)
13>Emitted(141, 156) Source(74, 62) + SourceIndex(0)
14>Emitted(141, 158) Source(74, 45) + SourceIndex(0)
15>Emitted(141, 198) Source(74, 62) + SourceIndex(0)
---
>>>    console.log(nameA2);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
1 >] of [robotA, robotB]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA2
7 >                      )
8 >                       ;
1 >Emitted(142, 5) Source(75, 5) + SourceIndex(0)
2 >Emitted(142, 12) Source(75, 12) + SourceIndex(0)
3 >Emitted(142, 13) Source(75, 13) + SourceIndex(0)
4 >Emitted(142, 16) Source(75, 16) + SourceIndex(0)
5 >Emitted(142, 17) Source(75, 17) + SourceIndex(0)
6 >Emitted(142, 23) Source(75, 23) + SourceIndex(0)
7 >Emitted(142, 24) Source(75, 24) + SourceIndex(0)
8 >Emitted(142, 25) Source(75, 25) + SourceIndex(0)
---
>>>}
1 >^
2 > ^^^^^->
1 >
  >}
1 >Emitted(143, 2) Source(76, 2) + SourceIndex(0)
---
>>>try {
>>>    for (var multiRobots_3 = { iterator: __values(multiRobots) }; __step(multiRobots_3);) {
1->^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^^^^
7 >                             ^^
8 >                               ^^^^^^^^^^
9 >                                         ^^^^^^^^^
10>                                                  ^^^^^^^^^^^
11>                                                             ^
12>                                                              ^^
13>                                                                ^^
14>                                                                  ^^^^^^^^^^^^^^^^^^^^^
15>                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
2 >    for
3 >        
4 >        (let [nameMA = "noName", [
  >            primarySkillA = "primary",
  >            secondarySkillA = "secondary"
  >        ] = ["skill1", "skill2"]] of 
5 >         
6 >             
7 >                             
8 >                               
9 >                                         
10>                                                  multiRobots
11>                                                             
12>                                                              
13>                                                                
14>                                                                  let [nameMA = "noName", [
  >                                                                      primarySkillA = "primary",
  >                                                                      secondarySkillA = "secondary"
  >                                                                  ] = ["skill1", "skill2"]]
1->Emitted(145, 5) Source(77, 1) + SourceIndex(0)
2 >Emitted(145, 8) Source(77, 4) + SourceIndex(0)
3 >Emitted(145, 9) Source(77, 5) + SourceIndex(0)
4 >Emitted(145, 10) Source(80, 30) + SourceIndex(0)
5 >Emitted(145, 14) Source(80, 30) + SourceIndex(0)
6 >Emitted(145, 30) Source(80, 30) + SourceIndex(0)
7 >Emitted(145, 32) Source(80, 30) + SourceIndex(0)
8 >Emitted(145, 42) Source(80, 30) + SourceIndex(0)
9 >Emitted(145, 51) Source(80, 30) + SourceIndex(0)
10>Emitted(145, 62) Source(80, 41) + SourceIndex(0)
11>Emitted(145, 63) Source(80, 41) + SourceIndex(0)
12>Emitted(145, 65) Source(80, 41) + SourceIndex(0)
13>Emitted(145, 67) Source(77, 6) + SourceIndex(0)
14>Emitted(145, 88) Source(80, 26) + SourceIndex(0)
---
>>>        var _30 = __read(multiRobots_3.result.value, 2), _31 = _30[0], nameMA = _31 === void 0 ? "noName" : _31, _32 = _30[1], _33 = __read(_32 === void 0 ? ["skill1", "skill2"] : _32, 2), _34 = _33[0], primarySkillA = _34 === void 0 ? "primary" : _34, _35 = _33[1], secondarySkillA = _35 === void 0 ? "secondary" : _35;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                       ^^
5 >                                                         ^^^^^^^^^^^^
6 >                                                                     ^^
7 >                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                                                               ^^
9 >                                                                                                                 ^^^^^^^^^^^^
10>                                                                                                                             ^^
11>                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12>                                                                                                                                                                                           ^^
13>                                                                                                                                                                                             ^^^^^^^^^^^^
14>                                                                                                                                                                                                         ^^
15>                                                                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16>                                                                                                                                                                                                                                                           ^^
17>                                                                                                                                                                                                                                                             ^^^^^^^^^^^^
18>                                                                                                                                                                                                                                                                         ^^
19>                                                                                                                                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            [nameMA = "noName", [
  >                primarySkillA = "primary",
  >                secondarySkillA = "secondary"
  >            ] = ["skill1", "skill2"]]
4 >                                                       
5 >                                                         nameMA = "noName"
6 >                                                                     
7 >                                                                       nameMA = "noName"
8 >                                                                                                               , 
9 >                                                                                                                 [
  >                                                                                                                     primarySkillA = "primary",
  >                                                                                                                     secondarySkillA = "secondary"
  >                                                                                                                 ] = ["skill1", "skill2"]
10>                                                                                                                             
11>                                                                                                                               [
  >                                                                                                                                   primarySkillA = "primary",
  >                                                                                                                                   secondarySkillA = "secondary"
  >                                                                                                                               ] = ["skill1", "skill2"]
12>                                                                                                                                                                                           
13>                                                                                                                                                                                             primarySkillA = "primary"
14>                                                                                                                                                                                                         
15>                                                                                                                                                                                                           primarySkillA = "primary"
16>                                                                                                                                                                                                                                                           ,
  >                                                                                                                                                                                                                                                               
17>                                                                                                                                                                                                                                                             secondarySkillA = "secondary"
18>                                                                                                                                                                                                                                                                         
19>                                                                                                                                                                                                                                                                           secondarySkillA = "secondary"
1->Emitted(146, 9) Source(77, 10) + SourceIndex(0)
2 >Emitted(146, 13) Source(77, 10) + SourceIndex(0)
3 >Emitted(146, 56) Source(80, 26) + SourceIndex(0)
4 >Emitted(146, 58) Source(77, 11) + SourceIndex(0)
5 >Emitted(146, 70) Source(77, 28) + SourceIndex(0)
6 >Emitted(146, 72) Source(77, 11) + SourceIndex(0)
7 >Emitted(146, 112) Source(77, 28) + SourceIndex(0)
8 >Emitted(146, 114) Source(77, 30) + SourceIndex(0)
9 >Emitted(146, 126) Source(80, 25) + SourceIndex(0)
10>Emitted(146, 128) Source(77, 30) + SourceIndex(0)
11>Emitted(146, 188) Source(80, 25) + SourceIndex(0)
12>Emitted(146, 190) Source(78, 5) + SourceIndex(0)
13>Emitted(146, 202) Source(78, 30) + SourceIndex(0)
14>Emitted(146, 204) Source(78, 5) + SourceIndex(0)
15>Emitted(146, 252) Source(78, 30) + SourceIndex(0)
16>Emitted(146, 254) Source(79, 5) + SourceIndex(0)
17>Emitted(146, 266) Source(79, 34) + SourceIndex(0)
18>Emitted(146, 268) Source(79, 5) + SourceIndex(0)
19>Emitted(146, 320) Source(79, 34) + SourceIndex(0)
---
>>>        console.log(nameMA);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^^
7 >                          ^
8 >                           ^
1 >
  >] = ["skill1", "skill2"]] of multiRobots) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    nameMA
7 >                          )
8 >                           ;
1 >Emitted(147, 9) Source(81, 5) + SourceIndex(0)
2 >Emitted(147, 16) Source(81, 12) + SourceIndex(0)
3 >Emitted(147, 17) Source(81, 13) + SourceIndex(0)
4 >Emitted(147, 20) Source(81, 16) + SourceIndex(0)
5 >Emitted(147, 21) Source(81, 17) + SourceIndex(0)
6 >Emitted(147, 27) Source(81, 23) + SourceIndex(0)
7 >Emitted(147, 28) Source(81, 24) + SourceIndex(0)
8 >Emitted(147, 29) Source(81, 25) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(148, 6) Source(82, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_11_1) { e_11 = { error: e_11_1 }; }
>>>finally {
>>>    try { __close(multiRobots_3); } finally { if (e_11) throw e_11.error; }
>>>}
>>>try {
>>>    for (var iterator_6 = { iterator: __values(getMultiRobots()) }; __step(iterator_6);) {
1 >^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^
7 >                          ^^
8 >                            ^^^^^^^^^^
9 >                                      ^^^^^^^^^
10>                                               ^^^^^^^^^^^^^^
11>                                                             ^^
12>                                                               ^
13>                                                                ^^
14>                                                                  ^^
15>                                                                    ^^^^^^^^^^^^^^^^^^
16>                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >    for
3 >        
4 >        (let [nameMA = "noName", [
  >            primarySkillA = "primary",
  >            secondarySkillA = "secondary"
  >        ] = ["skill1", "skill2"]] of 
5 >         
6 >             
7 >                          
8 >                            
9 >                                      
10>                                               getMultiRobots
11>                                                             ()
12>                                                               
13>                                                                
14>                                                                  
15>                                                                    let [nameMA = "noName", [
  >                                                                        primarySkillA = "primary",
  >                                                                        secondarySkillA = "secondary"
  >                                                                    ] = ["skill1", "skill2"]]
1 >Emitted(155, 5) Source(83, 1) + SourceIndex(0)
2 >Emitted(155, 8) Source(83, 4) + SourceIndex(0)
3 >Emitted(155, 9) Source(83, 5) + SourceIndex(0)
4 >Emitted(155, 10) Source(86, 30) + SourceIndex(0)
5 >Emitted(155, 14) Source(86, 30) + SourceIndex(0)
6 >Emitted(155, 27) Source(86, 30) + SourceIndex(0)
7 >Emitted(155, 29) Source(86, 30) + SourceIndex(0)
8 >Emitted(155, 39) Source(86, 30) + SourceIndex(0)
9 >Emitted(155, 48) Source(86, 30) + SourceIndex(0)
10>Emitted(155, 62) Source(86, 44) + SourceIndex(0)
11>Emitted(155, 64) Source(86, 46) + SourceIndex(0)
12>Emitted(155, 65) Source(86, 46) + SourceIndex(0)
13>Emitted(155, 67) Source(86, 46) + SourceIndex(0)
14>Emitted(155, 69) Source(83, 6) + SourceIndex(0)
15>Emitted(155, 87) Source(86, 26) + SourceIndex(0)
---
>>>        var _36 = __read(iterator_6.result.value, 2), _37 = _36[0], nameMA = _37 === void 0 ? "noName" : _37, _38 = _36[1], _39 = __read(_38 === void 0 ? ["skill1", "skill2"] : _38, 2), _40 = _39[0], primarySkillA = _40 === void 0 ? "primary" : _40, _41 = _39[1], secondarySkillA = _41 === void 0 ? "secondary" : _41;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                    ^^
5 >                                                      ^^^^^^^^^^^^
6 >                                                                  ^^
7 >                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                                                            ^^
9 >                                                                                                              ^^^^^^^^^^^^
10>                                                                                                                          ^^
11>                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12>                                                                                                                                                                                        ^^
13>                                                                                                                                                                                          ^^^^^^^^^^^^
14>                                                                                                                                                                                                      ^^
15>                                                                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16>                                                                                                                                                                                                                                                        ^^
17>                                                                                                                                                                                                                                                          ^^^^^^^^^^^^
18>                                                                                                                                                                                                                                                                      ^^
19>                                                                                                                                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            [nameMA = "noName", [
  >                primarySkillA = "primary",
  >                secondarySkillA = "secondary"
  >            ] = ["skill1", "skill2"]]
4 >                                                    
5 >                                                      nameMA = "noName"
6 >                                                                  
7 >                                                                    nameMA = "noName"
8 >                                                                                                            , 
9 >                                                                                                              [
  >                                                                                                                  primarySkillA = "primary",
  >                                                                                                                  secondarySkillA = "secondary"
  >                                                                                                              ] = ["skill1", "skill2"]
10>                                                                                                                          
11>                                                                                                                            [
  >                                                                                                                                primarySkillA = "primary",
  >                                                                                                                                secondarySkillA = "secondary"
  >                                                                                                                            ] = ["skill1", "skill2"]
12>                                                                                                                                                                                        
13>                                                                                                                                                                                          primarySkillA = "primary"
14>                                                                                                                                                                                                      
15>                                                                                                                                                                                                        primarySkillA = "primary"
16>                                                                                                                                                                                                                                                        ,
  >                                                                                                                                                                                                                                                            
17>                                                                                                                                                                                                                                                          secondarySkillA = "secondary"
18>                                                                                                                                                                                                                                                                      
19>                                                                                                                                                                                                                                                                        secondarySkillA = "secondary"
1->Emitted(156, 9) Source(83, 10) + SourceIndex(0)
2 >Emitted(156, 13) Source(83, 10) + SourceIndex(0)
3 >Emitted(156, 53) Source(86, 26) + SourceIndex(0)
4 >Emitted(156, 55) Source(83, 11) + SourceIndex(0)
5 >Emitted(156, 67) Source(83, 28) + SourceIndex(0)
6 >Emitted(156, 69) Source(83, 11) + SourceIndex(0)
7 >Emitted(156, 109) Source(83, 28) + SourceIndex(0)
8 >Emitted(156, 111) Source(83, 30) + SourceIndex(0)
9 >Emitted(156, 123) Source(86, 25) + SourceIndex(0)
10>Emitted(156, 125) Source(83, 30) + SourceIndex(0)
11>Emitted(156, 185) Source(86, 25) + SourceIndex(0)
12>Emitted(156, 187) Source(84, 5) + SourceIndex(0)
13>Emitted(156, 199) Source(84, 30) + SourceIndex(0)
14>Emitted(156, 201) Source(84, 5) + SourceIndex(0)
15>Emitted(156, 249) Source(84, 30) + SourceIndex(0)
16>Emitted(156, 251) Source(85, 5) + SourceIndex(0)
17>Emitted(156, 263) Source(85, 34) + SourceIndex(0)
18>Emitted(156, 265) Source(85, 5) + SourceIndex(0)
19>Emitted(156, 317) Source(85, 34) + SourceIndex(0)
---
>>>        console.log(nameMA);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^^
7 >                          ^
8 >                           ^
1 >
  >] = ["skill1", "skill2"]] of getMultiRobots()) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    nameMA
7 >                          )
8 >                           ;
1 >Emitted(157, 9) Source(87, 5) + SourceIndex(0)
2 >Emitted(157, 16) Source(87, 12) + SourceIndex(0)
3 >Emitted(157, 17) Source(87, 13) + SourceIndex(0)
4 >Emitted(157, 20) Source(87, 16) + SourceIndex(0)
5 >Emitted(157, 21) Source(87, 17) + SourceIndex(0)
6 >Emitted(157, 27) Source(87, 23) + SourceIndex(0)
7 >Emitted(157, 28) Source(87, 24) + SourceIndex(0)
8 >Emitted(157, 29) Source(87, 25) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(158, 6) Source(88, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_12_1) { e_12 = { error: e_12_1 }; }
>>>finally {
>>>    try { __close(iterator_6); } finally { if (e_12) throw e_12.error; }
>>>}
>>>for (var _42 = 0, _43 = [multiRobotA, multiRobotB]; _42 < _43.length; _42++) {
1 >
2 >^^^
3 >   ^
4 >    ^
5 >     ^^^^^^^^^^^
6 >                ^^
7 >                  ^^^^^^^
8 >                         ^^^^^^^^^^^
9 >                                    ^^
10>                                      ^^^^^^^^^^^
11>                                                 ^
12>                                                  ^^
13>                                                    ^^^^^^^^^^^^^^^^
14>                                                                    ^^
15>                                                                      ^^^^^
16>                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >for
3 >    
4 >    (let [nameMA = "noName", [
  >        primarySkillA = "primary",
  >        secondarySkillA = "secondary"
  >    ] = ["skill1", "skill2"]] of 
5 >     [multiRobotA, multiRobotB]
6 >                
7 >                  [
8 >                         multiRobotA
9 >                                    , 
10>                                      multiRobotB
11>                                                 ]
12>                                                  
13>                                                    [multiRobotA, multiRobotB]
14>                                                                    
15>                                                                      [multiRobotA, multiRobotB]
1 >Emitted(164, 1) Source(89, 1) + SourceIndex(0)
2 >Emitted(164, 4) Source(89, 4) + SourceIndex(0)
3 >Emitted(164, 5) Source(89, 5) + SourceIndex(0)
4 >Emitted(164, 6) Source(92, 30) + SourceIndex(0)
5 >Emitted(164, 17) Source(92, 56) + SourceIndex(0)
6 >Emitted(164, 19) Source(92, 30) + SourceIndex(0)
7 >Emitted(164, 26) Source(92, 31) + SourceIndex(0)
8 >Emitted(164, 37) Source(92, 42) + SourceIndex(0)
9 >Emitted(164, 39) Source(92, 44) + SourceIndex(0)
10>Emitted(164, 50) Source(92, 55) + SourceIndex(0)
11>Emitted(164, 51) Source(92, 56) + SourceIndex(0)
12>Emitted(164, 53) Source(92, 30) + SourceIndex(0)
13>Emitted(164, 69) Source(92, 56) + SourceIndex(0)
14>Emitted(164, 71) Source(92, 30) + SourceIndex(0)
15>Emitted(164, 76) Source(92, 56) + SourceIndex(0)
---
>>>    var _44 = __read(_43[_42], 2), _45 = _44[0], nameMA = _45 === void 0 ? "noName" : _45, _46 = _44[1], _47 = __read(_46 === void 0 ? ["skill1", "skill2"] : _46, 2), _48 = _47[0], primarySkillA = _48 === void 0 ? "primary" : _48, _49 = _47[1], secondarySkillA = _49 === void 0 ? "secondary" : _49;
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                 ^^
5 >                                   ^^^^^^^^^^^^
6 >                                               ^^
7 >                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                                         ^^
9 >                                                                                           ^^^^^^^^^^^^
10>                                                                                                       ^^
11>                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12>                                                                                                                                                                     ^^
13>                                                                                                                                                                       ^^^^^^^^^^^^
14>                                                                                                                                                                                   ^^
15>                                                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16>                                                                                                                                                                                                                                     ^^
17>                                                                                                                                                                                                                                       ^^^^^^^^^^^^
18>                                                                                                                                                                                                                                                   ^^
19>                                                                                                                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >    
3 >        [nameMA = "noName", [
  >            primarySkillA = "primary",
  >            secondarySkillA = "secondary"
  >        ] = ["skill1", "skill2"]]
4 >                                 
5 >                                   nameMA = "noName"
6 >                                               
7 >                                                 nameMA = "noName"
8 >                                                                                         , 
9 >                                                                                           [
  >                                                                                               primarySkillA = "primary",
  >                                                                                               secondarySkillA = "secondary"
  >                                                                                           ] = ["skill1", "skill2"]
10>                                                                                                       
11>                                                                                                         [
  >                                                                                                             primarySkillA = "primary",
  >                                                                                                             secondarySkillA = "secondary"
  >                                                                                                         ] = ["skill1", "skill2"]
12>                                                                                                                                                                     
13>                                                                                                                                                                       primarySkillA = "primary"
14>                                                                                                                                                                                   
15>                                                                                                                                                                                     primarySkillA = "primary"
16>                                                                                                                                                                                                                                     ,
  >                                                                                                                                                                                                                                         
17>                                                                                                                                                                                                                                       secondarySkillA = "secondary"
18>                                                                                                                                                                                                                                                   
19>                                                                                                                                                                                                                                                     secondarySkillA = "secondary"
1->Emitted(165, 5) Source(89, 10) + SourceIndex(0)
2 >Emitted(165, 9) Source(89, 10) + SourceIndex(0)
3 >Emitted(165, 34) Source(92, 26) + SourceIndex(0)
4 >Emitted(165, 36) Source(89, 11) + SourceIndex(0)
5 >Emitted(165, 48) Source(89, 28) + SourceIndex(0)
6 >Emitted(165, 50) Source(89, 11) + SourceIndex(0)
7 >Emitted(165, 90) Source(89, 28) + SourceIndex(0)
8 >Emitted(165, 92) Source(89, 30) + SourceIndex(0)
9 >Emitted(165, 104) Source(92, 25) + SourceIndex(0)
10>Emitted(165, 106) Source(89, 30) + SourceIndex(0)
11>Emitted(165, 166) Source(92, 25) + SourceIndex(0)
12>Emitted(165, 168) Source(90, 5) + SourceIndex(0)
13>Emitted(165, 180) Source(90, 30) + SourceIndex(0)
14>Emitted(165, 182) Source(90, 5) + SourceIndex(0)
15>Emitted(165, 230) Source(90, 30) + SourceIndex(0)
16>Emitted(165, 232) Source(91, 5) + SourceIndex(0)
17>Emitted(165, 244) Source(91, 34) + SourceIndex(0)
18>Emitted(165, 246) Source(91, 5) + SourceIndex(0)
19>Emitted(165, 298) Source(91, 34) + SourceIndex(0)
---
>>>    console.log(nameMA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
1 >
  >] = ["skill1", "skill2"]] of [multiRobotA, multiRobotB]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameMA
7 >                      )
8 >                       ;
1 >Emitted(166, 5) Source(93, 5) + SourceIndex(0)
2 >Emitted(166, 12) Source(93, 12) + SourceIndex(0)
3 >Emitted(166, 13) Source(93, 13) + SourceIndex(0)
4 >Emitted(166, 16) Source(93, 16) + SourceIndex(0)
5 >Emitted(166, 17) Source(93, 17) + SourceIndex(0)
6 >Emitted(166, 23) Source(93, 23) + SourceIndex(0)
7 >Emitted(166, 24) Source(93, 24) + SourceIndex(0)
8 >Emitted(166, 25) Source(93, 25) + SourceIndex(0)
---
>>>}
1 >^
2 > ^^^^^->
1 >
  >}
1 >Emitted(167, 2) Source(94, 2) + SourceIndex(0)
---
>>>try {
>>>    for (var robots_4 = { iterator: __values(robots) }; __step(robots_4);) {
1->^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^
7 >                        ^^
8 >                          ^^^^^^^^^^
9 >                                    ^^^^^^^^^
10>                                             ^^^^^^
11>                                                   ^
12>                                                    ^^
13>                                                      ^^
14>                                                        ^^^^^^^^^^^^^^^^
15>                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
  >
2 >    for
3 >        
4 >        (let [numberA3 = -1, ...robotAInfo] of 
5 >         
6 >             
7 >                        
8 >                          
9 >                                    
10>                                             robots
11>                                                   
12>                                                    
13>                                                      
14>                                                        let [numberA3 = -1, ...robotAInfo]
1->Emitted(169, 5) Source(96, 1) + SourceIndex(0)
2 >Emitted(169, 8) Source(96, 4) + SourceIndex(0)
3 >Emitted(169, 9) Source(96, 5) + SourceIndex(0)
4 >Emitted(169, 10) Source(96, 44) + SourceIndex(0)
5 >Emitted(169, 14) Source(96, 44) + SourceIndex(0)
6 >Emitted(169, 25) Source(96, 44) + SourceIndex(0)
7 >Emitted(169, 27) Source(96, 44) + SourceIndex(0)
8 >Emitted(169, 37) Source(96, 44) + SourceIndex(0)
9 >Emitted(169, 46) Source(96, 44) + SourceIndex(0)
10>Emitted(169, 52) Source(96, 50) + SourceIndex(0)
11>Emitted(169, 53) Source(96, 50) + SourceIndex(0)
12>Emitted(169, 55) Source(96, 50) + SourceIndex(0)
13>Emitted(169, 57) Source(96, 6) + SourceIndex(0)
14>Emitted(169, 73) Source(96, 40) + SourceIndex(0)
---
>>>        var _50 = __read(robots_4.result.value), _51 = _50[0], numberA3 = _51 === void 0 ? -1 : _51, robotAInfo = _50.slice(1);
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                               ^^
5 >                                                 ^^^^^^^^^^^^
6 >                                                             ^^
7 >                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                                                   ^^
9 >                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            [numberA3 = -1, ...robotAInfo]
4 >                                               
5 >                                                 numberA3 = -1
6 >                                                             
7 >                                                               numberA3 = -1
8 >                                                                                                   , 
9 >                                                                                                     ...robotAInfo
1->Emitted(170, 9) Source(96, 10) + SourceIndex(0)
2 >Emitted(170, 13) Source(96, 10) + SourceIndex(0)
3 >Emitted(170, 48) Source(96, 40) + SourceIndex(0)
4 >Emitted(170, 50) Source(96, 11) + SourceIndex(0)
5 >Emitted(170, 62) Source(96, 24) + SourceIndex(0)
6 >Emitted(170, 64) Source(96, 11) + SourceIndex(0)
7 >Emitted(170, 100) Source(96, 24) + SourceIndex(0)
8 >Emitted(170, 102) Source(96, 26) + SourceIndex(0)
9 >Emitted(170, 127) Source(96, 39) + SourceIndex(0)
---
>>>        console.log(numberA3);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^^^^
7 >                            ^
8 >                             ^
1 >] of robots) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    numberA3
7 >                            )
8 >                             ;
1 >Emitted(171, 9) Source(97, 5) + SourceIndex(0)
2 >Emitted(171, 16) Source(97, 12) + SourceIndex(0)
3 >Emitted(171, 17) Source(97, 13) + SourceIndex(0)
4 >Emitted(171, 20) Source(97, 16) + SourceIndex(0)
5 >Emitted(171, 21) Source(97, 17) + SourceIndex(0)
6 >Emitted(171, 29) Source(97, 25) + SourceIndex(0)
7 >Emitted(171, 30) Source(97, 26) + SourceIndex(0)
8 >Emitted(171, 31) Source(97, 27) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(172, 6) Source(98, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_13_1) { e_13 = { error: e_13_1 }; }
>>>finally {
>>>    try { __close(robots_4); } finally { if (e_13) throw e_13.error; }
>>>}
>>>try {
>>>    for (var iterator_7 = { iterator: __values(getRobots()) }; __step(iterator_7);) {
1 >^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^
7 >                          ^^
8 >                            ^^^^^^^^^^
9 >                                      ^^^^^^^^^
10>                                               ^^^^^^^^^
11>                                                        ^^
12>                                                          ^
13>                                                           ^^
14>                                                             ^^
15>                                                               ^^^^^^^^^^^^^^^^^^
16>                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >    for
3 >        
4 >        (let [numberA3 = -1, ...robotAInfo] of 
5 >         
6 >             
7 >                          
8 >                            
9 >                                      
10>                                               getRobots
11>                                                        ()
12>                                                          
13>                                                           
14>                                                             
15>                                                               let [numberA3 = -1, ...robotAInfo]
1 >Emitted(179, 5) Source(99, 1) + SourceIndex(0)
2 >Emitted(179, 8) Source(99, 4) + SourceIndex(0)
3 >Emitted(179, 9) Source(99, 5) + SourceIndex(0)
4 >Emitted(179, 10) Source(99, 44) + SourceIndex(0)
5 >Emitted(179, 14) Source(99, 44) + SourceIndex(0)
6 >Emitted(179, 27) Source(99, 44) + SourceIndex(0)
7 >Emitted(179, 29) Source(99, 44) + SourceIndex(0)
8 >Emitted(179, 39) Source(99, 44) + SourceIndex(0)
9 >Emitted(179, 48) Source(99, 44) + SourceIndex(0)
10>Emitted(179, 57) Source(99, 53) + SourceIndex(0)
11>Emitted(179, 59) Source(99, 55) + SourceIndex(0)
12>Emitted(179, 60) Source(99, 55) + SourceIndex(0)
13>Emitted(179, 62) Source(99, 55) + SourceIndex(0)
14>Emitted(179, 64) Source(99, 6) + SourceIndex(0)
15>Emitted(179, 82) Source(99, 40) + SourceIndex(0)
---
>>>        var _52 = __read(iterator_7.result.value), _53 = _52[0], numberA3 = _53 === void 0 ? -1 : _53, robotAInfo = _52.slice(1);
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                 ^^
5 >                                                   ^^^^^^^^^^^^
6 >                                                               ^^
7 >                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                                                     ^^
9 >                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            [numberA3 = -1, ...robotAInfo]
4 >                                                 
5 >                                                   numberA3 = -1
6 >                                                               
7 >                                                                 numberA3 = -1
8 >                                                                                                     , 
9 >                                                                                                       ...robotAInfo
1->Emitted(180, 9) Source(99, 10) + SourceIndex(0)
2 >Emitted(180, 13) Source(99, 10) + SourceIndex(0)
3 >Emitted(180, 50) Source(99, 40) + SourceIndex(0)
4 >Emitted(180, 52) Source(99, 11) + SourceIndex(0)
5 >Emitted(180, 64) Source(99, 24) + SourceIndex(0)
6 >Emitted(180, 66) Source(99, 11) + SourceIndex(0)
7 >Emitted(180, 102) Source(99, 24) + SourceIndex(0)
8 >Emitted(180, 104) Source(99, 26) + SourceIndex(0)
9 >Emitted(180, 129) Source(99, 39) + SourceIndex(0)
---
>>>        console.log(numberA3);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^^^^
7 >                            ^
8 >                             ^
1 >] of getRobots()) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    numberA3
7 >                            )
8 >                             ;
1 >Emitted(181, 9) Source(100, 5) + SourceIndex(0)
2 >Emitted(181, 16) Source(100, 12) + SourceIndex(0)
3 >Emitted(181, 17) Source(100, 13) + SourceIndex(0)
4 >Emitted(181, 20) Source(100, 16) + SourceIndex(0)
5 >Emitted(181, 21) Source(100, 17) + SourceIndex(0)
6 >Emitted(181, 29) Source(100, 25) + SourceIndex(0)
7 >Emitted(181, 30) Source(100, 26) + SourceIndex(0)
8 >Emitted(181, 31) Source(100, 27) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(182, 6) Source(101, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_14_1) { e_14 = { error: e_14_1 }; }
>>>finally {
>>>    try { __close(iterator_7); } finally { if (e_14) throw e_14.error; }
>>>}
>>>for (var _54 = 0, _55 = [robotA, robotB]; _54 < _55.length; _54++) {
1 >
2 >^^^
3 >   ^
4 >    ^
5 >     ^^^^^^^^^^^
6 >                ^^
7 >                  ^^^^^^^
8 >                         ^^^^^^
9 >                               ^^
10>                                 ^^^^^^
11>                                       ^
12>                                        ^^
13>                                          ^^^^^^^^^^^^^^^^
14>                                                          ^^
15>                                                            ^^^^^
16>                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >for
3 >    
4 >    (let [numberA3 = -1, ...robotAInfo] of 
5 >     [robotA, robotB]
6 >                
7 >                  [
8 >                         robotA
9 >                               , 
10>                                 robotB
11>                                       ]
12>                                        
13>                                          [robotA, robotB]
14>                                                          
15>                                                            [robotA, robotB]
1 >Emitted(188, 1) Source(102, 1) + SourceIndex(0)
2 >Emitted(188, 4) Source(102, 4) + SourceIndex(0)
3 >Emitted(188, 5) Source(102, 5) + SourceIndex(0)
4 >Emitted(188, 6) Source(102, 44) + SourceIndex(0)
5 >Emitted(188, 17) Source(102, 60) + SourceIndex(0)
6 >Emitted(188, 19) Source(102, 44) + SourceIndex(0)
7 >Emitted(188, 26) Source(102, 45) + SourceIndex(0)
8 >Emitted(188, 32) Source(102, 51) + SourceIndex(0)
9 >Emitted(188, 34) Source(102, 53) + SourceIndex(0)
10>Emitted(188, 40) Source(102, 59) + SourceIndex(0)
11>Emitted(188, 41) Source(102, 60) + SourceIndex(0)
12>Emitted(188, 43) Source(102, 44) + SourceIndex(0)
13>Emitted(188, 59) Source(102, 60) + SourceIndex(0)
14>Emitted(188, 61) Source(102, 44) + SourceIndex(0)
15>Emitted(188, 66) Source(102, 60) + SourceIndex(0)
---
>>>    var _56 = __read(_55[_54]), _57 = _56[0], numberA3 = _57 === void 0 ? -1 : _57, robotAInfo = _56.slice(1);
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^^^^^^^^
4 >                              ^^
5 >                                ^^^^^^^^^^^^
6 >                                            ^^
7 >                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                                  ^^
9 >                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >    
3 >        [numberA3 = -1, ...robotAInfo]
4 >                              
5 >                                numberA3 = -1
6 >                                            
7 >                                              numberA3 = -1
8 >                                                                                  , 
9 >                                                                                    ...robotAInfo
1->Emitted(189, 5) Source(102, 10) + SourceIndex(0)
2 >Emitted(189, 9) Source(102, 10) + SourceIndex(0)
3 >Emitted(189, 31) Source(102, 40) + SourceIndex(0)
4 >Emitted(189, 33) Source(102, 11) + SourceIndex(0)
5 >Emitted(189, 45) Source(102, 24) + SourceIndex(0)
6 >Emitted(189, 47) Source(102, 11) + SourceIndex(0)
7 >Emitted(189, 83) Source(102, 24) + SourceIndex(0)
8 >Emitted(189, 85) Source(102, 26) + SourceIndex(0)
9 >Emitted(189, 110) Source(102, 39) + SourceIndex(0)
---
>>>    console.log(numberA3);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^
7 >                        ^
8 >                         ^
1 >] of [robotA, robotB]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                numberA3
7 >                        )
8 >                         ;
1 >Emitted(190, 5) Source(103, 5) + SourceIndex(0)
2 >Emitted(190, 12) Source(103, 12) + SourceIndex(0)
3 >Emitted(190, 13) Source(103, 13) + SourceIndex(0)
4 >Emitted(190, 16) Source(103, 16) + SourceIndex(0)
5 >Emitted(190, 17) Source(103, 17) + SourceIndex(0)
6 >Emitted(190, 25) Source(103, 25) + SourceIndex(0)
7 >Emitted(190, 26) Source(103, 26) + SourceIndex(0)
8 >Emitted(190, 27) Source(103, 27) + SourceIndex(0)
---
>>>}
1 >^
2 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >}
1 >Emitted(191, 2) Source(104, 2) + SourceIndex(0)
---
>>>var e_1, e_2, e_3, e_4, e_5, e_6, e_7, e_8, e_9, e_10, e_11, e_12, e_13, e_14;
>>>//# sourceMappingURL=sourceMapValidationDestructuringForOfArrayBindingPatternDefaultValues.js.map