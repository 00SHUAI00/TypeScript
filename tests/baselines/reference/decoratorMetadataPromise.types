=== tests/cases/compiler/decoratorMetadataPromise.ts ===

declare const decorator: MethodDecorator;
>decorator : <T>(target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>) => void | TypedPropertyDescriptor<T>
>MethodDecorator : <T>(target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>) => void | TypedPropertyDescriptor<T>

class A {
>A : A

    @decorator
>decorator : <T>(target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>) => void | TypedPropertyDescriptor<T>

    async foo() {}
>foo : () => Promise<void>

    @decorator
>decorator : <T>(target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>) => void | TypedPropertyDescriptor<T>

    async bar(): Promise<number> { return 0; }
>bar : () => Promise<number>
>Promise : Promise<T>
>0 : number

    @decorator
>decorator : <T>(target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>) => void | TypedPropertyDescriptor<T>

    baz(n: Promise<number>): Promise<number> { return n; }
>baz : (n: Promise<number>) => Promise<number>
>n : Promise<number>
>Promise : Promise<T>
>Promise : Promise<T>
>n : Promise<number>
}

