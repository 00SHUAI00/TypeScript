=== tests/cases/compiler/objectLitGetterSetter.ts ===
            var obj = {};
>obj : Symbol(obj, Decl(objectLitGetterSetter.ts, 0, 15))
>{} : Symbol(, Decl(objectLitGetterSetter.ts, 0, 21))

            Object.defineProperty(obj, "accProperty", <PropertyDescriptor>({
>Object.defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.d.ts, 160, 60))
>Object : Symbol(Object, Decl(lib.d.ts, 92, 1), Decl(lib.d.ts, 223, 11))
>defineProperty : Symbol(ObjectConstructor.defineProperty, Decl(lib.d.ts, 160, 60))
>obj : Symbol(obj, Decl(objectLitGetterSetter.ts, 0, 15))
>PropertyDescriptor : Symbol(PropertyDescriptor, Decl(lib.d.ts, 79, 66))
>{                get: function () {                    eval("public = 1;");                    return 11;                },                set: function (v) {                }            } : Symbol(, Decl(objectLitGetterSetter.ts, 1, 75))

                get: function () {
>get : Symbol(get, Decl(objectLitGetterSetter.ts, 1, 76))
>function () {                    eval("public = 1;");                    return 11;                } : Symbol((Anonymous function), Decl(objectLitGetterSetter.ts, 2, 20))

                    eval("public = 1;");
>eval : Symbol(eval, Decl(lib.d.ts, 22, 29))

                    return 11;
                },
                set: function (v) {
>set : Symbol(set, Decl(objectLitGetterSetter.ts, 5, 18))
>function (v) {                } : Symbol((Anonymous function), Decl(objectLitGetterSetter.ts, 6, 20))
>v : Symbol(v, Decl(objectLitGetterSetter.ts, 6, 31))
                }
            }))

