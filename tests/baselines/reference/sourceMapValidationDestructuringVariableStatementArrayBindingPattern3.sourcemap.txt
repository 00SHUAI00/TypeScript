===================================================================
JsFile: sourceMapValidationDestructuringVariableStatementArrayBindingPattern3.js
mapUrl: sourceMapValidationDestructuringVariableStatementArrayBindingPattern3.js.map
sourceRoot: 
sources: sourceMapValidationDestructuringVariableStatementArrayBindingPattern3.ts
===================================================================
-------------------------------------------------------------------
emittedFile:tests/cases/compiler/sourceMapValidationDestructuringVariableStatementArrayBindingPattern3.js
sourceFile:sourceMapValidationDestructuringVariableStatementArrayBindingPattern3.ts
-------------------------------------------------------------------
>>>var __read = (this && this.__read) || function (o, n) {
>>>    if (!(m = typeof Symbol === "function" && o[Symbol.iterator])) return o;
>>>    var m, i = m.call(o), ar = [], r, e;
>>>    try { while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value); }
>>>    catch (error) { e = { error: error }; }
>>>    finally { try { if (m = !(r && r.done) && i["return"]) m.call(i); } finally { if (e) throw e.error; } }
>>>    return ar;
>>>};
>>>var robotA = [1, "mower", "mowing"];
1 >
2 >^^^^
3 >    ^^^^^^
4 >          ^^^
5 >             ^
6 >              ^
7 >               ^^
8 >                 ^^^^^^^
9 >                        ^^
10>                          ^^^^^^^^
11>                                  ^
12>                                   ^
13>                                    ^^^^^->
1 >declare var console: {
  >    log(msg: any): void;
  >}
  >type Robot = [number, string, string];
  >type MultiSkilledRobot = [string, [string, string]];
  >
  >
2 >var 
3 >    robotA
4 >          : Robot = 
5 >             [
6 >              1
7 >               , 
8 >                 "mower"
9 >                        , 
10>                          "mowing"
11>                                  ]
12>                                   ;
1 >Emitted(9, 1) Source(7, 1) + SourceIndex(0)
2 >Emitted(9, 5) Source(7, 5) + SourceIndex(0)
3 >Emitted(9, 11) Source(7, 11) + SourceIndex(0)
4 >Emitted(9, 14) Source(7, 21) + SourceIndex(0)
5 >Emitted(9, 15) Source(7, 22) + SourceIndex(0)
6 >Emitted(9, 16) Source(7, 23) + SourceIndex(0)
7 >Emitted(9, 18) Source(7, 25) + SourceIndex(0)
8 >Emitted(9, 25) Source(7, 32) + SourceIndex(0)
9 >Emitted(9, 27) Source(7, 34) + SourceIndex(0)
10>Emitted(9, 35) Source(7, 42) + SourceIndex(0)
11>Emitted(9, 36) Source(7, 43) + SourceIndex(0)
12>Emitted(9, 37) Source(7, 44) + SourceIndex(0)
---
>>>var robotB = [2, "trimmer", "trimming"];
1->
2 >^^^^
3 >    ^^^^^^
4 >          ^^^
5 >             ^
6 >              ^
7 >               ^^
8 >                 ^^^^^^^^^
9 >                          ^^
10>                            ^^^^^^^^^^
11>                                      ^
12>                                       ^
13>                                        ^^^^^->
1->
  >
2 >var 
3 >    robotB
4 >          : Robot = 
5 >             [
6 >              2
7 >               , 
8 >                 "trimmer"
9 >                          , 
10>                            "trimming"
11>                                      ]
12>                                       ;
1->Emitted(10, 1) Source(8, 1) + SourceIndex(0)
2 >Emitted(10, 5) Source(8, 5) + SourceIndex(0)
3 >Emitted(10, 11) Source(8, 11) + SourceIndex(0)
4 >Emitted(10, 14) Source(8, 21) + SourceIndex(0)
5 >Emitted(10, 15) Source(8, 22) + SourceIndex(0)
6 >Emitted(10, 16) Source(8, 23) + SourceIndex(0)
7 >Emitted(10, 18) Source(8, 25) + SourceIndex(0)
8 >Emitted(10, 27) Source(8, 34) + SourceIndex(0)
9 >Emitted(10, 29) Source(8, 36) + SourceIndex(0)
10>Emitted(10, 39) Source(8, 46) + SourceIndex(0)
11>Emitted(10, 40) Source(8, 47) + SourceIndex(0)
12>Emitted(10, 41) Source(8, 48) + SourceIndex(0)
---
>>>var multiRobotA = ["mower", ["mowing", ""]];
1->
2 >^^^^
3 >    ^^^^^^^^^^^
4 >               ^^^
5 >                  ^
6 >                   ^^^^^^^
7 >                          ^^
8 >                            ^
9 >                             ^^^^^^^^
10>                                     ^^
11>                                       ^^
12>                                         ^
13>                                          ^
14>                                           ^
15>                                            ^^^^^^^^^^^->
1->
  >
2 >var 
3 >    multiRobotA
4 >               : MultiSkilledRobot = 
5 >                  [
6 >                   "mower"
7 >                          , 
8 >                            [
9 >                             "mowing"
10>                                     , 
11>                                       ""
12>                                         ]
13>                                          ]
14>                                           ;
1->Emitted(11, 1) Source(9, 1) + SourceIndex(0)
2 >Emitted(11, 5) Source(9, 5) + SourceIndex(0)
3 >Emitted(11, 16) Source(9, 16) + SourceIndex(0)
4 >Emitted(11, 19) Source(9, 38) + SourceIndex(0)
5 >Emitted(11, 20) Source(9, 39) + SourceIndex(0)
6 >Emitted(11, 27) Source(9, 46) + SourceIndex(0)
7 >Emitted(11, 29) Source(9, 48) + SourceIndex(0)
8 >Emitted(11, 30) Source(9, 49) + SourceIndex(0)
9 >Emitted(11, 38) Source(9, 57) + SourceIndex(0)
10>Emitted(11, 40) Source(9, 59) + SourceIndex(0)
11>Emitted(11, 42) Source(9, 61) + SourceIndex(0)
12>Emitted(11, 43) Source(9, 62) + SourceIndex(0)
13>Emitted(11, 44) Source(9, 63) + SourceIndex(0)
14>Emitted(11, 45) Source(9, 64) + SourceIndex(0)
---
>>>var multiRobotB = ["trimmer", ["trimming", "edging"]];
1->
2 >^^^^
3 >    ^^^^^^^^^^^
4 >               ^^^
5 >                  ^
6 >                   ^^^^^^^^^
7 >                            ^^
8 >                              ^
9 >                               ^^^^^^^^^^
10>                                         ^^
11>                                           ^^^^^^^^
12>                                                   ^
13>                                                    ^
14>                                                     ^
1->
  >
2 >var 
3 >    multiRobotB
4 >               : MultiSkilledRobot = 
5 >                  [
6 >                   "trimmer"
7 >                            , 
8 >                              [
9 >                               "trimming"
10>                                         , 
11>                                           "edging"
12>                                                   ]
13>                                                    ]
14>                                                     ;
1->Emitted(12, 1) Source(10, 1) + SourceIndex(0)
2 >Emitted(12, 5) Source(10, 5) + SourceIndex(0)
3 >Emitted(12, 16) Source(10, 16) + SourceIndex(0)
4 >Emitted(12, 19) Source(10, 38) + SourceIndex(0)
5 >Emitted(12, 20) Source(10, 39) + SourceIndex(0)
6 >Emitted(12, 29) Source(10, 48) + SourceIndex(0)
7 >Emitted(12, 31) Source(10, 50) + SourceIndex(0)
8 >Emitted(12, 32) Source(10, 51) + SourceIndex(0)
9 >Emitted(12, 42) Source(10, 61) + SourceIndex(0)
10>Emitted(12, 44) Source(10, 63) + SourceIndex(0)
11>Emitted(12, 52) Source(10, 71) + SourceIndex(0)
12>Emitted(12, 53) Source(10, 72) + SourceIndex(0)
13>Emitted(12, 54) Source(10, 73) + SourceIndex(0)
14>Emitted(12, 55) Source(10, 74) + SourceIndex(0)
---
>>>var nameA, numberB, nameB, skillB;
1 >
2 >^^^^
3 >    ^^^^^
4 >         ^^
5 >           ^^^^^^^
6 >                  ^^
7 >                    ^^^^^
8 >                         ^^
9 >                           ^^^^^^
10>                                 ^
1 >
  >
  >
2 >let 
3 >    nameA: string
4 >         , 
5 >           numberB: number
6 >                  , 
7 >                    nameB: string
8 >                         , 
9 >                           skillB: string
10>                                 ;
1 >Emitted(13, 1) Source(12, 1) + SourceIndex(0)
2 >Emitted(13, 5) Source(12, 5) + SourceIndex(0)
3 >Emitted(13, 10) Source(12, 18) + SourceIndex(0)
4 >Emitted(13, 12) Source(12, 20) + SourceIndex(0)
5 >Emitted(13, 19) Source(12, 35) + SourceIndex(0)
6 >Emitted(13, 21) Source(12, 37) + SourceIndex(0)
7 >Emitted(13, 26) Source(12, 50) + SourceIndex(0)
8 >Emitted(13, 28) Source(12, 52) + SourceIndex(0)
9 >Emitted(13, 34) Source(12, 66) + SourceIndex(0)
10>Emitted(13, 35) Source(12, 67) + SourceIndex(0)
---
>>>var robotAInfo;
1 >
2 >^^^^
3 >    ^^^^^^^^^^
4 >              ^
5 >               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >let 
3 >    robotAInfo: (number | string)[]
4 >              ;
1 >Emitted(14, 1) Source(13, 1) + SourceIndex(0)
2 >Emitted(14, 5) Source(13, 5) + SourceIndex(0)
3 >Emitted(14, 15) Source(13, 36) + SourceIndex(0)
4 >Emitted(14, 16) Source(13, 37) + SourceIndex(0)
---
>>>var multiSkillB, nameMB, primarySkillB, secondarySkillB;
1->
2 >^^^^
3 >    ^^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^^
6 >                       ^^
7 >                         ^^^^^^^^^^^^^
8 >                                      ^^
9 >                                        ^^^^^^^^^^^^^^^
10>                                                       ^
1->
  >
  >
2 >let 
3 >    multiSkillB: [string, string]
4 >               , 
5 >                 nameMB: string
6 >                       , 
7 >                         primarySkillB: string
8 >                                      , 
9 >                                        secondarySkillB: string
10>                                                       ;
1->Emitted(15, 1) Source(15, 1) + SourceIndex(0)
2 >Emitted(15, 5) Source(15, 5) + SourceIndex(0)
3 >Emitted(15, 16) Source(15, 34) + SourceIndex(0)
4 >Emitted(15, 18) Source(15, 36) + SourceIndex(0)
5 >Emitted(15, 24) Source(15, 50) + SourceIndex(0)
6 >Emitted(15, 26) Source(15, 52) + SourceIndex(0)
7 >Emitted(15, 39) Source(15, 73) + SourceIndex(0)
8 >Emitted(15, 41) Source(15, 75) + SourceIndex(0)
9 >Emitted(15, 56) Source(15, 98) + SourceIndex(0)
10>Emitted(15, 57) Source(15, 99) + SourceIndex(0)
---
>>>var multiRobotAInfo;
1 >
2 >^^^^
3 >    ^^^^^^^^^^^^^^^
4 >                   ^
5 >                    ^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >let 
3 >    multiRobotAInfo: (string | [string, string])[]
4 >                   ;
1 >Emitted(16, 1) Source(16, 1) + SourceIndex(0)
2 >Emitted(16, 5) Source(16, 5) + SourceIndex(0)
3 >Emitted(16, 20) Source(16, 51) + SourceIndex(0)
4 >Emitted(16, 21) Source(16, 52) + SourceIndex(0)
---
>>>_a = __read(robotA, 2), nameA = _a[1];
1->
2 >^^^^^^^^^^^^^^^^^^^^^^
3 >                      ^^
4 >                        ^^^^^^^^^^^^^
5 >                                     ^
6 >                                      ^^^^^^->
1->
  >
  >
2 >[, nameA] = robotA
3 >                      
4 >                        nameA
5 >                                     ] = robotA;
1->Emitted(17, 1) Source(18, 1) + SourceIndex(0)
2 >Emitted(17, 23) Source(18, 19) + SourceIndex(0)
3 >Emitted(17, 25) Source(18, 4) + SourceIndex(0)
4 >Emitted(17, 38) Source(18, 9) + SourceIndex(0)
5 >Emitted(17, 39) Source(18, 20) + SourceIndex(0)
---
>>>_b = __read(getRobotB(), 2), nameB = _b[1];
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                           ^^
4 >                             ^^^^^^^^^^^^^
5 >                                          ^
6 >                                           ^^^^^->
1->
  >
2 >[, nameB] = getRobotB()
3 >                           
4 >                             nameB
5 >                                          ] = getRobotB();
1->Emitted(18, 1) Source(19, 1) + SourceIndex(0)
2 >Emitted(18, 28) Source(19, 24) + SourceIndex(0)
3 >Emitted(18, 30) Source(19, 4) + SourceIndex(0)
4 >Emitted(18, 43) Source(19, 9) + SourceIndex(0)
5 >Emitted(18, 44) Source(19, 25) + SourceIndex(0)
---
>>>_c = [2, "trimmer", "trimming"], nameB = _c[1];
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                               ^^
4 >                                 ^^^^^^^^^^^^^
5 >                                              ^
6 >                                               ^^^->
1->
  >
2 >[, nameB] = [2, "trimmer", "trimming"]
3 >                               
4 >                                 nameB
5 >                                              ] = [2, "trimmer", "trimming"];
1->Emitted(19, 1) Source(20, 1) + SourceIndex(0)
2 >Emitted(19, 32) Source(20, 39) + SourceIndex(0)
3 >Emitted(19, 34) Source(20, 4) + SourceIndex(0)
4 >Emitted(19, 47) Source(20, 9) + SourceIndex(0)
5 >Emitted(19, 48) Source(20, 40) + SourceIndex(0)
---
>>>_d = __read(multiRobotB, 2), multiSkillB = _d[1];
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                           ^^
4 >                             ^^^^^^^^^^^^^^^^^^^
5 >                                                ^
6 >                                                 ^^^^^^->
1->
  >
2 >[, multiSkillB] = multiRobotB
3 >                           
4 >                             multiSkillB
5 >                                                ] = multiRobotB;
1->Emitted(20, 1) Source(21, 1) + SourceIndex(0)
2 >Emitted(20, 28) Source(21, 30) + SourceIndex(0)
3 >Emitted(20, 30) Source(21, 4) + SourceIndex(0)
4 >Emitted(20, 49) Source(21, 15) + SourceIndex(0)
5 >Emitted(20, 50) Source(21, 31) + SourceIndex(0)
---
>>>_e = __read(getMultiRobotB(), 2), multiSkillB = _e[1];
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                ^^
4 >                                  ^^^^^^^^^^^^^^^^^^^
5 >                                                     ^
6 >                                                      ^^^^^^^->
1->
  >
2 >[, multiSkillB] = getMultiRobotB()
3 >                                
4 >                                  multiSkillB
5 >                                                     ] = getMultiRobotB();
1->Emitted(21, 1) Source(22, 1) + SourceIndex(0)
2 >Emitted(21, 33) Source(22, 35) + SourceIndex(0)
3 >Emitted(21, 35) Source(22, 4) + SourceIndex(0)
4 >Emitted(21, 54) Source(22, 15) + SourceIndex(0)
5 >Emitted(21, 55) Source(22, 36) + SourceIndex(0)
---
>>>_f = ["roomba", ["vaccum", "mopping"]], multiSkillB = _f[1];
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                      ^^
4 >                                        ^^^^^^^^^^^^^^^^^^^
5 >                                                           ^
1->
  >
2 >[, multiSkillB] = ["roomba", ["vaccum", "mopping"]]
3 >                                      
4 >                                        multiSkillB
5 >                                                           ] = ["roomba", ["vaccum", "mopping"]];
1->Emitted(22, 1) Source(23, 1) + SourceIndex(0)
2 >Emitted(22, 39) Source(23, 52) + SourceIndex(0)
3 >Emitted(22, 41) Source(23, 4) + SourceIndex(0)
4 >Emitted(22, 60) Source(23, 15) + SourceIndex(0)
5 >Emitted(22, 61) Source(23, 53) + SourceIndex(0)
---
>>>_g = __read(robotB, 1), numberB = _g[0];
1 >
2 >^^^^^^^^^^^^^^^^^^^^^^
3 >                      ^^
4 >                        ^^^^^^^^^^^^^^^
5 >                                       ^
6 >                                        ^^^^^^->
1 >
  >
  >
2 >[numberB] = robotB
3 >                      
4 >                        numberB
5 >                                       ] = robotB;
1 >Emitted(23, 1) Source(25, 1) + SourceIndex(0)
2 >Emitted(23, 23) Source(25, 19) + SourceIndex(0)
3 >Emitted(23, 25) Source(25, 2) + SourceIndex(0)
4 >Emitted(23, 40) Source(25, 9) + SourceIndex(0)
5 >Emitted(23, 41) Source(25, 20) + SourceIndex(0)
---
>>>_h = __read(getRobotB(), 1), numberB = _h[0];
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                           ^^
4 >                             ^^^^^^^^^^^^^^^
5 >                                            ^
1->
  >
2 >[numberB] = getRobotB()
3 >                           
4 >                             numberB
5 >                                            ] = getRobotB();
1->Emitted(24, 1) Source(26, 1) + SourceIndex(0)
2 >Emitted(24, 28) Source(26, 24) + SourceIndex(0)
3 >Emitted(24, 30) Source(26, 2) + SourceIndex(0)
4 >Emitted(24, 45) Source(26, 9) + SourceIndex(0)
5 >Emitted(24, 46) Source(26, 25) + SourceIndex(0)
---
>>>numberB = [2, "trimmer", "trimming"][0];
1 >
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                       ^
4 >                                        ^^^^^->
1 >
  >[
2 >numberB
3 >                                       ] = [2, "trimmer", "trimming"];
1 >Emitted(25, 1) Source(27, 2) + SourceIndex(0)
2 >Emitted(25, 40) Source(27, 9) + SourceIndex(0)
3 >Emitted(25, 41) Source(27, 40) + SourceIndex(0)
---
>>>_j = __read(multiRobotB, 1), nameMB = _j[0];
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                           ^^
4 >                             ^^^^^^^^^^^^^^
5 >                                           ^
6 >                                            ^^^^^^->
1->
  >
2 >[nameMB] = multiRobotB
3 >                           
4 >                             nameMB
5 >                                           ] = multiRobotB;
1->Emitted(26, 1) Source(28, 1) + SourceIndex(0)
2 >Emitted(26, 28) Source(28, 23) + SourceIndex(0)
3 >Emitted(26, 30) Source(28, 2) + SourceIndex(0)
4 >Emitted(26, 44) Source(28, 8) + SourceIndex(0)
5 >Emitted(26, 45) Source(28, 24) + SourceIndex(0)
---
>>>_k = __read(getMultiRobotB(), 1), nameMB = _k[0];
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                ^^
4 >                                  ^^^^^^^^^^^^^^
5 >                                                ^
1->
  >
2 >[nameMB] = getMultiRobotB()
3 >                                
4 >                                  nameMB
5 >                                                ] = getMultiRobotB();
1->Emitted(27, 1) Source(29, 1) + SourceIndex(0)
2 >Emitted(27, 33) Source(29, 28) + SourceIndex(0)
3 >Emitted(27, 35) Source(29, 2) + SourceIndex(0)
4 >Emitted(27, 49) Source(29, 8) + SourceIndex(0)
5 >Emitted(27, 50) Source(29, 29) + SourceIndex(0)
---
>>>nameMB = ["trimmer", ["trimming", "edging"]][0];
1 >
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                               ^
4 >                                                ^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >[
2 >nameMB
3 >                                               ] = ["trimmer", ["trimming", "edging"]];
1 >Emitted(28, 1) Source(30, 2) + SourceIndex(0)
2 >Emitted(28, 48) Source(30, 8) + SourceIndex(0)
3 >Emitted(28, 49) Source(30, 48) + SourceIndex(0)
---
>>>_l = __read(robotB, 3), numberB = _l[0], nameB = _l[1], skillB = _l[2];
1->
2 >^^^^^^^^^^^^^^^^^^^^^^
3 >                      ^^
4 >                        ^^^^^^^^^^^^^^^
5 >                                       ^^
6 >                                         ^^^^^^^^^^^^^
7 >                                                      ^^
8 >                                                        ^^^^^^^^^^^^^^
9 >                                                                      ^
10>                                                                       ^^^^^^->
1->
  >
  >
2 >[numberB, nameB, skillB] = robotB
3 >                      
4 >                        numberB
5 >                                       , 
6 >                                         nameB
7 >                                                      , 
8 >                                                        skillB
9 >                                                                      ] = robotB;
1->Emitted(29, 1) Source(32, 1) + SourceIndex(0)
2 >Emitted(29, 23) Source(32, 34) + SourceIndex(0)
3 >Emitted(29, 25) Source(32, 2) + SourceIndex(0)
4 >Emitted(29, 40) Source(32, 9) + SourceIndex(0)
5 >Emitted(29, 42) Source(32, 11) + SourceIndex(0)
6 >Emitted(29, 55) Source(32, 16) + SourceIndex(0)
7 >Emitted(29, 57) Source(32, 18) + SourceIndex(0)
8 >Emitted(29, 71) Source(32, 24) + SourceIndex(0)
9 >Emitted(29, 72) Source(32, 35) + SourceIndex(0)
---
>>>_m = __read(getRobotB(), 3), numberB = _m[0], nameB = _m[1], skillB = _m[2];
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                           ^^
4 >                             ^^^^^^^^^^^^^^^
5 >                                            ^^
6 >                                              ^^^^^^^^^^^^^
7 >                                                           ^^
8 >                                                             ^^^^^^^^^^^^^^
9 >                                                                           ^
10>                                                                            ^^^^^->
1->
  >
2 >[numberB, nameB, skillB] = getRobotB()
3 >                           
4 >                             numberB
5 >                                            , 
6 >                                              nameB
7 >                                                           , 
8 >                                                             skillB
9 >                                                                           ] = getRobotB();
1->Emitted(30, 1) Source(33, 1) + SourceIndex(0)
2 >Emitted(30, 28) Source(33, 39) + SourceIndex(0)
3 >Emitted(30, 30) Source(33, 2) + SourceIndex(0)
4 >Emitted(30, 45) Source(33, 9) + SourceIndex(0)
5 >Emitted(30, 47) Source(33, 11) + SourceIndex(0)
6 >Emitted(30, 60) Source(33, 16) + SourceIndex(0)
7 >Emitted(30, 62) Source(33, 18) + SourceIndex(0)
8 >Emitted(30, 76) Source(33, 24) + SourceIndex(0)
9 >Emitted(30, 77) Source(33, 40) + SourceIndex(0)
---
>>>_o = [2, "trimmer", "trimming"], numberB = _o[0], nameB = _o[1], skillB = _o[2];
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                               ^^
4 >                                 ^^^^^^^^^^^^^^^
5 >                                                ^^
6 >                                                  ^^^^^^^^^^^^^
7 >                                                               ^^
8 >                                                                 ^^^^^^^^^^^^^^
9 >                                                                               ^
10>                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
2 >[numberB, nameB, skillB] = [2, "trimmer", "trimming"]
3 >                               
4 >                                 numberB
5 >                                                , 
6 >                                                  nameB
7 >                                                               , 
8 >                                                                 skillB
9 >                                                                               ] = [2, "trimmer", "trimming"];
1->Emitted(31, 1) Source(34, 1) + SourceIndex(0)
2 >Emitted(31, 32) Source(34, 54) + SourceIndex(0)
3 >Emitted(31, 34) Source(34, 2) + SourceIndex(0)
4 >Emitted(31, 49) Source(34, 9) + SourceIndex(0)
5 >Emitted(31, 51) Source(34, 11) + SourceIndex(0)
6 >Emitted(31, 64) Source(34, 16) + SourceIndex(0)
7 >Emitted(31, 66) Source(34, 18) + SourceIndex(0)
8 >Emitted(31, 80) Source(34, 24) + SourceIndex(0)
9 >Emitted(31, 81) Source(34, 55) + SourceIndex(0)
---
>>>_p = __read(multiRobotB, 2), nameMB = _p[0], _q = __read(_p[1], 2), primarySkillB = _q[0], secondarySkillB = _q[1];
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                           ^^
4 >                             ^^^^^^^^^^^^^^
5 >                                           ^^
6 >                                             ^^^^^^^^^^^^^^^^^^^^^
7 >                                                                  ^^
8 >                                                                    ^^^^^^^^^^^^^^^^^^^^^
9 >                                                                                         ^^
10>                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^
11>                                                                                                                  ^
12>                                                                                                                   ^^^^^^->
1->
  >
2 >[nameMB, [primarySkillB, secondarySkillB]] = multiRobotB
3 >                           
4 >                             nameMB
5 >                                           , 
6 >                                             [primarySkillB, secondarySkillB]
7 >                                                                  
8 >                                                                    primarySkillB
9 >                                                                                         , 
10>                                                                                           secondarySkillB
11>                                                                                                                  ]] = multiRobotB;
1->Emitted(32, 1) Source(35, 1) + SourceIndex(0)
2 >Emitted(32, 28) Source(35, 57) + SourceIndex(0)
3 >Emitted(32, 30) Source(35, 2) + SourceIndex(0)
4 >Emitted(32, 44) Source(35, 8) + SourceIndex(0)
5 >Emitted(32, 46) Source(35, 10) + SourceIndex(0)
6 >Emitted(32, 67) Source(35, 42) + SourceIndex(0)
7 >Emitted(32, 69) Source(35, 11) + SourceIndex(0)
8 >Emitted(32, 90) Source(35, 24) + SourceIndex(0)
9 >Emitted(32, 92) Source(35, 26) + SourceIndex(0)
10>Emitted(32, 115) Source(35, 41) + SourceIndex(0)
11>Emitted(32, 116) Source(35, 58) + SourceIndex(0)
---
>>>_r = __read(getMultiRobotB(), 2), nameMB = _r[0], _s = __read(_r[1], 2), primarySkillB = _s[0], secondarySkillB = _s[1];
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                ^^
4 >                                  ^^^^^^^^^^^^^^
5 >                                                ^^
6 >                                                  ^^^^^^^^^^^^^^^^^^^^^
7 >                                                                       ^^
8 >                                                                         ^^^^^^^^^^^^^^^^^^^^^
9 >                                                                                              ^^
10>                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^
11>                                                                                                                       ^
12>                                                                                                                        ^^^^^^^^^->
1->
  >
2 >[nameMB, [primarySkillB, secondarySkillB]] = getMultiRobotB()
3 >                                
4 >                                  nameMB
5 >                                                , 
6 >                                                  [primarySkillB, secondarySkillB]
7 >                                                                       
8 >                                                                         primarySkillB
9 >                                                                                              , 
10>                                                                                                secondarySkillB
11>                                                                                                                       ]] = getMultiRobotB();
1->Emitted(33, 1) Source(36, 1) + SourceIndex(0)
2 >Emitted(33, 33) Source(36, 62) + SourceIndex(0)
3 >Emitted(33, 35) Source(36, 2) + SourceIndex(0)
4 >Emitted(33, 49) Source(36, 8) + SourceIndex(0)
5 >Emitted(33, 51) Source(36, 10) + SourceIndex(0)
6 >Emitted(33, 72) Source(36, 42) + SourceIndex(0)
7 >Emitted(33, 74) Source(36, 11) + SourceIndex(0)
8 >Emitted(33, 95) Source(36, 24) + SourceIndex(0)
9 >Emitted(33, 97) Source(36, 26) + SourceIndex(0)
10>Emitted(33, 120) Source(36, 41) + SourceIndex(0)
11>Emitted(33, 121) Source(36, 63) + SourceIndex(0)
---
>>>_t = ["trimmer", ["trimming", "edging"]], nameMB = _t[0], _u = __read(_t[1], 2), primarySkillB = _u[0], secondarySkillB = _u[1];
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                        ^^
4 >                                          ^^^^^^^^^^^^^^
5 >                                                        ^^
6 >                                                          ^^^^^^^^^^^^^^^^^^^^^
7 >                                                                               ^^
8 >                                                                                 ^^^^^^^^^^^^^^^^^^^^^
9 >                                                                                                      ^^
10>                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^
11>                                                                                                                               ^
1->
  >
2 >[nameMB, [primarySkillB, secondarySkillB]] = ["trimmer", ["trimming", "edging"]]
3 >                                        
4 >                                          nameMB
5 >                                                        , 
6 >                                                          [primarySkillB, secondarySkillB]
7 >                                                                               
8 >                                                                                 primarySkillB
9 >                                                                                                      , 
10>                                                                                                        secondarySkillB
11>                                                                                                                               ]] = ["trimmer", ["trimming", "edging"]];
1->Emitted(34, 1) Source(37, 1) + SourceIndex(0)
2 >Emitted(34, 41) Source(37, 81) + SourceIndex(0)
3 >Emitted(34, 43) Source(37, 2) + SourceIndex(0)
4 >Emitted(34, 57) Source(37, 8) + SourceIndex(0)
5 >Emitted(34, 59) Source(37, 10) + SourceIndex(0)
6 >Emitted(34, 80) Source(37, 42) + SourceIndex(0)
7 >Emitted(34, 82) Source(37, 11) + SourceIndex(0)
8 >Emitted(34, 103) Source(37, 24) + SourceIndex(0)
9 >Emitted(34, 105) Source(37, 26) + SourceIndex(0)
10>Emitted(34, 128) Source(37, 41) + SourceIndex(0)
11>Emitted(34, 129) Source(37, 82) + SourceIndex(0)
---
>>>_v = __read(robotB), numberB = _v[0], robotAInfo = _v.slice(1);
1 >
2 >^^^^^^^^^^^^^^^^^^^
3 >                   ^^
4 >                     ^^^^^^^^^^^^^^^
5 >                                    ^^
6 >                                      ^^^^^^^^^^^^^^^^^^^^^^^^
7 >                                                              ^
8 >                                                               ^^^^^^->
1 >
  >
  >
2 >[numberB, ...robotAInfo] = robotB
3 >                   
4 >                     numberB
5 >                                    , 
6 >                                      ...robotAInfo
7 >                                                              ] = robotB;
1 >Emitted(35, 1) Source(39, 1) + SourceIndex(0)
2 >Emitted(35, 20) Source(39, 34) + SourceIndex(0)
3 >Emitted(35, 22) Source(39, 2) + SourceIndex(0)
4 >Emitted(35, 37) Source(39, 9) + SourceIndex(0)
5 >Emitted(35, 39) Source(39, 11) + SourceIndex(0)
6 >Emitted(35, 63) Source(39, 24) + SourceIndex(0)
7 >Emitted(35, 64) Source(39, 35) + SourceIndex(0)
---
>>>_w = __read(getRobotB()), numberB = _w[0], robotAInfo = _w.slice(1);
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^
3 >                        ^^
4 >                          ^^^^^^^^^^^^^^^
5 >                                         ^^
6 >                                           ^^^^^^^^^^^^^^^^^^^^^^^^
7 >                                                                   ^
8 >                                                                    ^^^^^^^^^^^^^^^^->
1->
  >
2 >[numberB, ...robotAInfo] = getRobotB()
3 >                        
4 >                          numberB
5 >                                         , 
6 >                                           ...robotAInfo
7 >                                                                   ] = getRobotB();
1->Emitted(36, 1) Source(40, 1) + SourceIndex(0)
2 >Emitted(36, 25) Source(40, 39) + SourceIndex(0)
3 >Emitted(36, 27) Source(40, 2) + SourceIndex(0)
4 >Emitted(36, 42) Source(40, 9) + SourceIndex(0)
5 >Emitted(36, 44) Source(40, 11) + SourceIndex(0)
6 >Emitted(36, 68) Source(40, 24) + SourceIndex(0)
7 >Emitted(36, 69) Source(40, 40) + SourceIndex(0)
---
>>>_x = __read([2, "trimmer", "trimming"]), numberB = _x[0], robotAInfo = _x.slice(1);
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                       ^^
4 >                                         ^^^^^^^^^^^^^^^
5 >                                                        ^^
6 >                                                          ^^^^^^^^^^^^^^^^^^^^^^^^
7 >                                                                                  ^
1->
  >
2 >[numberB, ...robotAInfo] = <Robot>[2, "trimmer", "trimming"]
3 >                                       
4 >                                         numberB
5 >                                                        , 
6 >                                                          ...robotAInfo
7 >                                                                                  ] = <Robot>[2, "trimmer", "trimming"];
1->Emitted(37, 1) Source(41, 1) + SourceIndex(0)
2 >Emitted(37, 40) Source(41, 61) + SourceIndex(0)
3 >Emitted(37, 42) Source(41, 2) + SourceIndex(0)
4 >Emitted(37, 57) Source(41, 9) + SourceIndex(0)
5 >Emitted(37, 59) Source(41, 11) + SourceIndex(0)
6 >Emitted(37, 83) Source(41, 24) + SourceIndex(0)
7 >Emitted(37, 84) Source(41, 62) + SourceIndex(0)
---
>>>_y = __read(multiRobotA), multiRobotAInfo = _y.slice(0);
1 >
2 >^^^^^^^^^^^^^^^^^^^^^^^^
3 >                        ^^
4 >                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 >                                                       ^
6 >                                                        ^^^^^^->
1 >
  >
2 >[...multiRobotAInfo] = multiRobotA
3 >                        
4 >                          ...multiRobotAInfo
5 >                                                       ] = multiRobotA;
1 >Emitted(38, 1) Source(42, 1) + SourceIndex(0)
2 >Emitted(38, 25) Source(42, 35) + SourceIndex(0)
3 >Emitted(38, 27) Source(42, 2) + SourceIndex(0)
4 >Emitted(38, 56) Source(42, 20) + SourceIndex(0)
5 >Emitted(38, 57) Source(42, 36) + SourceIndex(0)
---
>>>_z = __read(getMultiRobotB()), multiRobotAInfo = _z.slice(0);
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                             ^^
4 >                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 >                                                            ^
6 >                                                             ^^^->
1->
  >
2 >[...multiRobotAInfo] = getMultiRobotB()
3 >                             
4 >                               ...multiRobotAInfo
5 >                                                            ] = getMultiRobotB();
1->Emitted(39, 1) Source(43, 1) + SourceIndex(0)
2 >Emitted(39, 30) Source(43, 40) + SourceIndex(0)
3 >Emitted(39, 32) Source(43, 2) + SourceIndex(0)
4 >Emitted(39, 61) Source(43, 20) + SourceIndex(0)
5 >Emitted(39, 62) Source(43, 41) + SourceIndex(0)
---
>>>multiRobotAInfo = ["trimmer", ["trimming", "edging"]].slice(0);
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 >                                                              ^
1->
  >[
2 >...multiRobotAInfo
3 >                                                              ] = ["trimmer", ["trimming", "edging"]];
1->Emitted(40, 1) Source(44, 2) + SourceIndex(0)
2 >Emitted(40, 63) Source(44, 20) + SourceIndex(0)
3 >Emitted(40, 64) Source(44, 60) + SourceIndex(0)
---
>>>if (nameA == nameB) {
1 >
2 >^^
3 >  ^
4 >   ^
5 >    ^^^^^
6 >         ^^^^
7 >             ^^^^^
8 >                  ^
9 >                   ^
10>                    ^
11>                     ^^^^->
1 >
  >
  >
2 >if
3 >   
4 >   (
5 >    nameA
6 >          == 
7 >             nameB
8 >                  )
9 >                    
10>                    {
1 >Emitted(41, 1) Source(46, 1) + SourceIndex(0)
2 >Emitted(41, 3) Source(46, 3) + SourceIndex(0)
3 >Emitted(41, 4) Source(46, 4) + SourceIndex(0)
4 >Emitted(41, 5) Source(46, 5) + SourceIndex(0)
5 >Emitted(41, 10) Source(46, 10) + SourceIndex(0)
6 >Emitted(41, 14) Source(46, 14) + SourceIndex(0)
7 >Emitted(41, 19) Source(46, 19) + SourceIndex(0)
8 >Emitted(41, 20) Source(46, 20) + SourceIndex(0)
9 >Emitted(41, 21) Source(46, 21) + SourceIndex(0)
10>Emitted(41, 22) Source(46, 22) + SourceIndex(0)
---
>>>    console.log(skillB);
1->^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
1->
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                skillB
7 >                      )
8 >                       ;
1->Emitted(42, 5) Source(47, 5) + SourceIndex(0)
2 >Emitted(42, 12) Source(47, 12) + SourceIndex(0)
3 >Emitted(42, 13) Source(47, 13) + SourceIndex(0)
4 >Emitted(42, 16) Source(47, 16) + SourceIndex(0)
5 >Emitted(42, 17) Source(47, 17) + SourceIndex(0)
6 >Emitted(42, 23) Source(47, 23) + SourceIndex(0)
7 >Emitted(42, 24) Source(47, 24) + SourceIndex(0)
8 >Emitted(42, 25) Source(47, 25) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(43, 1) Source(48, 1) + SourceIndex(0)
2 >Emitted(43, 2) Source(48, 2) + SourceIndex(0)
---
>>>function getRobotB() {
1->
2 >^^^^^^^^^^^^^^^^^^^->
1->
  >
  >
1->Emitted(44, 1) Source(50, 1) + SourceIndex(0)
---
>>>    return robotB;
1->^^^^
2 >    ^^^^^^
3 >          ^
4 >           ^^^^^^
5 >                 ^
1->function getRobotB() {
  >    
2 >    return
3 >           
4 >           robotB
5 >                 ;
1->Emitted(45, 5) Source(51, 5) + SourceIndex(0)
2 >Emitted(45, 11) Source(51, 11) + SourceIndex(0)
3 >Emitted(45, 12) Source(51, 12) + SourceIndex(0)
4 >Emitted(45, 18) Source(51, 18) + SourceIndex(0)
5 >Emitted(45, 19) Source(51, 19) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(46, 1) Source(52, 1) + SourceIndex(0)
2 >Emitted(46, 2) Source(52, 2) + SourceIndex(0)
---
>>>function getMultiRobotB() {
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
  >
1->Emitted(47, 1) Source(54, 1) + SourceIndex(0)
---
>>>    return multiRobotB;
1->^^^^
2 >    ^^^^^^
3 >          ^
4 >           ^^^^^^^^^^^
5 >                      ^
1->function getMultiRobotB() {
  >    
2 >    return
3 >           
4 >           multiRobotB
5 >                      ;
1->Emitted(48, 5) Source(55, 5) + SourceIndex(0)
2 >Emitted(48, 11) Source(55, 11) + SourceIndex(0)
3 >Emitted(48, 12) Source(55, 12) + SourceIndex(0)
4 >Emitted(48, 23) Source(55, 23) + SourceIndex(0)
5 >Emitted(48, 24) Source(55, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(49, 1) Source(56, 1) + SourceIndex(0)
2 >Emitted(49, 2) Source(56, 2) + SourceIndex(0)
---
>>>var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z;
>>>//# sourceMappingURL=sourceMapValidationDestructuringVariableStatementArrayBindingPattern3.js.map