===================================================================
JsFile: sourceMapValidationDestructuringForOfObjectBindingPattern.js
mapUrl: sourceMapValidationDestructuringForOfObjectBindingPattern.js.map
sourceRoot: 
sources: sourceMapValidationDestructuringForOfObjectBindingPattern.ts
===================================================================
-------------------------------------------------------------------
emittedFile:tests/cases/compiler/sourceMapValidationDestructuringForOfObjectBindingPattern.js
sourceFile:sourceMapValidationDestructuringForOfObjectBindingPattern.ts
-------------------------------------------------------------------
>>>var __values = (this && this.__values) || function (o) { return (i = typeof Symbol === "function" && o[Symbol.iterator] || 0) ? i.call(o) : { next: function () { return { done: d = d || i >= o.length, value: d ? void 0 : o[i++] }; } }; var i, d; };
>>>var __step = (this && this.__step) || function (r) { return !(r.done || (r.done = (r.result = r.iterator.next()).done)); };
>>>var __close = (this && this.__close) || function (r) { return (m = !(r && r.done) && r.iterator["return"]) && m.call(r.iterator); var m; };
>>>var robots = [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }];
1 >
2 >^^^^
3 >    ^^^^^^
4 >          ^^^
5 >             ^
6 >              ^^
7 >                ^^^^
8 >                    ^^
9 >                      ^^^^^^^
10>                             ^^
11>                               ^^^^^
12>                                    ^^
13>                                      ^^^^^^^^
14>                                              ^^
15>                                                ^^
16>                                                  ^^
17>                                                    ^^^^
18>                                                        ^^
19>                                                          ^^^^^^^^^
20>                                                                   ^^
21>                                                                     ^^^^^
22>                                                                          ^^
23>                                                                            ^^^^^^^^^^
24>                                                                                      ^^
25>                                                                                        ^
26>                                                                                         ^
1 >declare var console: {
  >    log(msg: any): void;
  >}
  >interface Robot {
  >    name: string;
  >    skill: string;
  >}
  >
  >interface MultiRobot {
  >    name: string;
  >    skills: {
  >        primary: string;
  >        secondary: string;
  >    };
  >}
  >
  >
2 >let 
3 >    robots
4 >          : Robot[] = 
5 >             [
6 >              { 
7 >                name
8 >                    : 
9 >                      "mower"
10>                             , 
11>                               skill
12>                                    : 
13>                                      "mowing"
14>                                               }
15>                                                , 
16>                                                  { 
17>                                                    name
18>                                                        : 
19>                                                          "trimmer"
20>                                                                   , 
21>                                                                     skill
22>                                                                          : 
23>                                                                            "trimming"
24>                                                                                       }
25>                                                                                        ]
26>                                                                                         ;
1 >Emitted(4, 1) Source(17, 1) + SourceIndex(0)
2 >Emitted(4, 5) Source(17, 5) + SourceIndex(0)
3 >Emitted(4, 11) Source(17, 11) + SourceIndex(0)
4 >Emitted(4, 14) Source(17, 23) + SourceIndex(0)
5 >Emitted(4, 15) Source(17, 24) + SourceIndex(0)
6 >Emitted(4, 17) Source(17, 26) + SourceIndex(0)
7 >Emitted(4, 21) Source(17, 30) + SourceIndex(0)
8 >Emitted(4, 23) Source(17, 32) + SourceIndex(0)
9 >Emitted(4, 30) Source(17, 39) + SourceIndex(0)
10>Emitted(4, 32) Source(17, 41) + SourceIndex(0)
11>Emitted(4, 37) Source(17, 46) + SourceIndex(0)
12>Emitted(4, 39) Source(17, 48) + SourceIndex(0)
13>Emitted(4, 47) Source(17, 56) + SourceIndex(0)
14>Emitted(4, 49) Source(17, 58) + SourceIndex(0)
15>Emitted(4, 51) Source(17, 60) + SourceIndex(0)
16>Emitted(4, 53) Source(17, 62) + SourceIndex(0)
17>Emitted(4, 57) Source(17, 66) + SourceIndex(0)
18>Emitted(4, 59) Source(17, 68) + SourceIndex(0)
19>Emitted(4, 68) Source(17, 77) + SourceIndex(0)
20>Emitted(4, 70) Source(17, 79) + SourceIndex(0)
21>Emitted(4, 75) Source(17, 84) + SourceIndex(0)
22>Emitted(4, 77) Source(17, 86) + SourceIndex(0)
23>Emitted(4, 87) Source(17, 96) + SourceIndex(0)
24>Emitted(4, 89) Source(17, 98) + SourceIndex(0)
25>Emitted(4, 90) Source(17, 99) + SourceIndex(0)
26>Emitted(4, 91) Source(17, 100) + SourceIndex(0)
---
>>>var multiRobots = [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
1 >
2 >^^^^
3 >    ^^^^^^^^^^^
4 >               ^^^
5 >                  ^
6 >                   ^^
7 >                     ^^^^
8 >                         ^^
9 >                           ^^^^^^^
10>                                  ^^
11>                                    ^^^^^^
12>                                          ^^
13>                                            ^^
14>                                              ^^^^^^^
15>                                                     ^^
16>                                                       ^^^^^^^^
17>                                                               ^^
18>                                                                 ^^^^^^^^^
19>                                                                          ^^
20>                                                                            ^^^^^^
21>                                                                                  ^^
22>                                                                                    ^^
1 >
  >
2 >let 
3 >    multiRobots
4 >               : MultiRobot[] = 
5 >                  [
6 >                   { 
7 >                     name
8 >                         : 
9 >                           "mower"
10>                                  , 
11>                                    skills
12>                                          : 
13>                                            { 
14>                                              primary
15>                                                     : 
16>                                                       "mowing"
17>                                                               , 
18>                                                                 secondary
19>                                                                          : 
20>                                                                            "none"
21>                                                                                   }
22>                                                                                     }
1 >Emitted(5, 1) Source(18, 1) + SourceIndex(0)
2 >Emitted(5, 5) Source(18, 5) + SourceIndex(0)
3 >Emitted(5, 16) Source(18, 16) + SourceIndex(0)
4 >Emitted(5, 19) Source(18, 33) + SourceIndex(0)
5 >Emitted(5, 20) Source(18, 34) + SourceIndex(0)
6 >Emitted(5, 22) Source(18, 36) + SourceIndex(0)
7 >Emitted(5, 26) Source(18, 40) + SourceIndex(0)
8 >Emitted(5, 28) Source(18, 42) + SourceIndex(0)
9 >Emitted(5, 35) Source(18, 49) + SourceIndex(0)
10>Emitted(5, 37) Source(18, 51) + SourceIndex(0)
11>Emitted(5, 43) Source(18, 57) + SourceIndex(0)
12>Emitted(5, 45) Source(18, 59) + SourceIndex(0)
13>Emitted(5, 47) Source(18, 61) + SourceIndex(0)
14>Emitted(5, 54) Source(18, 68) + SourceIndex(0)
15>Emitted(5, 56) Source(18, 70) + SourceIndex(0)
16>Emitted(5, 64) Source(18, 78) + SourceIndex(0)
17>Emitted(5, 66) Source(18, 80) + SourceIndex(0)
18>Emitted(5, 75) Source(18, 89) + SourceIndex(0)
19>Emitted(5, 77) Source(18, 91) + SourceIndex(0)
20>Emitted(5, 83) Source(18, 97) + SourceIndex(0)
21>Emitted(5, 85) Source(18, 99) + SourceIndex(0)
22>Emitted(5, 87) Source(18, 101) + SourceIndex(0)
---
>>>    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }];
1 >^^^^
2 >    ^^
3 >      ^^^^
4 >          ^^
5 >            ^^^^^^^^^
6 >                     ^^
7 >                       ^^^^^^
8 >                             ^^
9 >                               ^^
10>                                 ^^^^^^^
11>                                        ^^
12>                                          ^^^^^^^^^^
13>                                                    ^^
14>                                                      ^^^^^^^^^
15>                                                               ^^
16>                                                                 ^^^^^^^^
17>                                                                         ^^
18>                                                                           ^^
19>                                                                             ^
20>                                                                              ^
1 >,
  >    
2 >    { 
3 >      name
4 >          : 
5 >            "trimmer"
6 >                     , 
7 >                       skills
8 >                             : 
9 >                               { 
10>                                 primary
11>                                        : 
12>                                          "trimming"
13>                                                    , 
14>                                                      secondary
15>                                                               : 
16>                                                                 "edging"
17>                                                                          }
18>                                                                            }
19>                                                                             ]
20>                                                                              ;
1 >Emitted(6, 5) Source(19, 5) + SourceIndex(0)
2 >Emitted(6, 7) Source(19, 7) + SourceIndex(0)
3 >Emitted(6, 11) Source(19, 11) + SourceIndex(0)
4 >Emitted(6, 13) Source(19, 13) + SourceIndex(0)
5 >Emitted(6, 22) Source(19, 22) + SourceIndex(0)
6 >Emitted(6, 24) Source(19, 24) + SourceIndex(0)
7 >Emitted(6, 30) Source(19, 30) + SourceIndex(0)
8 >Emitted(6, 32) Source(19, 32) + SourceIndex(0)
9 >Emitted(6, 34) Source(19, 34) + SourceIndex(0)
10>Emitted(6, 41) Source(19, 41) + SourceIndex(0)
11>Emitted(6, 43) Source(19, 43) + SourceIndex(0)
12>Emitted(6, 53) Source(19, 53) + SourceIndex(0)
13>Emitted(6, 55) Source(19, 55) + SourceIndex(0)
14>Emitted(6, 64) Source(19, 64) + SourceIndex(0)
15>Emitted(6, 66) Source(19, 66) + SourceIndex(0)
16>Emitted(6, 74) Source(19, 74) + SourceIndex(0)
17>Emitted(6, 76) Source(19, 76) + SourceIndex(0)
18>Emitted(6, 78) Source(19, 78) + SourceIndex(0)
19>Emitted(6, 79) Source(19, 79) + SourceIndex(0)
20>Emitted(6, 80) Source(19, 80) + SourceIndex(0)
---
>>>function getRobots() {
1 >
2 >^^^^^^^^^^^^^^^^^^^->
1 >
  >
  >
1 >Emitted(7, 1) Source(21, 1) + SourceIndex(0)
---
>>>    return robots;
1->^^^^
2 >    ^^^^^^
3 >          ^
4 >           ^^^^^^
5 >                 ^
1->function getRobots() {
  >    
2 >    return
3 >           
4 >           robots
5 >                 ;
1->Emitted(8, 5) Source(22, 5) + SourceIndex(0)
2 >Emitted(8, 11) Source(22, 11) + SourceIndex(0)
3 >Emitted(8, 12) Source(22, 12) + SourceIndex(0)
4 >Emitted(8, 18) Source(22, 18) + SourceIndex(0)
5 >Emitted(8, 19) Source(22, 19) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(9, 1) Source(23, 1) + SourceIndex(0)
2 >Emitted(9, 2) Source(23, 2) + SourceIndex(0)
---
>>>function getMultiRobots() {
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
  >
1->Emitted(10, 1) Source(25, 1) + SourceIndex(0)
---
>>>    return multiRobots;
1->^^^^
2 >    ^^^^^^
3 >          ^
4 >           ^^^^^^^^^^^
5 >                      ^
1->function getMultiRobots() {
  >    
2 >    return
3 >           
4 >           multiRobots
5 >                      ;
1->Emitted(11, 5) Source(26, 5) + SourceIndex(0)
2 >Emitted(11, 11) Source(26, 11) + SourceIndex(0)
3 >Emitted(11, 12) Source(26, 12) + SourceIndex(0)
4 >Emitted(11, 23) Source(26, 23) + SourceIndex(0)
5 >Emitted(11, 24) Source(26, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^->
1 >
  >
2 >}
1 >Emitted(12, 1) Source(27, 1) + SourceIndex(0)
2 >Emitted(12, 2) Source(27, 2) + SourceIndex(0)
---
>>>try {
>>>    for (var robots_1 = { iterator: __values(robots) }; __step(robots_1);) {
1->^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^
7 >                        ^^
8 >                          ^^^^^^^^^^
9 >                                    ^^^^^^^^^
10>                                             ^^^^^^
11>                                                   ^
12>                                                    ^^
13>                                                      ^^
14>                                                        ^^^^^^^^^^^^^^^^
1->
  >
  >
2 >    for
3 >        
4 >        (let {name: nameA } of 
5 >         
6 >             
7 >                        
8 >                          
9 >                                    
10>                                             robots
11>                                                   
12>                                                    
13>                                                      
14>                                                        let {name: nameA }
1->Emitted(14, 5) Source(29, 1) + SourceIndex(0)
2 >Emitted(14, 8) Source(29, 4) + SourceIndex(0)
3 >Emitted(14, 9) Source(29, 5) + SourceIndex(0)
4 >Emitted(14, 10) Source(29, 28) + SourceIndex(0)
5 >Emitted(14, 14) Source(29, 28) + SourceIndex(0)
6 >Emitted(14, 25) Source(29, 28) + SourceIndex(0)
7 >Emitted(14, 27) Source(29, 28) + SourceIndex(0)
8 >Emitted(14, 37) Source(29, 28) + SourceIndex(0)
9 >Emitted(14, 46) Source(29, 28) + SourceIndex(0)
10>Emitted(14, 52) Source(29, 34) + SourceIndex(0)
11>Emitted(14, 53) Source(29, 34) + SourceIndex(0)
12>Emitted(14, 55) Source(29, 34) + SourceIndex(0)
13>Emitted(14, 57) Source(29, 6) + SourceIndex(0)
14>Emitted(14, 73) Source(29, 24) + SourceIndex(0)
---
>>>        var nameA = robots_1.result.value.name;
1 >^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1 >
2 >        
3 >            name: nameA
1 >Emitted(15, 9) Source(29, 11) + SourceIndex(0)
2 >Emitted(15, 13) Source(29, 11) + SourceIndex(0)
3 >Emitted(15, 47) Source(29, 22) + SourceIndex(0)
---
>>>        console.log(nameA);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^
7 >                         ^
8 >                          ^
1 > } of robots) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    nameA
7 >                         )
8 >                          ;
1 >Emitted(16, 9) Source(30, 5) + SourceIndex(0)
2 >Emitted(16, 16) Source(30, 12) + SourceIndex(0)
3 >Emitted(16, 17) Source(30, 13) + SourceIndex(0)
4 >Emitted(16, 20) Source(30, 16) + SourceIndex(0)
5 >Emitted(16, 21) Source(30, 17) + SourceIndex(0)
6 >Emitted(16, 26) Source(30, 22) + SourceIndex(0)
7 >Emitted(16, 27) Source(30, 23) + SourceIndex(0)
8 >Emitted(16, 28) Source(30, 24) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(17, 6) Source(31, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_1_1) { e_1 = { error: e_1_1 }; }
>>>finally {
>>>    try { __close(robots_1); } finally { if (e_1) throw e_1.error; }
>>>}
>>>try {
>>>    for (var iterator_1 = { iterator: __values(getRobots()) }; __step(iterator_1);) {
1 >^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^
7 >                          ^^
8 >                            ^^^^^^^^^^
9 >                                      ^^^^^^^^^
10>                                               ^^^^^^^^^
11>                                                        ^^
12>                                                          ^
13>                                                           ^^
14>                                                             ^^
15>                                                               ^^^^^^^^^^^^^^^^^^
1 >
  >
2 >    for
3 >        
4 >        (let {name: nameA } of 
5 >         
6 >             
7 >                          
8 >                            
9 >                                      
10>                                               getRobots
11>                                                        ()
12>                                                          
13>                                                           
14>                                                             
15>                                                               let {name: nameA }
1 >Emitted(24, 5) Source(32, 1) + SourceIndex(0)
2 >Emitted(24, 8) Source(32, 4) + SourceIndex(0)
3 >Emitted(24, 9) Source(32, 5) + SourceIndex(0)
4 >Emitted(24, 10) Source(32, 28) + SourceIndex(0)
5 >Emitted(24, 14) Source(32, 28) + SourceIndex(0)
6 >Emitted(24, 27) Source(32, 28) + SourceIndex(0)
7 >Emitted(24, 29) Source(32, 28) + SourceIndex(0)
8 >Emitted(24, 39) Source(32, 28) + SourceIndex(0)
9 >Emitted(24, 48) Source(32, 28) + SourceIndex(0)
10>Emitted(24, 57) Source(32, 37) + SourceIndex(0)
11>Emitted(24, 59) Source(32, 39) + SourceIndex(0)
12>Emitted(24, 60) Source(32, 39) + SourceIndex(0)
13>Emitted(24, 62) Source(32, 39) + SourceIndex(0)
14>Emitted(24, 64) Source(32, 6) + SourceIndex(0)
15>Emitted(24, 82) Source(32, 24) + SourceIndex(0)
---
>>>        var nameA = iterator_1.result.value.name;
1 >^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1 >
2 >        
3 >            name: nameA
1 >Emitted(25, 9) Source(32, 11) + SourceIndex(0)
2 >Emitted(25, 13) Source(32, 11) + SourceIndex(0)
3 >Emitted(25, 49) Source(32, 22) + SourceIndex(0)
---
>>>        console.log(nameA);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^
7 >                         ^
8 >                          ^
1 > } of getRobots()) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    nameA
7 >                         )
8 >                          ;
1 >Emitted(26, 9) Source(33, 5) + SourceIndex(0)
2 >Emitted(26, 16) Source(33, 12) + SourceIndex(0)
3 >Emitted(26, 17) Source(33, 13) + SourceIndex(0)
4 >Emitted(26, 20) Source(33, 16) + SourceIndex(0)
5 >Emitted(26, 21) Source(33, 17) + SourceIndex(0)
6 >Emitted(26, 26) Source(33, 22) + SourceIndex(0)
7 >Emitted(26, 27) Source(33, 23) + SourceIndex(0)
8 >Emitted(26, 28) Source(33, 24) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(27, 6) Source(34, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_2_1) { e_2 = { error: e_2_1 }; }
>>>finally {
>>>    try { __close(iterator_1); } finally { if (e_2) throw e_2.error; }
>>>}
>>>for (var _i = 0, _a = [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]; _i < _a.length; _i++) {
1 >
2 >^^^
3 >   ^
4 >    ^
5 >     ^^^^^^^^^^
6 >               ^^
7 >                 ^^^^^^
8 >                       ^^
9 >                         ^^^^
10>                             ^^
11>                               ^^^^^^^
12>                                      ^^
13>                                        ^^^^^
14>                                             ^^
15>                                               ^^^^^^^^
16>                                                       ^^
17>                                                         ^^
18>                                                           ^^
19>                                                             ^^^^
20>                                                                 ^^
21>                                                                   ^^^^^^^^^
22>                                                                            ^^
23>                                                                              ^^^^^
24>                                                                                   ^^
25>                                                                                     ^^^^^^^^^^
26>                                                                                               ^^
27>                                                                                                 ^
28>                                                                                                  ^^
29>                                                                                                    ^^^^^^^^^^^^^^
30>                                                                                                                  ^^
31>                                                                                                                    ^^^^
1 >
  >
2 >for
3 >    
4 >    (let {name: nameA } of 
5 >     [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]
6 >               
7 >                 [
8 >                       { 
9 >                         name
10>                             : 
11>                               "mower"
12>                                      , 
13>                                        skill
14>                                             : 
15>                                               "mowing"
16>                                                        }
17>                                                         , 
18>                                                           { 
19>                                                             name
20>                                                                 : 
21>                                                                   "trimmer"
22>                                                                            , 
23>                                                                              skill
24>                                                                                   : 
25>                                                                                     "trimming"
26>                                                                                                }
27>                                                                                                 ]
28>                                                                                                  
29>                                                                                                    [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]
30>                                                                                                                  
31>                                                                                                                    [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]
1 >Emitted(33, 1) Source(35, 1) + SourceIndex(0)
2 >Emitted(33, 4) Source(35, 4) + SourceIndex(0)
3 >Emitted(33, 5) Source(35, 5) + SourceIndex(0)
4 >Emitted(33, 6) Source(35, 28) + SourceIndex(0)
5 >Emitted(33, 16) Source(35, 104) + SourceIndex(0)
6 >Emitted(33, 18) Source(35, 28) + SourceIndex(0)
7 >Emitted(33, 24) Source(35, 29) + SourceIndex(0)
8 >Emitted(33, 26) Source(35, 31) + SourceIndex(0)
9 >Emitted(33, 30) Source(35, 35) + SourceIndex(0)
10>Emitted(33, 32) Source(35, 37) + SourceIndex(0)
11>Emitted(33, 39) Source(35, 44) + SourceIndex(0)
12>Emitted(33, 41) Source(35, 46) + SourceIndex(0)
13>Emitted(33, 46) Source(35, 51) + SourceIndex(0)
14>Emitted(33, 48) Source(35, 53) + SourceIndex(0)
15>Emitted(33, 56) Source(35, 61) + SourceIndex(0)
16>Emitted(33, 58) Source(35, 63) + SourceIndex(0)
17>Emitted(33, 60) Source(35, 65) + SourceIndex(0)
18>Emitted(33, 62) Source(35, 67) + SourceIndex(0)
19>Emitted(33, 66) Source(35, 71) + SourceIndex(0)
20>Emitted(33, 68) Source(35, 73) + SourceIndex(0)
21>Emitted(33, 77) Source(35, 82) + SourceIndex(0)
22>Emitted(33, 79) Source(35, 84) + SourceIndex(0)
23>Emitted(33, 84) Source(35, 89) + SourceIndex(0)
24>Emitted(33, 86) Source(35, 91) + SourceIndex(0)
25>Emitted(33, 96) Source(35, 101) + SourceIndex(0)
26>Emitted(33, 98) Source(35, 103) + SourceIndex(0)
27>Emitted(33, 99) Source(35, 104) + SourceIndex(0)
28>Emitted(33, 101) Source(35, 28) + SourceIndex(0)
29>Emitted(33, 115) Source(35, 104) + SourceIndex(0)
30>Emitted(33, 117) Source(35, 28) + SourceIndex(0)
31>Emitted(33, 121) Source(35, 104) + SourceIndex(0)
---
>>>    var nameA = _a[_i].name;
1 >^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^^^^^
1 >
2 >    
3 >        name: nameA
1 >Emitted(34, 5) Source(35, 11) + SourceIndex(0)
2 >Emitted(34, 9) Source(35, 11) + SourceIndex(0)
3 >Emitted(34, 28) Source(35, 22) + SourceIndex(0)
---
>>>    console.log(nameA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 > } of [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA
7 >                     )
8 >                      ;
1 >Emitted(35, 5) Source(36, 5) + SourceIndex(0)
2 >Emitted(35, 12) Source(36, 12) + SourceIndex(0)
3 >Emitted(35, 13) Source(36, 13) + SourceIndex(0)
4 >Emitted(35, 16) Source(36, 16) + SourceIndex(0)
5 >Emitted(35, 17) Source(36, 17) + SourceIndex(0)
6 >Emitted(35, 22) Source(36, 22) + SourceIndex(0)
7 >Emitted(35, 23) Source(36, 23) + SourceIndex(0)
8 >Emitted(35, 24) Source(36, 24) + SourceIndex(0)
---
>>>}
1 >^
2 > ^^^^^->
1 >
  >}
1 >Emitted(36, 2) Source(37, 2) + SourceIndex(0)
---
>>>try {
>>>    for (var multiRobots_1 = { iterator: __values(multiRobots) }; __step(multiRobots_1);) {
1->^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^^^^
7 >                             ^^
8 >                               ^^^^^^^^^^
9 >                                         ^^^^^^^^^
10>                                                  ^^^^^^^^^^^
11>                                                             ^
12>                                                              ^^
13>                                                                ^^
14>                                                                  ^^^^^^^^^^^^^^^^^^^^^
15>                                                                                       ^^^^^^^^^^^^^^^->
1->
  >
2 >    for
3 >        
4 >        (let { skills: { primary: primaryA, secondary: secondaryA } } of 
5 >         
6 >             
7 >                             
8 >                               
9 >                                         
10>                                                  multiRobots
11>                                                             
12>                                                              
13>                                                                
14>                                                                  let { skills: { primary: primaryA, secondary: secondaryA } }
1->Emitted(38, 5) Source(38, 1) + SourceIndex(0)
2 >Emitted(38, 8) Source(38, 4) + SourceIndex(0)
3 >Emitted(38, 9) Source(38, 5) + SourceIndex(0)
4 >Emitted(38, 10) Source(38, 70) + SourceIndex(0)
5 >Emitted(38, 14) Source(38, 70) + SourceIndex(0)
6 >Emitted(38, 30) Source(38, 70) + SourceIndex(0)
7 >Emitted(38, 32) Source(38, 70) + SourceIndex(0)
8 >Emitted(38, 42) Source(38, 70) + SourceIndex(0)
9 >Emitted(38, 51) Source(38, 70) + SourceIndex(0)
10>Emitted(38, 62) Source(38, 81) + SourceIndex(0)
11>Emitted(38, 63) Source(38, 81) + SourceIndex(0)
12>Emitted(38, 65) Source(38, 81) + SourceIndex(0)
13>Emitted(38, 67) Source(38, 6) + SourceIndex(0)
14>Emitted(38, 88) Source(38, 66) + SourceIndex(0)
---
>>>        var _b = multiRobots_1.result.value.skills, primaryA = _b.primary, secondaryA = _b.secondary;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                  ^^
5 >                                                    ^^^^^^^^^^^^^^^^^^^^^
6 >                                                                         ^^
7 >                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            skills: { primary: primaryA, secondary: secondaryA }
4 >                                                  
5 >                                                    primary: primaryA
6 >                                                                         , 
7 >                                                                           secondary: secondaryA
1->Emitted(39, 9) Source(38, 12) + SourceIndex(0)
2 >Emitted(39, 13) Source(38, 12) + SourceIndex(0)
3 >Emitted(39, 51) Source(38, 64) + SourceIndex(0)
4 >Emitted(39, 53) Source(38, 22) + SourceIndex(0)
5 >Emitted(39, 74) Source(38, 39) + SourceIndex(0)
6 >Emitted(39, 76) Source(38, 41) + SourceIndex(0)
7 >Emitted(39, 101) Source(38, 62) + SourceIndex(0)
---
>>>        console.log(primaryA);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^^^^
7 >                            ^
8 >                             ^
1 > } } of multiRobots) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    primaryA
7 >                            )
8 >                             ;
1 >Emitted(40, 9) Source(39, 5) + SourceIndex(0)
2 >Emitted(40, 16) Source(39, 12) + SourceIndex(0)
3 >Emitted(40, 17) Source(39, 13) + SourceIndex(0)
4 >Emitted(40, 20) Source(39, 16) + SourceIndex(0)
5 >Emitted(40, 21) Source(39, 17) + SourceIndex(0)
6 >Emitted(40, 29) Source(39, 25) + SourceIndex(0)
7 >Emitted(40, 30) Source(39, 26) + SourceIndex(0)
8 >Emitted(40, 31) Source(39, 27) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(41, 6) Source(40, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_3_1) { e_3 = { error: e_3_1 }; }
>>>finally {
>>>    try { __close(multiRobots_1); } finally { if (e_3) throw e_3.error; }
>>>}
>>>try {
>>>    for (var iterator_2 = { iterator: __values(getMultiRobots()) }; __step(iterator_2);) {
1 >^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^
7 >                          ^^
8 >                            ^^^^^^^^^^
9 >                                      ^^^^^^^^^
10>                                               ^^^^^^^^^^^^^^
11>                                                             ^^
12>                                                               ^
13>                                                                ^^
14>                                                                  ^^
15>                                                                    ^^^^^^^^^^^^^^^^^^
16>                                                                                      ^^^^^^^^^^^^^->
1 >
  >
2 >    for
3 >        
4 >        (let { skills: { primary: primaryA, secondary: secondaryA } } of 
5 >         
6 >             
7 >                          
8 >                            
9 >                                      
10>                                               getMultiRobots
11>                                                             ()
12>                                                               
13>                                                                
14>                                                                  
15>                                                                    let { skills: { primary: primaryA, secondary: secondaryA } }
1 >Emitted(48, 5) Source(41, 1) + SourceIndex(0)
2 >Emitted(48, 8) Source(41, 4) + SourceIndex(0)
3 >Emitted(48, 9) Source(41, 5) + SourceIndex(0)
4 >Emitted(48, 10) Source(41, 70) + SourceIndex(0)
5 >Emitted(48, 14) Source(41, 70) + SourceIndex(0)
6 >Emitted(48, 27) Source(41, 70) + SourceIndex(0)
7 >Emitted(48, 29) Source(41, 70) + SourceIndex(0)
8 >Emitted(48, 39) Source(41, 70) + SourceIndex(0)
9 >Emitted(48, 48) Source(41, 70) + SourceIndex(0)
10>Emitted(48, 62) Source(41, 84) + SourceIndex(0)
11>Emitted(48, 64) Source(41, 86) + SourceIndex(0)
12>Emitted(48, 65) Source(41, 86) + SourceIndex(0)
13>Emitted(48, 67) Source(41, 86) + SourceIndex(0)
14>Emitted(48, 69) Source(41, 6) + SourceIndex(0)
15>Emitted(48, 87) Source(41, 66) + SourceIndex(0)
---
>>>        var _c = iterator_2.result.value.skills, primaryA = _c.primary, secondaryA = _c.secondary;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                               ^^
5 >                                                 ^^^^^^^^^^^^^^^^^^^^^
6 >                                                                      ^^
7 >                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            skills: { primary: primaryA, secondary: secondaryA }
4 >                                               
5 >                                                 primary: primaryA
6 >                                                                      , 
7 >                                                                        secondary: secondaryA
1->Emitted(49, 9) Source(41, 12) + SourceIndex(0)
2 >Emitted(49, 13) Source(41, 12) + SourceIndex(0)
3 >Emitted(49, 48) Source(41, 64) + SourceIndex(0)
4 >Emitted(49, 50) Source(41, 22) + SourceIndex(0)
5 >Emitted(49, 71) Source(41, 39) + SourceIndex(0)
6 >Emitted(49, 73) Source(41, 41) + SourceIndex(0)
7 >Emitted(49, 98) Source(41, 62) + SourceIndex(0)
---
>>>        console.log(primaryA);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^^^^
7 >                            ^
8 >                             ^
1 > } } of getMultiRobots()) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    primaryA
7 >                            )
8 >                             ;
1 >Emitted(50, 9) Source(42, 5) + SourceIndex(0)
2 >Emitted(50, 16) Source(42, 12) + SourceIndex(0)
3 >Emitted(50, 17) Source(42, 13) + SourceIndex(0)
4 >Emitted(50, 20) Source(42, 16) + SourceIndex(0)
5 >Emitted(50, 21) Source(42, 17) + SourceIndex(0)
6 >Emitted(50, 29) Source(42, 25) + SourceIndex(0)
7 >Emitted(50, 30) Source(42, 26) + SourceIndex(0)
8 >Emitted(50, 31) Source(42, 27) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(51, 6) Source(43, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_4_1) { e_4 = { error: e_4_1 }; }
>>>finally {
>>>    try { __close(iterator_2); } finally { if (e_4) throw e_4.error; }
>>>}
>>>for (var _d = 0, _e = [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
1 >
2 >^^^
3 >   ^
4 >    ^
5 >     ^^^^^^^^^^
6 >               ^^
7 >                 ^^^^^^
8 >                       ^^
9 >                         ^^^^
10>                             ^^
11>                               ^^^^^^^
12>                                      ^^
13>                                        ^^^^^^
14>                                              ^^
15>                                                ^^
16>                                                  ^^^^^^^
17>                                                         ^^
18>                                                           ^^^^^^^^
19>                                                                   ^^
20>                                                                     ^^^^^^^^^
21>                                                                              ^^
22>                                                                                ^^^^^^
23>                                                                                      ^^
24>                                                                                        ^^
25>                                                                                          ^^^^^^^^^^^^^^->
1 >
  >
2 >for
3 >    
4 >    (let { skills: { primary: primaryA, secondary: secondaryA } } of 
5 >     [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
  >         { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]
6 >               
7 >                 [
8 >                       { 
9 >                         name
10>                             : 
11>                               "mower"
12>                                      , 
13>                                        skills
14>                                              : 
15>                                                { 
16>                                                  primary
17>                                                         : 
18>                                                           "mowing"
19>                                                                   , 
20>                                                                     secondary
21>                                                                              : 
22>                                                                                "none"
23>                                                                                       }
24>                                                                                         }
1 >Emitted(57, 1) Source(44, 1) + SourceIndex(0)
2 >Emitted(57, 4) Source(44, 4) + SourceIndex(0)
3 >Emitted(57, 5) Source(44, 5) + SourceIndex(0)
4 >Emitted(57, 6) Source(44, 70) + SourceIndex(0)
5 >Emitted(57, 16) Source(45, 79) + SourceIndex(0)
6 >Emitted(57, 18) Source(44, 70) + SourceIndex(0)
7 >Emitted(57, 24) Source(44, 71) + SourceIndex(0)
8 >Emitted(57, 26) Source(44, 73) + SourceIndex(0)
9 >Emitted(57, 30) Source(44, 77) + SourceIndex(0)
10>Emitted(57, 32) Source(44, 79) + SourceIndex(0)
11>Emitted(57, 39) Source(44, 86) + SourceIndex(0)
12>Emitted(57, 41) Source(44, 88) + SourceIndex(0)
13>Emitted(57, 47) Source(44, 94) + SourceIndex(0)
14>Emitted(57, 49) Source(44, 96) + SourceIndex(0)
15>Emitted(57, 51) Source(44, 98) + SourceIndex(0)
16>Emitted(57, 58) Source(44, 105) + SourceIndex(0)
17>Emitted(57, 60) Source(44, 107) + SourceIndex(0)
18>Emitted(57, 68) Source(44, 115) + SourceIndex(0)
19>Emitted(57, 70) Source(44, 117) + SourceIndex(0)
20>Emitted(57, 79) Source(44, 126) + SourceIndex(0)
21>Emitted(57, 81) Source(44, 128) + SourceIndex(0)
22>Emitted(57, 87) Source(44, 134) + SourceIndex(0)
23>Emitted(57, 89) Source(44, 136) + SourceIndex(0)
24>Emitted(57, 91) Source(44, 138) + SourceIndex(0)
---
>>>    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]; _d < _e.length; _d++) {
1->^^^^
2 >    ^^
3 >      ^^^^
4 >          ^^
5 >            ^^^^^^^^^
6 >                     ^^
7 >                       ^^^^^^
8 >                             ^^
9 >                               ^^
10>                                 ^^^^^^^
11>                                        ^^
12>                                          ^^^^^^^^^^
13>                                                    ^^
14>                                                      ^^^^^^^^^
15>                                                               ^^
16>                                                                 ^^^^^^^^
17>                                                                         ^^
18>                                                                           ^^
19>                                                                             ^
20>                                                                              ^^
21>                                                                                ^^^^^^^^^^^^^^
22>                                                                                              ^^
23>                                                                                                ^^^^
1->,
  >    
2 >    { 
3 >      name
4 >          : 
5 >            "trimmer"
6 >                     , 
7 >                       skills
8 >                             : 
9 >                               { 
10>                                 primary
11>                                        : 
12>                                          "trimming"
13>                                                    , 
14>                                                      secondary
15>                                                               : 
16>                                                                 "edging"
17>                                                                          }
18>                                                                            }
19>                                                                             ]
20>                                                                              
21>                                                                                [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
  >                                                                                    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]
22>                                                                                              
23>                                                                                                [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
  >                                                                                                    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]
1->Emitted(58, 5) Source(45, 5) + SourceIndex(0)
2 >Emitted(58, 7) Source(45, 7) + SourceIndex(0)
3 >Emitted(58, 11) Source(45, 11) + SourceIndex(0)
4 >Emitted(58, 13) Source(45, 13) + SourceIndex(0)
5 >Emitted(58, 22) Source(45, 22) + SourceIndex(0)
6 >Emitted(58, 24) Source(45, 24) + SourceIndex(0)
7 >Emitted(58, 30) Source(45, 30) + SourceIndex(0)
8 >Emitted(58, 32) Source(45, 32) + SourceIndex(0)
9 >Emitted(58, 34) Source(45, 34) + SourceIndex(0)
10>Emitted(58, 41) Source(45, 41) + SourceIndex(0)
11>Emitted(58, 43) Source(45, 43) + SourceIndex(0)
12>Emitted(58, 53) Source(45, 53) + SourceIndex(0)
13>Emitted(58, 55) Source(45, 55) + SourceIndex(0)
14>Emitted(58, 64) Source(45, 64) + SourceIndex(0)
15>Emitted(58, 66) Source(45, 66) + SourceIndex(0)
16>Emitted(58, 74) Source(45, 74) + SourceIndex(0)
17>Emitted(58, 76) Source(45, 76) + SourceIndex(0)
18>Emitted(58, 78) Source(45, 78) + SourceIndex(0)
19>Emitted(58, 79) Source(45, 79) + SourceIndex(0)
20>Emitted(58, 81) Source(44, 70) + SourceIndex(0)
21>Emitted(58, 95) Source(45, 79) + SourceIndex(0)
22>Emitted(58, 97) Source(44, 70) + SourceIndex(0)
23>Emitted(58, 101) Source(45, 79) + SourceIndex(0)
---
>>>    var _f = _e[_d].skills, primaryA = _f.primary, secondaryA = _f.secondary;
1 >^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^^^^
4 >                          ^^
5 >                            ^^^^^^^^^^^^^^^^^^^^^
6 >                                                 ^^
7 >                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
1 >
2 >    
3 >        skills: { primary: primaryA, secondary: secondaryA }
4 >                          
5 >                            primary: primaryA
6 >                                                 , 
7 >                                                   secondary: secondaryA
1 >Emitted(59, 5) Source(44, 12) + SourceIndex(0)
2 >Emitted(59, 9) Source(44, 12) + SourceIndex(0)
3 >Emitted(59, 27) Source(44, 64) + SourceIndex(0)
4 >Emitted(59, 29) Source(44, 22) + SourceIndex(0)
5 >Emitted(59, 50) Source(44, 39) + SourceIndex(0)
6 >Emitted(59, 52) Source(44, 41) + SourceIndex(0)
7 >Emitted(59, 77) Source(44, 62) + SourceIndex(0)
---
>>>    console.log(primaryA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^
7 >                        ^
8 >                         ^
1 > } } of [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
  >    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                primaryA
7 >                        )
8 >                         ;
1 >Emitted(60, 5) Source(46, 5) + SourceIndex(0)
2 >Emitted(60, 12) Source(46, 12) + SourceIndex(0)
3 >Emitted(60, 13) Source(46, 13) + SourceIndex(0)
4 >Emitted(60, 16) Source(46, 16) + SourceIndex(0)
5 >Emitted(60, 17) Source(46, 17) + SourceIndex(0)
6 >Emitted(60, 25) Source(46, 25) + SourceIndex(0)
7 >Emitted(60, 26) Source(46, 26) + SourceIndex(0)
8 >Emitted(60, 27) Source(46, 27) + SourceIndex(0)
---
>>>}
1 >^
2 > ^^^^^->
1 >
  >}
1 >Emitted(61, 2) Source(47, 2) + SourceIndex(0)
---
>>>try {
>>>    for (var robots_2 = { iterator: __values(robots) }; __step(robots_2);) {
1->^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^
7 >                        ^^
8 >                          ^^^^^^^^^^
9 >                                    ^^^^^^^^^
10>                                             ^^^^^^
11>                                                   ^
12>                                                    ^^
13>                                                      ^^
14>                                                        ^^^^^^^^^^^^^^^^
15>                                                                        ^^^^->
1->
  >
  >
2 >    for
3 >        
4 >        (let {name: nameA, skill: skillA } of 
5 >         
6 >             
7 >                        
8 >                          
9 >                                    
10>                                             robots
11>                                                   
12>                                                    
13>                                                      
14>                                                        let {name: nameA, skill: skillA }
1->Emitted(63, 5) Source(49, 1) + SourceIndex(0)
2 >Emitted(63, 8) Source(49, 4) + SourceIndex(0)
3 >Emitted(63, 9) Source(49, 5) + SourceIndex(0)
4 >Emitted(63, 10) Source(49, 43) + SourceIndex(0)
5 >Emitted(63, 14) Source(49, 43) + SourceIndex(0)
6 >Emitted(63, 25) Source(49, 43) + SourceIndex(0)
7 >Emitted(63, 27) Source(49, 43) + SourceIndex(0)
8 >Emitted(63, 37) Source(49, 43) + SourceIndex(0)
9 >Emitted(63, 46) Source(49, 43) + SourceIndex(0)
10>Emitted(63, 52) Source(49, 49) + SourceIndex(0)
11>Emitted(63, 53) Source(49, 49) + SourceIndex(0)
12>Emitted(63, 55) Source(49, 49) + SourceIndex(0)
13>Emitted(63, 57) Source(49, 6) + SourceIndex(0)
14>Emitted(63, 73) Source(49, 39) + SourceIndex(0)
---
>>>        var _g = robots_2.result.value, nameA = _g.name, skillA = _g.skill;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                      ^^
5 >                                        ^^^^^^^^^^^^^^^
6 >                                                       ^^
7 >                                                         ^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            {name: nameA, skill: skillA }
4 >                                      
5 >                                        name: nameA
6 >                                                       , 
7 >                                                         skill: skillA
1->Emitted(64, 9) Source(49, 10) + SourceIndex(0)
2 >Emitted(64, 13) Source(49, 10) + SourceIndex(0)
3 >Emitted(64, 39) Source(49, 39) + SourceIndex(0)
4 >Emitted(64, 41) Source(49, 11) + SourceIndex(0)
5 >Emitted(64, 56) Source(49, 22) + SourceIndex(0)
6 >Emitted(64, 58) Source(49, 24) + SourceIndex(0)
7 >Emitted(64, 75) Source(49, 37) + SourceIndex(0)
---
>>>        console.log(nameA);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^
7 >                         ^
8 >                          ^
1 > } of robots) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    nameA
7 >                         )
8 >                          ;
1 >Emitted(65, 9) Source(50, 5) + SourceIndex(0)
2 >Emitted(65, 16) Source(50, 12) + SourceIndex(0)
3 >Emitted(65, 17) Source(50, 13) + SourceIndex(0)
4 >Emitted(65, 20) Source(50, 16) + SourceIndex(0)
5 >Emitted(65, 21) Source(50, 17) + SourceIndex(0)
6 >Emitted(65, 26) Source(50, 22) + SourceIndex(0)
7 >Emitted(65, 27) Source(50, 23) + SourceIndex(0)
8 >Emitted(65, 28) Source(50, 24) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(66, 6) Source(51, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_5_1) { e_5 = { error: e_5_1 }; }
>>>finally {
>>>    try { __close(robots_2); } finally { if (e_5) throw e_5.error; }
>>>}
>>>try {
>>>    for (var iterator_3 = { iterator: __values(getRobots()) }; __step(iterator_3);) {
1 >^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^
7 >                          ^^
8 >                            ^^^^^^^^^^
9 >                                      ^^^^^^^^^
10>                                               ^^^^^^^^^
11>                                                        ^^
12>                                                          ^
13>                                                           ^^
14>                                                             ^^
15>                                                               ^^^^^^^^^^^^^^^^^^
1 >
  >
2 >    for
3 >        
4 >        (let {name: nameA, skill: skillA } of 
5 >         
6 >             
7 >                          
8 >                            
9 >                                      
10>                                               getRobots
11>                                                        ()
12>                                                          
13>                                                           
14>                                                             
15>                                                               let {name: nameA, skill: skillA }
1 >Emitted(73, 5) Source(52, 1) + SourceIndex(0)
2 >Emitted(73, 8) Source(52, 4) + SourceIndex(0)
3 >Emitted(73, 9) Source(52, 5) + SourceIndex(0)
4 >Emitted(73, 10) Source(52, 43) + SourceIndex(0)
5 >Emitted(73, 14) Source(52, 43) + SourceIndex(0)
6 >Emitted(73, 27) Source(52, 43) + SourceIndex(0)
7 >Emitted(73, 29) Source(52, 43) + SourceIndex(0)
8 >Emitted(73, 39) Source(52, 43) + SourceIndex(0)
9 >Emitted(73, 48) Source(52, 43) + SourceIndex(0)
10>Emitted(73, 57) Source(52, 52) + SourceIndex(0)
11>Emitted(73, 59) Source(52, 54) + SourceIndex(0)
12>Emitted(73, 60) Source(52, 54) + SourceIndex(0)
13>Emitted(73, 62) Source(52, 54) + SourceIndex(0)
14>Emitted(73, 64) Source(52, 6) + SourceIndex(0)
15>Emitted(73, 82) Source(52, 39) + SourceIndex(0)
---
>>>        var _h = iterator_3.result.value, nameA = _h.name, skillA = _h.skill;
1 >^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                        ^^
5 >                                          ^^^^^^^^^^^^^^^
6 >                                                         ^^
7 >                                                           ^^^^^^^^^^^^^^^^^
1 >
2 >        
3 >            {name: nameA, skill: skillA }
4 >                                        
5 >                                          name: nameA
6 >                                                         , 
7 >                                                           skill: skillA
1 >Emitted(74, 9) Source(52, 10) + SourceIndex(0)
2 >Emitted(74, 13) Source(52, 10) + SourceIndex(0)
3 >Emitted(74, 41) Source(52, 39) + SourceIndex(0)
4 >Emitted(74, 43) Source(52, 11) + SourceIndex(0)
5 >Emitted(74, 58) Source(52, 22) + SourceIndex(0)
6 >Emitted(74, 60) Source(52, 24) + SourceIndex(0)
7 >Emitted(74, 77) Source(52, 37) + SourceIndex(0)
---
>>>        console.log(nameA);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^
7 >                         ^
8 >                          ^
1 > } of getRobots()) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    nameA
7 >                         )
8 >                          ;
1 >Emitted(75, 9) Source(53, 5) + SourceIndex(0)
2 >Emitted(75, 16) Source(53, 12) + SourceIndex(0)
3 >Emitted(75, 17) Source(53, 13) + SourceIndex(0)
4 >Emitted(75, 20) Source(53, 16) + SourceIndex(0)
5 >Emitted(75, 21) Source(53, 17) + SourceIndex(0)
6 >Emitted(75, 26) Source(53, 22) + SourceIndex(0)
7 >Emitted(75, 27) Source(53, 23) + SourceIndex(0)
8 >Emitted(75, 28) Source(53, 24) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(76, 6) Source(54, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_6_1) { e_6 = { error: e_6_1 }; }
>>>finally {
>>>    try { __close(iterator_3); } finally { if (e_6) throw e_6.error; }
>>>}
>>>for (var _j = 0, _k = [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]; _j < _k.length; _j++) {
1 >
2 >^^^
3 >   ^
4 >    ^
5 >     ^^^^^^^^^^
6 >               ^^
7 >                 ^^^^^^
8 >                       ^^
9 >                         ^^^^
10>                             ^^
11>                               ^^^^^^^
12>                                      ^^
13>                                        ^^^^^
14>                                             ^^
15>                                               ^^^^^^^^
16>                                                       ^^
17>                                                         ^^
18>                                                           ^^
19>                                                             ^^^^
20>                                                                 ^^
21>                                                                   ^^^^^^^^^
22>                                                                            ^^
23>                                                                              ^^^^^
24>                                                                                   ^^
25>                                                                                     ^^^^^^^^^^
26>                                                                                               ^^
27>                                                                                                 ^
28>                                                                                                  ^^
29>                                                                                                    ^^^^^^^^^^^^^^
30>                                                                                                                  ^^
31>                                                                                                                    ^^^^
1 >
  >
2 >for
3 >    
4 >    (let {name: nameA, skill: skillA } of 
5 >     [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]
6 >               
7 >                 [
8 >                       { 
9 >                         name
10>                             : 
11>                               "mower"
12>                                      , 
13>                                        skill
14>                                             : 
15>                                               "mowing"
16>                                                        }
17>                                                         , 
18>                                                           { 
19>                                                             name
20>                                                                 : 
21>                                                                   "trimmer"
22>                                                                            , 
23>                                                                              skill
24>                                                                                   : 
25>                                                                                     "trimming"
26>                                                                                                }
27>                                                                                                 ]
28>                                                                                                  
29>                                                                                                    [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]
30>                                                                                                                  
31>                                                                                                                    [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]
1 >Emitted(82, 1) Source(55, 1) + SourceIndex(0)
2 >Emitted(82, 4) Source(55, 4) + SourceIndex(0)
3 >Emitted(82, 5) Source(55, 5) + SourceIndex(0)
4 >Emitted(82, 6) Source(55, 43) + SourceIndex(0)
5 >Emitted(82, 16) Source(55, 119) + SourceIndex(0)
6 >Emitted(82, 18) Source(55, 43) + SourceIndex(0)
7 >Emitted(82, 24) Source(55, 44) + SourceIndex(0)
8 >Emitted(82, 26) Source(55, 46) + SourceIndex(0)
9 >Emitted(82, 30) Source(55, 50) + SourceIndex(0)
10>Emitted(82, 32) Source(55, 52) + SourceIndex(0)
11>Emitted(82, 39) Source(55, 59) + SourceIndex(0)
12>Emitted(82, 41) Source(55, 61) + SourceIndex(0)
13>Emitted(82, 46) Source(55, 66) + SourceIndex(0)
14>Emitted(82, 48) Source(55, 68) + SourceIndex(0)
15>Emitted(82, 56) Source(55, 76) + SourceIndex(0)
16>Emitted(82, 58) Source(55, 78) + SourceIndex(0)
17>Emitted(82, 60) Source(55, 80) + SourceIndex(0)
18>Emitted(82, 62) Source(55, 82) + SourceIndex(0)
19>Emitted(82, 66) Source(55, 86) + SourceIndex(0)
20>Emitted(82, 68) Source(55, 88) + SourceIndex(0)
21>Emitted(82, 77) Source(55, 97) + SourceIndex(0)
22>Emitted(82, 79) Source(55, 99) + SourceIndex(0)
23>Emitted(82, 84) Source(55, 104) + SourceIndex(0)
24>Emitted(82, 86) Source(55, 106) + SourceIndex(0)
25>Emitted(82, 96) Source(55, 116) + SourceIndex(0)
26>Emitted(82, 98) Source(55, 118) + SourceIndex(0)
27>Emitted(82, 99) Source(55, 119) + SourceIndex(0)
28>Emitted(82, 101) Source(55, 43) + SourceIndex(0)
29>Emitted(82, 115) Source(55, 119) + SourceIndex(0)
30>Emitted(82, 117) Source(55, 43) + SourceIndex(0)
31>Emitted(82, 121) Source(55, 119) + SourceIndex(0)
---
>>>    var _l = _k[_j], nameA = _l.name, skillA = _l.skill;
1 >^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^
4 >                   ^^
5 >                     ^^^^^^^^^^^^^^^
6 >                                    ^^
7 >                                      ^^^^^^^^^^^^^^^^^
1 >
2 >    
3 >        {name: nameA, skill: skillA }
4 >                   
5 >                     name: nameA
6 >                                    , 
7 >                                      skill: skillA
1 >Emitted(83, 5) Source(55, 10) + SourceIndex(0)
2 >Emitted(83, 9) Source(55, 10) + SourceIndex(0)
3 >Emitted(83, 20) Source(55, 39) + SourceIndex(0)
4 >Emitted(83, 22) Source(55, 11) + SourceIndex(0)
5 >Emitted(83, 37) Source(55, 22) + SourceIndex(0)
6 >Emitted(83, 39) Source(55, 24) + SourceIndex(0)
7 >Emitted(83, 56) Source(55, 37) + SourceIndex(0)
---
>>>    console.log(nameA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 > } of [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA
7 >                     )
8 >                      ;
1 >Emitted(84, 5) Source(56, 5) + SourceIndex(0)
2 >Emitted(84, 12) Source(56, 12) + SourceIndex(0)
3 >Emitted(84, 13) Source(56, 13) + SourceIndex(0)
4 >Emitted(84, 16) Source(56, 16) + SourceIndex(0)
5 >Emitted(84, 17) Source(56, 17) + SourceIndex(0)
6 >Emitted(84, 22) Source(56, 22) + SourceIndex(0)
7 >Emitted(84, 23) Source(56, 23) + SourceIndex(0)
8 >Emitted(84, 24) Source(56, 24) + SourceIndex(0)
---
>>>}
1 >^
2 > ^^^^^->
1 >
  >}
1 >Emitted(85, 2) Source(57, 2) + SourceIndex(0)
---
>>>try {
>>>    for (var multiRobots_2 = { iterator: __values(multiRobots) }; __step(multiRobots_2);) {
1->^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^^^^
7 >                             ^^
8 >                               ^^^^^^^^^^
9 >                                         ^^^^^^^^^
10>                                                  ^^^^^^^^^^^
11>                                                             ^
12>                                                              ^^
13>                                                                ^^
14>                                                                  ^^^^^^^^^^^^^^^^^^^^^
15>                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
2 >    for
3 >        
4 >        (let {name: nameA, skills: { primary: primaryA, secondary: secondaryA } } of 
5 >         
6 >             
7 >                             
8 >                               
9 >                                         
10>                                                  multiRobots
11>                                                             
12>                                                              
13>                                                                
14>                                                                  let {name: nameA, skills: { primary: primaryA, secondary: secondaryA } }
1->Emitted(87, 5) Source(58, 1) + SourceIndex(0)
2 >Emitted(87, 8) Source(58, 4) + SourceIndex(0)
3 >Emitted(87, 9) Source(58, 5) + SourceIndex(0)
4 >Emitted(87, 10) Source(58, 82) + SourceIndex(0)
5 >Emitted(87, 14) Source(58, 82) + SourceIndex(0)
6 >Emitted(87, 30) Source(58, 82) + SourceIndex(0)
7 >Emitted(87, 32) Source(58, 82) + SourceIndex(0)
8 >Emitted(87, 42) Source(58, 82) + SourceIndex(0)
9 >Emitted(87, 51) Source(58, 82) + SourceIndex(0)
10>Emitted(87, 62) Source(58, 93) + SourceIndex(0)
11>Emitted(87, 63) Source(58, 93) + SourceIndex(0)
12>Emitted(87, 65) Source(58, 93) + SourceIndex(0)
13>Emitted(87, 67) Source(58, 6) + SourceIndex(0)
14>Emitted(87, 88) Source(58, 78) + SourceIndex(0)
---
>>>        var _m = multiRobots_2.result.value, nameA = _m.name, _o = _m.skills, primaryA = _o.primary, secondaryA = _o.secondary;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                           ^^
5 >                                             ^^^^^^^^^^^^^^^
6 >                                                            ^^
7 >                                                              ^^^^^^^^^^^^^^
8 >                                                                            ^^
9 >                                                                              ^^^^^^^^^^^^^^^^^^^^^
10>                                                                                                   ^^
11>                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            {name: nameA, skills: { primary: primaryA, secondary: secondaryA } }
4 >                                           
5 >                                             name: nameA
6 >                                                            , 
7 >                                                              skills: { primary: primaryA, secondary: secondaryA }
8 >                                                                            
9 >                                                                              primary: primaryA
10>                                                                                                   , 
11>                                                                                                     secondary: secondaryA
1->Emitted(88, 9) Source(58, 10) + SourceIndex(0)
2 >Emitted(88, 13) Source(58, 10) + SourceIndex(0)
3 >Emitted(88, 44) Source(58, 78) + SourceIndex(0)
4 >Emitted(88, 46) Source(58, 11) + SourceIndex(0)
5 >Emitted(88, 61) Source(58, 22) + SourceIndex(0)
6 >Emitted(88, 63) Source(58, 24) + SourceIndex(0)
7 >Emitted(88, 77) Source(58, 76) + SourceIndex(0)
8 >Emitted(88, 79) Source(58, 34) + SourceIndex(0)
9 >Emitted(88, 100) Source(58, 51) + SourceIndex(0)
10>Emitted(88, 102) Source(58, 53) + SourceIndex(0)
11>Emitted(88, 127) Source(58, 74) + SourceIndex(0)
---
>>>        console.log(nameA);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^
7 >                         ^
8 >                          ^
1 > } } of multiRobots) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    nameA
7 >                         )
8 >                          ;
1 >Emitted(89, 9) Source(59, 5) + SourceIndex(0)
2 >Emitted(89, 16) Source(59, 12) + SourceIndex(0)
3 >Emitted(89, 17) Source(59, 13) + SourceIndex(0)
4 >Emitted(89, 20) Source(59, 16) + SourceIndex(0)
5 >Emitted(89, 21) Source(59, 17) + SourceIndex(0)
6 >Emitted(89, 26) Source(59, 22) + SourceIndex(0)
7 >Emitted(89, 27) Source(59, 23) + SourceIndex(0)
8 >Emitted(89, 28) Source(59, 24) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(90, 6) Source(60, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_7_1) { e_7 = { error: e_7_1 }; }
>>>finally {
>>>    try { __close(multiRobots_2); } finally { if (e_7) throw e_7.error; }
>>>}
>>>try {
>>>    for (var iterator_4 = { iterator: __values(getMultiRobots()) }; __step(iterator_4);) {
1 >^^^^
2 >    ^^^
3 >       ^
4 >        ^
5 >         ^^^^
6 >             ^^^^^^^^^^^^^
7 >                          ^^
8 >                            ^^^^^^^^^^
9 >                                      ^^^^^^^^^
10>                                               ^^^^^^^^^^^^^^
11>                                                             ^^
12>                                                               ^
13>                                                                ^^
14>                                                                  ^^
15>                                                                    ^^^^^^^^^^^^^^^^^^
16>                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >    for
3 >        
4 >        (let {name: nameA, skills: { primary: primaryA, secondary: secondaryA } } of 
5 >         
6 >             
7 >                          
8 >                            
9 >                                      
10>                                               getMultiRobots
11>                                                             ()
12>                                                               
13>                                                                
14>                                                                  
15>                                                                    let {name: nameA, skills: { primary: primaryA, secondary: secondaryA } }
1 >Emitted(97, 5) Source(61, 1) + SourceIndex(0)
2 >Emitted(97, 8) Source(61, 4) + SourceIndex(0)
3 >Emitted(97, 9) Source(61, 5) + SourceIndex(0)
4 >Emitted(97, 10) Source(61, 82) + SourceIndex(0)
5 >Emitted(97, 14) Source(61, 82) + SourceIndex(0)
6 >Emitted(97, 27) Source(61, 82) + SourceIndex(0)
7 >Emitted(97, 29) Source(61, 82) + SourceIndex(0)
8 >Emitted(97, 39) Source(61, 82) + SourceIndex(0)
9 >Emitted(97, 48) Source(61, 82) + SourceIndex(0)
10>Emitted(97, 62) Source(61, 96) + SourceIndex(0)
11>Emitted(97, 64) Source(61, 98) + SourceIndex(0)
12>Emitted(97, 65) Source(61, 98) + SourceIndex(0)
13>Emitted(97, 67) Source(61, 98) + SourceIndex(0)
14>Emitted(97, 69) Source(61, 6) + SourceIndex(0)
15>Emitted(97, 87) Source(61, 78) + SourceIndex(0)
---
>>>        var _p = iterator_4.result.value, nameA = _p.name, _q = _p.skills, primaryA = _q.primary, secondaryA = _q.secondary;
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                        ^^
5 >                                          ^^^^^^^^^^^^^^^
6 >                                                         ^^
7 >                                                           ^^^^^^^^^^^^^^
8 >                                                                         ^^
9 >                                                                           ^^^^^^^^^^^^^^^^^^^^^
10>                                                                                                ^^
11>                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >        
3 >            {name: nameA, skills: { primary: primaryA, secondary: secondaryA } }
4 >                                        
5 >                                          name: nameA
6 >                                                         , 
7 >                                                           skills: { primary: primaryA, secondary: secondaryA }
8 >                                                                         
9 >                                                                           primary: primaryA
10>                                                                                                , 
11>                                                                                                  secondary: secondaryA
1->Emitted(98, 9) Source(61, 10) + SourceIndex(0)
2 >Emitted(98, 13) Source(61, 10) + SourceIndex(0)
3 >Emitted(98, 41) Source(61, 78) + SourceIndex(0)
4 >Emitted(98, 43) Source(61, 11) + SourceIndex(0)
5 >Emitted(98, 58) Source(61, 22) + SourceIndex(0)
6 >Emitted(98, 60) Source(61, 24) + SourceIndex(0)
7 >Emitted(98, 74) Source(61, 76) + SourceIndex(0)
8 >Emitted(98, 76) Source(61, 34) + SourceIndex(0)
9 >Emitted(98, 97) Source(61, 51) + SourceIndex(0)
10>Emitted(98, 99) Source(61, 53) + SourceIndex(0)
11>Emitted(98, 124) Source(61, 74) + SourceIndex(0)
---
>>>        console.log(nameA);
1 >^^^^^^^^
2 >        ^^^^^^^
3 >               ^
4 >                ^^^
5 >                   ^
6 >                    ^^^^^
7 >                         ^
8 >                          ^
1 > } } of getMultiRobots()) {
  >    
2 >        console
3 >               .
4 >                log
5 >                   (
6 >                    nameA
7 >                         )
8 >                          ;
1 >Emitted(99, 9) Source(62, 5) + SourceIndex(0)
2 >Emitted(99, 16) Source(62, 12) + SourceIndex(0)
3 >Emitted(99, 17) Source(62, 13) + SourceIndex(0)
4 >Emitted(99, 20) Source(62, 16) + SourceIndex(0)
5 >Emitted(99, 21) Source(62, 17) + SourceIndex(0)
6 >Emitted(99, 26) Source(62, 22) + SourceIndex(0)
7 >Emitted(99, 27) Source(62, 23) + SourceIndex(0)
8 >Emitted(99, 28) Source(62, 24) + SourceIndex(0)
---
>>>    }
1 >^^^^^
1 >
  >}
1 >Emitted(100, 6) Source(63, 2) + SourceIndex(0)
---
>>>}
>>>catch (e_8_1) { e_8 = { error: e_8_1 }; }
>>>finally {
>>>    try { __close(iterator_4); } finally { if (e_8) throw e_8.error; }
>>>}
>>>for (var _r = 0, _s = [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
1 >
2 >^^^
3 >   ^
4 >    ^
5 >     ^^^^^^^^^^
6 >               ^^
7 >                 ^^^^^^
8 >                       ^^
9 >                         ^^^^
10>                             ^^
11>                               ^^^^^^^
12>                                      ^^
13>                                        ^^^^^^
14>                                              ^^
15>                                                ^^
16>                                                  ^^^^^^^
17>                                                         ^^
18>                                                           ^^^^^^^^
19>                                                                   ^^
20>                                                                     ^^^^^^^^^
21>                                                                              ^^
22>                                                                                ^^^^^^
23>                                                                                      ^^
24>                                                                                        ^^
25>                                                                                          ^^^^^^^^^^^^^^->
1 >
  >
2 >for
3 >    
4 >    (let {name: nameA, skills: { primary: primaryA, secondary: secondaryA } } of 
5 >     [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
  >         { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]
6 >               
7 >                 [
8 >                       { 
9 >                         name
10>                             : 
11>                               "mower"
12>                                      , 
13>                                        skills
14>                                              : 
15>                                                { 
16>                                                  primary
17>                                                         : 
18>                                                           "mowing"
19>                                                                   , 
20>                                                                     secondary
21>                                                                              : 
22>                                                                                "none"
23>                                                                                       }
24>                                                                                         }
1 >Emitted(106, 1) Source(64, 1) + SourceIndex(0)
2 >Emitted(106, 4) Source(64, 4) + SourceIndex(0)
3 >Emitted(106, 5) Source(64, 5) + SourceIndex(0)
4 >Emitted(106, 6) Source(64, 82) + SourceIndex(0)
5 >Emitted(106, 16) Source(65, 79) + SourceIndex(0)
6 >Emitted(106, 18) Source(64, 82) + SourceIndex(0)
7 >Emitted(106, 24) Source(64, 83) + SourceIndex(0)
8 >Emitted(106, 26) Source(64, 85) + SourceIndex(0)
9 >Emitted(106, 30) Source(64, 89) + SourceIndex(0)
10>Emitted(106, 32) Source(64, 91) + SourceIndex(0)
11>Emitted(106, 39) Source(64, 98) + SourceIndex(0)
12>Emitted(106, 41) Source(64, 100) + SourceIndex(0)
13>Emitted(106, 47) Source(64, 106) + SourceIndex(0)
14>Emitted(106, 49) Source(64, 108) + SourceIndex(0)
15>Emitted(106, 51) Source(64, 110) + SourceIndex(0)
16>Emitted(106, 58) Source(64, 117) + SourceIndex(0)
17>Emitted(106, 60) Source(64, 119) + SourceIndex(0)
18>Emitted(106, 68) Source(64, 127) + SourceIndex(0)
19>Emitted(106, 70) Source(64, 129) + SourceIndex(0)
20>Emitted(106, 79) Source(64, 138) + SourceIndex(0)
21>Emitted(106, 81) Source(64, 140) + SourceIndex(0)
22>Emitted(106, 87) Source(64, 146) + SourceIndex(0)
23>Emitted(106, 89) Source(64, 148) + SourceIndex(0)
24>Emitted(106, 91) Source(64, 150) + SourceIndex(0)
---
>>>    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]; _r < _s.length; _r++) {
1->^^^^
2 >    ^^
3 >      ^^^^
4 >          ^^
5 >            ^^^^^^^^^
6 >                     ^^
7 >                       ^^^^^^
8 >                             ^^
9 >                               ^^
10>                                 ^^^^^^^
11>                                        ^^
12>                                          ^^^^^^^^^^
13>                                                    ^^
14>                                                      ^^^^^^^^^
15>                                                               ^^
16>                                                                 ^^^^^^^^
17>                                                                         ^^
18>                                                                           ^^
19>                                                                             ^
20>                                                                              ^^
21>                                                                                ^^^^^^^^^^^^^^
22>                                                                                              ^^
23>                                                                                                ^^^^
24>                                                                                                    ^^^^->
1->,
  >    
2 >    { 
3 >      name
4 >          : 
5 >            "trimmer"
6 >                     , 
7 >                       skills
8 >                             : 
9 >                               { 
10>                                 primary
11>                                        : 
12>                                          "trimming"
13>                                                    , 
14>                                                      secondary
15>                                                               : 
16>                                                                 "edging"
17>                                                                          }
18>                                                                            }
19>                                                                             ]
20>                                                                              
21>                                                                                [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
  >                                                                                    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]
22>                                                                                              
23>                                                                                                [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
  >                                                                                                    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]
1->Emitted(107, 5) Source(65, 5) + SourceIndex(0)
2 >Emitted(107, 7) Source(65, 7) + SourceIndex(0)
3 >Emitted(107, 11) Source(65, 11) + SourceIndex(0)
4 >Emitted(107, 13) Source(65, 13) + SourceIndex(0)
5 >Emitted(107, 22) Source(65, 22) + SourceIndex(0)
6 >Emitted(107, 24) Source(65, 24) + SourceIndex(0)
7 >Emitted(107, 30) Source(65, 30) + SourceIndex(0)
8 >Emitted(107, 32) Source(65, 32) + SourceIndex(0)
9 >Emitted(107, 34) Source(65, 34) + SourceIndex(0)
10>Emitted(107, 41) Source(65, 41) + SourceIndex(0)
11>Emitted(107, 43) Source(65, 43) + SourceIndex(0)
12>Emitted(107, 53) Source(65, 53) + SourceIndex(0)
13>Emitted(107, 55) Source(65, 55) + SourceIndex(0)
14>Emitted(107, 64) Source(65, 64) + SourceIndex(0)
15>Emitted(107, 66) Source(65, 66) + SourceIndex(0)
16>Emitted(107, 74) Source(65, 74) + SourceIndex(0)
17>Emitted(107, 76) Source(65, 76) + SourceIndex(0)
18>Emitted(107, 78) Source(65, 78) + SourceIndex(0)
19>Emitted(107, 79) Source(65, 79) + SourceIndex(0)
20>Emitted(107, 81) Source(64, 82) + SourceIndex(0)
21>Emitted(107, 95) Source(65, 79) + SourceIndex(0)
22>Emitted(107, 97) Source(64, 82) + SourceIndex(0)
23>Emitted(107, 101) Source(65, 79) + SourceIndex(0)
---
>>>    var _t = _s[_r], nameA = _t.name, _u = _t.skills, primaryA = _u.primary, secondaryA = _u.secondary;
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^
4 >                   ^^
5 >                     ^^^^^^^^^^^^^^^
6 >                                    ^^
7 >                                      ^^^^^^^^^^^^^^
8 >                                                    ^^
9 >                                                      ^^^^^^^^^^^^^^^^^^^^^
10>                                                                           ^^
11>                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^
1->
2 >    
3 >        {name: nameA, skills: { primary: primaryA, secondary: secondaryA } }
4 >                   
5 >                     name: nameA
6 >                                    , 
7 >                                      skills: { primary: primaryA, secondary: secondaryA }
8 >                                                    
9 >                                                      primary: primaryA
10>                                                                           , 
11>                                                                             secondary: secondaryA
1->Emitted(108, 5) Source(64, 10) + SourceIndex(0)
2 >Emitted(108, 9) Source(64, 10) + SourceIndex(0)
3 >Emitted(108, 20) Source(64, 78) + SourceIndex(0)
4 >Emitted(108, 22) Source(64, 11) + SourceIndex(0)
5 >Emitted(108, 37) Source(64, 22) + SourceIndex(0)
6 >Emitted(108, 39) Source(64, 24) + SourceIndex(0)
7 >Emitted(108, 53) Source(64, 76) + SourceIndex(0)
8 >Emitted(108, 55) Source(64, 34) + SourceIndex(0)
9 >Emitted(108, 76) Source(64, 51) + SourceIndex(0)
10>Emitted(108, 78) Source(64, 53) + SourceIndex(0)
11>Emitted(108, 103) Source(64, 74) + SourceIndex(0)
---
>>>    console.log(nameA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 > } } of [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
  >    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA
7 >                     )
8 >                      ;
1 >Emitted(109, 5) Source(66, 5) + SourceIndex(0)
2 >Emitted(109, 12) Source(66, 12) + SourceIndex(0)
3 >Emitted(109, 13) Source(66, 13) + SourceIndex(0)
4 >Emitted(109, 16) Source(66, 16) + SourceIndex(0)
5 >Emitted(109, 17) Source(66, 17) + SourceIndex(0)
6 >Emitted(109, 22) Source(66, 22) + SourceIndex(0)
7 >Emitted(109, 23) Source(66, 23) + SourceIndex(0)
8 >Emitted(109, 24) Source(66, 24) + SourceIndex(0)
---
>>>}
1 >^
2 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >}
1 >Emitted(110, 2) Source(67, 2) + SourceIndex(0)
---
>>>var e_1, e_2, e_3, e_4, e_5, e_6, e_7, e_8;
>>>//# sourceMappingURL=sourceMapValidationDestructuringForOfObjectBindingPattern.js.map