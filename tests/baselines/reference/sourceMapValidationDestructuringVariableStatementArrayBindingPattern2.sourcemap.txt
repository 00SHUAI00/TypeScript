===================================================================
JsFile: sourceMapValidationDestructuringVariableStatementArrayBindingPattern2.js
mapUrl: sourceMapValidationDestructuringVariableStatementArrayBindingPattern2.js.map
sourceRoot: 
sources: sourceMapValidationDestructuringVariableStatementArrayBindingPattern2.ts
===================================================================
-------------------------------------------------------------------
emittedFile:tests/cases/compiler/sourceMapValidationDestructuringVariableStatementArrayBindingPattern2.js
sourceFile:sourceMapValidationDestructuringVariableStatementArrayBindingPattern2.ts
-------------------------------------------------------------------
>>>var __read = (this && this.__read) || function (o, n) {
>>>    if (!(m = typeof Symbol === "function" && o[Symbol.iterator])) return o;
>>>    var m, i = m.call(o), ar = [], r, e;
>>>    try { while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value); }
>>>    catch (error) { e = { error: error }; }
>>>    finally { try { if (m = !(r && r.done) && i["return"]) m.call(i); } finally { if (e) throw e.error; } }
>>>    return ar;
>>>};
>>>var multiRobotA = ["mower", ["mowing", ""]];
1 >
2 >^^^^
3 >    ^^^^^^^^^^^
4 >               ^^^
5 >                  ^
6 >                   ^^^^^^^
7 >                          ^^
8 >                            ^
9 >                             ^^^^^^^^
10>                                     ^^
11>                                       ^^
12>                                         ^
13>                                          ^
14>                                           ^
15>                                            ^^^^^^^^^^^->
1 >declare var console: {
  >    log(msg: string): void;
  >}
  >type MultiSkilledRobot = [string, [string, string]];
  >
2 >var 
3 >    multiRobotA
4 >               : MultiSkilledRobot = 
5 >                  [
6 >                   "mower"
7 >                          , 
8 >                            [
9 >                             "mowing"
10>                                     , 
11>                                       ""
12>                                         ]
13>                                          ]
14>                                           ;
1 >Emitted(9, 1) Source(5, 1) + SourceIndex(0)
2 >Emitted(9, 5) Source(5, 5) + SourceIndex(0)
3 >Emitted(9, 16) Source(5, 16) + SourceIndex(0)
4 >Emitted(9, 19) Source(5, 38) + SourceIndex(0)
5 >Emitted(9, 20) Source(5, 39) + SourceIndex(0)
6 >Emitted(9, 27) Source(5, 46) + SourceIndex(0)
7 >Emitted(9, 29) Source(5, 48) + SourceIndex(0)
8 >Emitted(9, 30) Source(5, 49) + SourceIndex(0)
9 >Emitted(9, 38) Source(5, 57) + SourceIndex(0)
10>Emitted(9, 40) Source(5, 59) + SourceIndex(0)
11>Emitted(9, 42) Source(5, 61) + SourceIndex(0)
12>Emitted(9, 43) Source(5, 62) + SourceIndex(0)
13>Emitted(9, 44) Source(5, 63) + SourceIndex(0)
14>Emitted(9, 45) Source(5, 64) + SourceIndex(0)
---
>>>var multiRobotB = ["trimmer", ["trimming", "edging"]];
1->
2 >^^^^
3 >    ^^^^^^^^^^^
4 >               ^^^
5 >                  ^
6 >                   ^^^^^^^^^
7 >                            ^^
8 >                              ^
9 >                               ^^^^^^^^^^
10>                                         ^^
11>                                           ^^^^^^^^
12>                                                   ^
13>                                                    ^
14>                                                     ^
1->
  >
2 >var 
3 >    multiRobotB
4 >               : MultiSkilledRobot = 
5 >                  [
6 >                   "trimmer"
7 >                            , 
8 >                              [
9 >                               "trimming"
10>                                         , 
11>                                           "edging"
12>                                                   ]
13>                                                    ]
14>                                                     ;
1->Emitted(10, 1) Source(6, 1) + SourceIndex(0)
2 >Emitted(10, 5) Source(6, 5) + SourceIndex(0)
3 >Emitted(10, 16) Source(6, 16) + SourceIndex(0)
4 >Emitted(10, 19) Source(6, 38) + SourceIndex(0)
5 >Emitted(10, 20) Source(6, 39) + SourceIndex(0)
6 >Emitted(10, 29) Source(6, 48) + SourceIndex(0)
7 >Emitted(10, 31) Source(6, 50) + SourceIndex(0)
8 >Emitted(10, 32) Source(6, 51) + SourceIndex(0)
9 >Emitted(10, 42) Source(6, 61) + SourceIndex(0)
10>Emitted(10, 44) Source(6, 63) + SourceIndex(0)
11>Emitted(10, 52) Source(6, 71) + SourceIndex(0)
12>Emitted(10, 53) Source(6, 72) + SourceIndex(0)
13>Emitted(10, 54) Source(6, 73) + SourceIndex(0)
14>Emitted(10, 55) Source(6, 74) + SourceIndex(0)
---
>>>var _a = __read(multiRobotA, 2), skillA = _a[1];
1 >
2 >^^^^
3 >    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                               ^^
5 >                                 ^^^^^^^^^^^^^^
6 >                                               ^
7 >                                                ^->
1 >
  >
  >let 
2 >
3 >    [, skillA] = multiRobotA
4 >                               
5 >                                 skillA
6 >                                               ] = multiRobotA;
1 >Emitted(11, 1) Source(8, 5) + SourceIndex(0)
2 >Emitted(11, 5) Source(8, 5) + SourceIndex(0)
3 >Emitted(11, 32) Source(8, 29) + SourceIndex(0)
4 >Emitted(11, 34) Source(8, 8) + SourceIndex(0)
5 >Emitted(11, 48) Source(8, 14) + SourceIndex(0)
6 >Emitted(11, 49) Source(8, 30) + SourceIndex(0)
---
>>>var _b = __read(multiRobotB, 1), nameMB = _b[0];
1->
2 >^^^^
3 >    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                               ^^
5 >                                 ^^^^^^^^^^^^^^
6 >                                               ^
7 >                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >let 
2 >
3 >    [nameMB] = multiRobotB
4 >                               
5 >                                 nameMB
6 >                                               ] = multiRobotB;
1->Emitted(12, 1) Source(9, 5) + SourceIndex(0)
2 >Emitted(12, 5) Source(9, 5) + SourceIndex(0)
3 >Emitted(12, 32) Source(9, 27) + SourceIndex(0)
4 >Emitted(12, 34) Source(9, 6) + SourceIndex(0)
5 >Emitted(12, 48) Source(9, 12) + SourceIndex(0)
6 >Emitted(12, 49) Source(9, 28) + SourceIndex(0)
---
>>>var _c = __read(multiRobotA, 2), nameMA = _c[0], _d = __read(_c[1], 2), primarySkillA = _d[0], secondarySkillA = _d[1];
1->
2 >^^^^
3 >    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                               ^^
5 >                                 ^^^^^^^^^^^^^^
6 >                                               ^^
7 >                                                 ^^^^^^^^^^^^^^^^^^^^^
8 >                                                                      ^^
9 >                                                                        ^^^^^^^^^^^^^^^^^^^^^
10>                                                                                             ^^
11>                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^
12>                                                                                                                      ^
1->
  >let 
2 >
3 >    [nameMA, [primarySkillA, secondarySkillA]] = multiRobotA
4 >                               
5 >                                 nameMA
6 >                                               , 
7 >                                                 [primarySkillA, secondarySkillA]
8 >                                                                      
9 >                                                                        primarySkillA
10>                                                                                             , 
11>                                                                                               secondarySkillA
12>                                                                                                                      ]] = multiRobotA;
1->Emitted(13, 1) Source(10, 5) + SourceIndex(0)
2 >Emitted(13, 5) Source(10, 5) + SourceIndex(0)
3 >Emitted(13, 32) Source(10, 61) + SourceIndex(0)
4 >Emitted(13, 34) Source(10, 6) + SourceIndex(0)
5 >Emitted(13, 48) Source(10, 12) + SourceIndex(0)
6 >Emitted(13, 50) Source(10, 14) + SourceIndex(0)
7 >Emitted(13, 71) Source(10, 46) + SourceIndex(0)
8 >Emitted(13, 73) Source(10, 15) + SourceIndex(0)
9 >Emitted(13, 94) Source(10, 28) + SourceIndex(0)
10>Emitted(13, 96) Source(10, 30) + SourceIndex(0)
11>Emitted(13, 119) Source(10, 45) + SourceIndex(0)
12>Emitted(13, 120) Source(10, 62) + SourceIndex(0)
---
>>>var nameMC = ["roomba", ["vaccum", "mopping"]][0];
1 >
2 >^^^^
3 >    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                                 ^
5 >                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
  >let [
2 >
3 >    nameMC
4 >                                                 ] = ["roomba", ["vaccum", "mopping"]];
1 >Emitted(14, 1) Source(12, 6) + SourceIndex(0)
2 >Emitted(14, 5) Source(12, 6) + SourceIndex(0)
3 >Emitted(14, 50) Source(12, 12) + SourceIndex(0)
4 >Emitted(14, 51) Source(12, 50) + SourceIndex(0)
---
>>>var _e = ["roomba", ["vaccum", "mopping"]], nameMC2 = _e[0], _f = __read(_e[1], 2), primarySkillC = _f[0], secondarySkillC = _f[1];
1->
2 >^^^^
3 >    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                          ^^
5 >                                            ^^^^^^^^^^^^^^^
6 >                                                           ^^
7 >                                                             ^^^^^^^^^^^^^^^^^^^^^
8 >                                                                                  ^^
9 >                                                                                    ^^^^^^^^^^^^^^^^^^^^^
10>                                                                                                         ^^
11>                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^
12>                                                                                                                                  ^
1->
  >let 
2 >
3 >    [nameMC2, [primarySkillC, secondarySkillC]] = ["roomba", ["vaccum", "mopping"]]
4 >                                          
5 >                                            nameMC2
6 >                                                           , 
7 >                                                             [primarySkillC, secondarySkillC]
8 >                                                                                  
9 >                                                                                    primarySkillC
10>                                                                                                         , 
11>                                                                                                           secondarySkillC
12>                                                                                                                                  ]] = ["roomba", ["vaccum", "mopping"]];
1->Emitted(15, 1) Source(13, 5) + SourceIndex(0)
2 >Emitted(15, 5) Source(13, 5) + SourceIndex(0)
3 >Emitted(15, 43) Source(13, 84) + SourceIndex(0)
4 >Emitted(15, 45) Source(13, 6) + SourceIndex(0)
5 >Emitted(15, 60) Source(13, 13) + SourceIndex(0)
6 >Emitted(15, 62) Source(13, 15) + SourceIndex(0)
7 >Emitted(15, 83) Source(13, 47) + SourceIndex(0)
8 >Emitted(15, 85) Source(13, 16) + SourceIndex(0)
9 >Emitted(15, 106) Source(13, 29) + SourceIndex(0)
10>Emitted(15, 108) Source(13, 31) + SourceIndex(0)
11>Emitted(15, 131) Source(13, 46) + SourceIndex(0)
12>Emitted(15, 132) Source(13, 85) + SourceIndex(0)
---
>>>var _g = __read(multiRobotA), multiRobotAInfo = _g.slice(0);
1 >
2 >^^^^
3 >    ^^^^^^^^^^^^^^^^^^^^^^^^
4 >                            ^^
5 >                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 >                                                           ^
1 >
  >
  >let 
2 >
3 >    [...multiRobotAInfo] = multiRobotA
4 >                            
5 >                              ...multiRobotAInfo
6 >                                                           ] = multiRobotA;
1 >Emitted(16, 1) Source(15, 5) + SourceIndex(0)
2 >Emitted(16, 5) Source(15, 5) + SourceIndex(0)
3 >Emitted(16, 29) Source(15, 39) + SourceIndex(0)
4 >Emitted(16, 31) Source(15, 6) + SourceIndex(0)
5 >Emitted(16, 60) Source(15, 24) + SourceIndex(0)
6 >Emitted(16, 61) Source(15, 40) + SourceIndex(0)
---
>>>if (nameMB == nameMA) {
1 >
2 >^^
3 >  ^
4 >   ^
5 >    ^^^^^^
6 >          ^^^^
7 >              ^^^^^^
8 >                    ^
9 >                     ^
10>                      ^
11>                       ^^^^^^^^^^^^^^^^^->
1 >
  >
  >
2 >if
3 >   
4 >   (
5 >    nameMB
6 >           == 
7 >              nameMA
8 >                    )
9 >                      
10>                      {
1 >Emitted(17, 1) Source(17, 1) + SourceIndex(0)
2 >Emitted(17, 3) Source(17, 3) + SourceIndex(0)
3 >Emitted(17, 4) Source(17, 4) + SourceIndex(0)
4 >Emitted(17, 5) Source(17, 5) + SourceIndex(0)
5 >Emitted(17, 11) Source(17, 11) + SourceIndex(0)
6 >Emitted(17, 15) Source(17, 15) + SourceIndex(0)
7 >Emitted(17, 21) Source(17, 21) + SourceIndex(0)
8 >Emitted(17, 22) Source(17, 22) + SourceIndex(0)
9 >Emitted(17, 23) Source(17, 23) + SourceIndex(0)
10>Emitted(17, 24) Source(17, 24) + SourceIndex(0)
---
>>>    console.log(skillA[0] + skillA[1]);
1->^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
9 >                        ^
10>                         ^^^
11>                            ^^^^^^
12>                                  ^
13>                                   ^
14>                                    ^
15>                                     ^
16>                                      ^
1->
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                skillA
7 >                      [
8 >                       0
9 >                        ]
10>                          + 
11>                            skillA
12>                                  [
13>                                   1
14>                                    ]
15>                                     )
16>                                      ;
1->Emitted(18, 5) Source(18, 5) + SourceIndex(0)
2 >Emitted(18, 12) Source(18, 12) + SourceIndex(0)
3 >Emitted(18, 13) Source(18, 13) + SourceIndex(0)
4 >Emitted(18, 16) Source(18, 16) + SourceIndex(0)
5 >Emitted(18, 17) Source(18, 17) + SourceIndex(0)
6 >Emitted(18, 23) Source(18, 23) + SourceIndex(0)
7 >Emitted(18, 24) Source(18, 24) + SourceIndex(0)
8 >Emitted(18, 25) Source(18, 25) + SourceIndex(0)
9 >Emitted(18, 26) Source(18, 26) + SourceIndex(0)
10>Emitted(18, 29) Source(18, 29) + SourceIndex(0)
11>Emitted(18, 35) Source(18, 35) + SourceIndex(0)
12>Emitted(18, 36) Source(18, 36) + SourceIndex(0)
13>Emitted(18, 37) Source(18, 37) + SourceIndex(0)
14>Emitted(18, 38) Source(18, 38) + SourceIndex(0)
15>Emitted(18, 39) Source(18, 39) + SourceIndex(0)
16>Emitted(18, 40) Source(18, 40) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(19, 1) Source(19, 1) + SourceIndex(0)
2 >Emitted(19, 2) Source(19, 2) + SourceIndex(0)
---
>>>//# sourceMappingURL=sourceMapValidationDestructuringVariableStatementArrayBindingPattern2.js.map