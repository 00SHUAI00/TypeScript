=== tests/cases/compiler/declFileTypeAnnotationVisibilityErrorAccessors.ts ===

module m {
>m : Symbol(m, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 0, 0))

    class private1 {
>private1 : Symbol(private1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 1, 10))
    }

    export class public1 {
>public1 : Symbol(public1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 3, 5))
    }

    module m2 {
>m2 : Symbol(m2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 6, 5))

        export class public2 {
>public2 : Symbol(public2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 8, 15))
        }
    }
    
    export class c {
>c : Symbol(c, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 11, 5))

        // getter with annotation
        get foo1(): private1 {
>foo1 : Symbol(foo1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 13, 20))
>private1 : Symbol(private1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 1, 10))

            return;
        }

        // getter without annotation
        get foo2() {
>foo2 : Symbol(foo2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 17, 9))

            return new private1();
>private1 : Symbol(private1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 1, 10))
        }

        // setter with annotation
        set foo3(param: private1) {
>foo3 : Symbol(foo3, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 22, 9))
>param : Symbol(param, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 25, 17))
>private1 : Symbol(private1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 1, 10))
        }

        // Both - getter without annotation, setter with annotation
        get foo4() {
>foo4 : Symbol(foo4, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 26, 9), Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 31, 9))

            return new private1();
>private1 : Symbol(private1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 1, 10))
        }
        set foo4(param: private1) {
>foo4 : Symbol(foo4, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 26, 9), Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 31, 9))
>param : Symbol(param, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 32, 17))
>private1 : Symbol(private1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 1, 10))
        }

        // Both - with annotation
        get foo5(): private1 {
>foo5 : Symbol(foo5, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 33, 9), Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 38, 9))
>private1 : Symbol(private1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 1, 10))

            return;
        }
        set foo5(param: private1) {
>foo5 : Symbol(foo5, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 33, 9), Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 38, 9))
>param : Symbol(param, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 39, 17))
>private1 : Symbol(private1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 1, 10))
        }
    
        // getter with annotation
        get foo11(): public1 {
>foo11 : Symbol(foo11, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 40, 9))
>public1 : Symbol(public1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 3, 5))

            return;
        }

        // getter without annotation
        get foo12() {
>foo12 : Symbol(foo12, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 45, 9))

            return new public1();
>public1 : Symbol(public1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 3, 5))
        }

        // setter with annotation
        set foo13(param: public1) {
>foo13 : Symbol(foo13, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 50, 9))
>param : Symbol(param, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 53, 18))
>public1 : Symbol(public1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 3, 5))
        }

        // Both - getter without annotation, setter with annotation
        get foo14() {
>foo14 : Symbol(foo14, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 54, 9), Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 59, 9))

            return new public1();
>public1 : Symbol(public1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 3, 5))
        }
        set foo14(param: public1) {
>foo14 : Symbol(foo14, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 54, 9), Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 59, 9))
>param : Symbol(param, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 60, 18))
>public1 : Symbol(public1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 3, 5))
        }

        // Both - with annotation
        get foo15(): public1 {
>foo15 : Symbol(foo15, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 61, 9), Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 66, 9))
>public1 : Symbol(public1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 3, 5))

            return;
        }
        set foo15(param: public1) {
>foo15 : Symbol(foo15, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 61, 9), Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 66, 9))
>param : Symbol(param, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 67, 18))
>public1 : Symbol(public1, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 3, 5))
        }

        // getter with annotation
        get foo111(): m2.public2 {
>foo111 : Symbol(foo111, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 68, 9))
>m2 : Symbol(m2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 6, 5))
>public2 : Symbol(m2.public2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 8, 15))

            return;
        }

        // getter without annotation
        get foo112() {
>foo112 : Symbol(foo112, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 73, 9))

            return new m2.public2();
>m2.public2 : Symbol(m2.public2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 8, 15))
>m2 : Symbol(m2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 6, 5))
>public2 : Symbol(m2.public2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 8, 15))
        }

        // setter with annotation
        set foo113(param: m2.public2) {
>foo113 : Symbol(foo113, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 78, 9))
>param : Symbol(param, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 81, 19))
>m2 : Symbol(m2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 6, 5))
>public2 : Symbol(m2.public2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 8, 15))
        }

        // Both - getter without annotation, setter with annotation
        get foo114() {
>foo114 : Symbol(foo114, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 82, 9), Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 87, 9))

            return new m2.public2();
>m2.public2 : Symbol(m2.public2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 8, 15))
>m2 : Symbol(m2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 6, 5))
>public2 : Symbol(m2.public2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 8, 15))
        }
        set foo114(param: m2.public2) {
>foo114 : Symbol(foo114, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 82, 9), Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 87, 9))
>param : Symbol(param, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 88, 19))
>m2 : Symbol(m2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 6, 5))
>public2 : Symbol(m2.public2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 8, 15))
        }

        // Both - with annotation
        get foo115(): m2.public2 {
>foo115 : Symbol(foo115, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 89, 9), Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 94, 9))
>m2 : Symbol(m2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 6, 5))
>public2 : Symbol(m2.public2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 8, 15))

            return;
        }
        set foo115(param: m2.public2) {
>foo115 : Symbol(foo115, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 89, 9), Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 94, 9))
>param : Symbol(param, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 95, 19))
>m2 : Symbol(m2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 6, 5))
>public2 : Symbol(m2.public2, Decl(declFileTypeAnnotationVisibilityErrorAccessors.ts, 8, 15))
        }
    }
}

